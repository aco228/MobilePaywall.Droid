using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class Html5ContentDetailManager : IHtml5ContentDetailManager
  {
    public List<Html5ContentDetail> Load(Html5Content htmlContent)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, htmlContent);
    }

    public List<Html5ContentDetail> Load(IConnectionInfo connection, Html5Content htmlContent)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, htmlContent);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, htmlContent);
    }

    public List<Html5ContentDetail> Load(ISqlConnectionInfo connection, Html5Content htmlContent)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[hcd].Html5ContentID = @Html5ContentID";
      parameters.Arguments.Add("Html5ContentID", htmlContent.ID);
      return this.LoadMany(connection, parameters);
    }

    public List<Html5ContentDetail> Load(Service service)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, service);
    }

    public List<Html5ContentDetail> Load(IConnectionInfo connection, Service service)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, service);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, service);
    }

    public List<Html5ContentDetail> Load(ISqlConnectionInfo connection, Service service)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[hcd].ServiceID = @ServiceID";
      parameters.Arguments.Add("ServiceID", service.ID);
      return this.LoadMany(connection, parameters);
    }

    public List<Html5ContentDetail> Load(Service service, Language language)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, service, language);
    }

    public List<Html5ContentDetail> Load(IConnectionInfo connection, Service service, Language language)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, service, language);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, service, language);
    }

    public List<Html5ContentDetail> Load(ISqlConnectionInfo connection, Service service, Language language)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[hcd].ServiceID = @ServiceID AND [hcd].LanguageID = @LanguageID";
      parameters.Arguments.Add("ServiceID", service.ID);
      parameters.Arguments.Add("LanguageID", language.ID);
      return this.LoadMany(connection, parameters);
    }

    public Html5ContentDetail Load(Html5Content htmlContent, Language language)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, htmlContent, language);
    }

    public Html5ContentDetail Load(IConnectionInfo connection, Html5Content htmlContent, Language language)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, htmlContent, language);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, htmlContent, language);
    }

    public Html5ContentDetail Load(ISqlConnectionInfo connection, Html5Content htmlContent, Language language)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[hcd].Html5ContentID = @Html5ContentID AND [hcd].LanguageID = @LanguageID";
      parameters.Arguments.Add("Html5ContentID", htmlContent.ID);
      parameters.Arguments.Add("LanguageID", language.ID);
      return this.Load(connection, parameters);
    }

    public T Load<T>(Html5Content htmlContent, Service service, Language language)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load<T>(connection, htmlContent, service, language);
    }

    public T Load<T>(IConnectionInfo connection, Html5Content htmlContent, Service service, Language language)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load<T>(sqlConnection, htmlContent, service, language);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load<T>(sqlConnection, htmlContent, service, language);
    }

    public T Load<T>(ISqlConnectionInfo connection, Html5Content htmlContent, Service service, Language language)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[hcd_hc].Html5ContentID = @Html5ContentID AND ([hcd_s].ServiceID = @ServiceID OR [hcd_s].ServiceID IS NULL) AND ([hcd_l].LanguageID = @LanguageID OR [hcd_l].LanguageID IS NULL)";
      parameters.Arguments.Add("Html5ContentID", htmlContent.ID);
      parameters.Arguments.Add("ServiceID", service.ID);
      parameters.Arguments.Add("LanguageID", language.ID);

      if (typeof(T).Equals(typeof(List<Html5ContentDetail>)))
        return (T)Convert.ChangeType(this.LoadMany(connection, parameters), typeof(T));
      else
        return (T)Convert.ChangeType(this.Load(connection, parameters), typeof(T));
    }

  }
}

