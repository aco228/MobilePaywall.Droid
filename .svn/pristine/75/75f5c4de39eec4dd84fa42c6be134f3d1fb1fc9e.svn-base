using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IImageFormatManager : IDataManager<ImageFormat> 
  {
	

  }

  public partial class ImageFormat : MobilePaywallObject<IImageFormatManager> 
  {
		private ImageFormatType _imageFormatType;
		private string _name = String.Empty;
		private string _mimeType = String.Empty;
		private string _extension = String.Empty;
		

		public ImageFormatType ImageFormatType  { get { return this._imageFormatType; } set { this._imageFormatType = value; } }
		public string Name{ get {return this._name; } set { this._name = value;} }
		public string MimeType{ get {return this._mimeType; } set { this._mimeType = value;} }
		public string Extension{ get {return this._extension; } set { this._extension = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public ImageFormat()
    { 
    }

    public ImageFormat(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public ImageFormat(int id,  ImageFormatType imageFormatType, string name, string mimeType, string extension, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._imageFormatType = imageFormatType;
			this._name = name;
			this._mimeType = mimeType;
			this._extension = extension;
			
    }

    public override object Clone(bool deepClone)
    {
      return new ImageFormat(-1,  this.ImageFormatType,this.Name,this.MimeType,this.Extension, DateTime.Now, DateTime.Now);
    }
  }
}

