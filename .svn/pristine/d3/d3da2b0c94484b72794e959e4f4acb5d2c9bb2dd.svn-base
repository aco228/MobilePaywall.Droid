using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IIPRangeManager : IDataManager<IPRange> 
  {
	

  }

  public partial class IPRange : MobilePaywallObject<IIPRangeManager> 
  {
		private Country _country;
		private MobileOperator _mobileOperator;
		private string _name = String.Empty;
		private string _value = String.Empty;
		

		public Country Country 
		{
			get
			{
				if (this._country != null &&
						this._country.IsEmpty)
					if (this.ConnectionContext != null)
						this._country = Country.CreateManager().LazyLoad(this.ConnectionContext, this._country.ID) as Country;
					else
						this._country = Country.CreateManager().LazyLoad(this._country.ID) as Country;
				return this._country;
			}
			set { _country = value; }
		}

		public MobileOperator MobileOperator 
		{
			get
			{
				if (this._mobileOperator != null &&
						this._mobileOperator.IsEmpty)
					if (this.ConnectionContext != null)
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this.ConnectionContext, this._mobileOperator.ID) as MobileOperator;
					else
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this._mobileOperator.ID) as MobileOperator;
				return this._mobileOperator;
			}
			set { _mobileOperator = value; }
		}

		public string Name{ get {return this._name; } set { this._name = value;} }
		public string Value{ get {return this._value; } set { this._value = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public IPRange()
    { 
    }

    public IPRange(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public IPRange(int id,  Country country, MobileOperator mobileOperator, string name, string value, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._country = country;
			this._mobileOperator = mobileOperator;
			this._name = name;
			this._value = value;
			
    }

    public override object Clone(bool deepClone)
    {
      return new IPRange(-1,  this.Country, this.MobileOperator,this.Name,this.Value, DateTime.Now, DateTime.Now);
    }
  }
}

