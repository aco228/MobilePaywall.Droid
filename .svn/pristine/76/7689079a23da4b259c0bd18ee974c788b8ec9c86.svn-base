using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class VideoContentDetailTable : TableBase<VideoContentDetail>
  {
    public static string GetColumnNames()
    {
      return TableBase<VideoContentDetail>.GetColumnNames(string.Empty, VideoContentDetailTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<VideoContentDetail>.GetColumnNames(tablePrefix, VideoContentDetailTable.Columns.Item);
    }

    public class Columns
    {

      public static readonly ColumnDescription VideoContentDetailID = new ColumnDescription("VideoContentDetailID", 0, typeof(int));
      public static readonly ColumnDescription VideoContentID = new ColumnDescription("VideoContentID", 1, typeof(int));
      public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 2, typeof(int));
      public static readonly ColumnDescription LanguageID = new ColumnDescription("LanguageID", 3, typeof(int));
      public static readonly ColumnDescription Title = new ColumnDescription("Title", 4, typeof(string));
      public static readonly ColumnDescription Description = new ColumnDescription("Description", 5, typeof(string));
      public static readonly ColumnDescription Rating = new ColumnDescription("Rating", 6, typeof(double));
      public static readonly ColumnDescription HtmlTitle = new ColumnDescription("HtmlTitle", 7, typeof(string));
      public static readonly ColumnDescription MetaDescription = new ColumnDescription("MetaDescription", 8, typeof(string));
      public static readonly ColumnDescription MetaKeywords = new ColumnDescription("MetaKeywords", 9, typeof(string));
      public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 10, typeof(DateTime));
      public static readonly ColumnDescription Created = new ColumnDescription("Created", 11, typeof(DateTime));


      public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				VideoContentDetailID,
				VideoContentID,
				ServiceID,
				LanguageID,
				Title,
				Description,
				Rating,
				HtmlTitle,
				MetaDescription,
				MetaKeywords,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public VideoContentDetailTable(SqlQuery query) : base(query) { }
    public VideoContentDetailTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

    public int VideoContentDetailID { get { return this.Reader.GetInt32(this.GetIndex(Columns.VideoContentDetailID)); } }
    public int VideoContentID { get { return this.Reader.GetInt32(this.GetIndex(Columns.VideoContentID)); } }

    public int? ServiceID
    {
      get
      {
        int index = this.GetIndex(Columns.ServiceID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }


    public int? LanguageID
    {
      get
      {
        int index = this.GetIndex(Columns.LanguageID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }

    public string Title { get { return this.Reader.GetString(this.GetIndex(Columns.Title)); } }

    public string Description
    {
      get
      {
        int index = this.GetIndex(Columns.Description);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetString(index);
      }
    }

    public decimal Rating { get { return this.Reader.GetDecimal(this.GetIndex(Columns.Rating)); } }
    public string HtmlTitle { get { return this.Reader.GetString(this.GetIndex(Columns.HtmlTitle)); } }

    public string MetaDescription
    {
      get
      {
        int index = this.GetIndex(Columns.MetaDescription);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetString(index);
      }
    }


    public string MetaKeywords
    {
      get
      {
        int index = this.GetIndex(Columns.MetaKeywords);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetString(index);
      }
    }

    public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
    public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }


    public VideoContentDetail CreateInstance()
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, new VideoContent(this.VideoContentID), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(Language language)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, new VideoContent(this.VideoContentID), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), language ?? (this.LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(Service service)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, new VideoContent(this.VideoContentID), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(VideoContent videoContent)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, videoContent ?? new VideoContent(this.VideoContentID), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(Service service, Language language)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, new VideoContent(this.VideoContentID), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), language ?? (this.LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(VideoContent videoContent, Language language)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, videoContent ?? new VideoContent(this.VideoContentID), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), language ?? (this.LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(VideoContent videoContent, Service service)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, videoContent ?? new VideoContent(this.VideoContentID), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }
    public VideoContentDetail CreateInstance(VideoContent videoContent, Service service, Language language)
    {
      if (!this.HasData) return null;
      return new VideoContentDetail(this.VideoContentDetailID, videoContent ?? new VideoContent(this.VideoContentID), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), language ?? (this.LanguageID.HasValue ? new Language(this.LanguageID.Value) : null), this.Title, this.Description, this.Rating, this.HtmlTitle, this.MetaDescription, this.MetaKeywords, this.Updated, this.Created);
    }


  }
}

