using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidDistributionLogoManager : IDataManager<AndroidDistributionLogo> 
  {
	

  }

  public partial class AndroidDistributionLogo : MobilePaywallObject<IAndroidDistributionLogoManager> 
  {
		private AndroidDistribution _androidDistribution;
		private byte[] _data = null;
		private bool _active = false;
		

		public AndroidDistribution AndroidDistribution 
		{
			get
			{
				if (this._androidDistribution != null &&
						this._androidDistribution.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidDistribution = AndroidDistribution.CreateManager().LazyLoad(this.ConnectionContext, this._androidDistribution.ID) as AndroidDistribution;
					else
						this._androidDistribution = AndroidDistribution.CreateManager().LazyLoad(this._androidDistribution.ID) as AndroidDistribution;
				return this._androidDistribution;
			}
			set { _androidDistribution = value; }
		}

		public byte[] Data { get { return this._data; } set { this._data = value;}  }
		public bool Active {get {return this._active; } set { this._active = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidDistributionLogo()
    { 
    }

    public AndroidDistributionLogo(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidDistributionLogo(int id,  AndroidDistribution androidDistribution, byte[] data, bool active, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidDistribution = androidDistribution;
			this._data = data;
			this._active = active;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidDistributionLogo(-1,  this.AndroidDistribution,this.Data,this.Active, DateTime.Now, DateTime.Now);
    }
  }
}

