using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface ICategoryDetailManager : IDataManager<CategoryDetail> 
  {
	

  }

  public partial class CategoryDetail : MobilePaywallObject<ICategoryDetailManager> 
  {
		private Category _category;
		private Language _language;
		private string _title = String.Empty;
		private string _description = String.Empty;
		

		public Category Category 
		{
			get
			{
				if (this._category != null &&
						this._category.IsEmpty)
					if (this.ConnectionContext != null)
						this._category = Category.CreateManager().LazyLoad(this.ConnectionContext, this._category.ID) as Category;
					else
						this._category = Category.CreateManager().LazyLoad(this._category.ID) as Category;
				return this._category;
			}
			set { _category = value; }
		}

		public Language Language 
		{
			get
			{
				if (this._language != null &&
						this._language.IsEmpty)
					if (this.ConnectionContext != null)
						this._language = Language.CreateManager().LazyLoad(this.ConnectionContext, this._language.ID) as Language;
					else
						this._language = Language.CreateManager().LazyLoad(this._language.ID) as Language;
				return this._language;
			}
			set { _language = value; }
		}

		public string Title{ get {return this._title; } set { this._title = value;} }
		public string Description{ get {return this._description; } set { this._description = value;} }
		

    public override bool IsInsertable { get { return true;} }

    //public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public CategoryDetail()
    { 
    }

    public CategoryDetail(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public CategoryDetail(int id,  Category category, Language language, string title, string description, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._category = category;
			this._language = language;
			this._title = title;
			this._description = description;
			
    }

    public override object Clone(bool deepClone)
    {
      return new CategoryDetail(-1,  this.Category, this.Language,this.Title,this.Description, DateTime.Now, DateTime.Now);
    }
  }
}

