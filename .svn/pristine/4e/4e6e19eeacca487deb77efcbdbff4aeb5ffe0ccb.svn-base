using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AndroidPremiumCustomerServiceMapTable : TableBase<AndroidPremiumCustomerServiceMap>
  {
    public static string GetColumnNames()
    {
      return TableBase<AndroidPremiumCustomerServiceMap>.GetColumnNames(string.Empty, AndroidPremiumCustomerServiceMapTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AndroidPremiumCustomerServiceMap>.GetColumnNames(tablePrefix, AndroidPremiumCustomerServiceMapTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AndroidPremiumCustomerServiceMapID = new ColumnDescription("AndroidPremiumCustomerServiceMapID", 0, typeof(int));
			public static readonly ColumnDescription AndroidPremiumCustomerID = new ColumnDescription("AndroidPremiumCustomerID", 1, typeof(int));
			public static readonly ColumnDescription OLCacheID = new ColumnDescription("OLCacheID", 2, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 3, typeof(int));
			public static readonly ColumnDescription Shortcode = new ColumnDescription("Shortcode", 4, typeof(string));
			public static readonly ColumnDescription TextMessage = new ColumnDescription("TextMessage", 5, typeof(string));
			public static readonly ColumnDescription PaymentRequestID = new ColumnDescription("PaymentRequestID", 6, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 7, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 8, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AndroidPremiumCustomerServiceMapID,
				AndroidPremiumCustomerID,
				OLCacheID,
				ServiceID,
				Shortcode,
				TextMessage,
				PaymentRequestID,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AndroidPremiumCustomerServiceMapTable(SqlQuery query) : base(query) { }
    public AndroidPremiumCustomerServiceMapTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AndroidPremiumCustomerServiceMapID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidPremiumCustomerServiceMapID)); } }
		public int AndroidPremiumCustomerID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidPremiumCustomerID)); } }
		
		public int? OLCacheID 
		{
			get
			{
				int index = this.GetIndex(Columns.OLCacheID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public string Shortcode { get { return this.Reader.GetString(this.GetIndex(Columns.Shortcode)); } }
		public string TextMessage { get { return this.Reader.GetString(this.GetIndex(Columns.TextMessage)); } }
		
		public int? PaymentRequestID 
		{
			get
			{
				int index = this.GetIndex(Columns.PaymentRequestID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AndroidPremiumCustomerServiceMap CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomerServiceMap(this.AndroidPremiumCustomerServiceMapID,new AndroidPremiumCustomer(this.AndroidPremiumCustomerID), this.OLCacheID,this.ServiceID,this.Shortcode,this.TextMessage,this.PaymentRequestID,this.Updated,this.Created); 
		}
		public AndroidPremiumCustomerServiceMap CreateInstance(AndroidPremiumCustomer androidPremiumCustomer)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomerServiceMap(this.AndroidPremiumCustomerServiceMapID,androidPremiumCustomer ?? new AndroidPremiumCustomer(this.AndroidPremiumCustomerID), this.OLCacheID,this.ServiceID,this.Shortcode,this.TextMessage,this.PaymentRequestID,this.Updated,this.Created); 
		}
		

  }
}

