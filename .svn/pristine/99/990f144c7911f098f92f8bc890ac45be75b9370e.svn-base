using log4net;
using MobilePaywall.Data;
using MobilePaywall.MobilePaywallDirectWebCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MobilePaywall.Web.Models
{
  public class TemplateFilterBypassModel : PaywallViewModelBase
  {

    #region #logging#
    private static ILog _log = null;

    protected static ILog Log
    {
      get
      {
        if (TemplateFilterBypassModel._log == null)
          TemplateFilterBypassModel._log = LogManager.GetLogger(typeof(TemplateFilterBypassModel));
        return TemplateFilterBypassModel._log;
      }
    }
    #endregion

    private List<FilterBypass> _filterBypass;
    private bool _contextExists;
    
    public List<FilterBypass> FilterBypass { get { return this._filterBypass; } set { this._filterBypass = value; } }
    public bool ContextExists { get { return this._contextExists; }set { this._contextExists = value; } }
    public TemplateFilterBypassModel(PaywallHttpContext context) : base(context)
    {
      this._filterBypass = new List<FilterBypass>();
      foreach (FilterBypassType type in Enum.GetValues(typeof(FilterBypassType)))
      {
        FilterBypass filterBypass = Data.FilterBypass.GetFilterBypass(PaywallHttpContext.Current.Service, type);
        if (filterBypass != null)
          this._filterBypass.Add(filterBypass);
      }
    }
    
  }
}