using Direct.Core;
using MobilePaywall.MobilePaywallDirect.Databases;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace MobilePaywall.Tests
{
  public class UndercoverResult
  {
    public bool DontSendConversionToBananaclicks = true;

    public static UndercoverResult SendToBananaclicks() => new UndercoverResult() { DontSendConversionToBananaclicks = false };
    public static UndercoverResult DontSendToBananaclicks() => new UndercoverResult() { DontSendConversionToBananaclicks = true };
  }

  public class CCUndercoverAgent
  {
    public static UndercoverResult Init(string clickID)
    {
      UndercoverResult result = new UndercoverResult();
      CCSubmitDirect db = CCSubmitDirect.Instance;
      DirectContainer dc = db.LoadContainer(string.Format("SELECT affid, pubid, referrer FROM livesports.cc_client WHERE clickid='{0}' ORDER BY clientid DESC LIMIT 1;", clickID));
      if (!dc.HasValue)
      {
        return result;
      }

      string affID = !string.IsNullOrEmpty(dc.GetString("affid")) ? dc.GetString("affid") : GetParamByName(dc.GetString("referrer"), "affiliate_id");
      string pubID = !string.IsNullOrEmpty(dc.GetString("pubid")) ? dc.GetString("pubid") : GetParamByName(dc.GetString("referrer"), "utm_campaign");

      if (string.IsNullOrEmpty(affID))
      {
        return result;
      }

      DirectContainer _directContainer;
      if (!string.IsNullOrEmpty(pubID))
        _directContainer = db.LoadContainer("SELECT * FROM [].cc_undercover WHERE (aff_id={0} AND pub_id={1}) OR (aff_id={0} AND pub_id IS NULL) ORDER BY pub_id DESC LIMIT 1;", int.Parse(affID), pubID);
      else
        _directContainer = db.LoadContainer("SELECT * FROM [].cc_undercover WHERE (aff_id={0} AND pub_id IS NULL) ORDER BY pub_id DESC LIMIT 1;", int.Parse(affID));


      if (_directContainer.GetDouble("tcost").HasValue)
        try
        {
        }
        catch (Exception e)
        {
        }

      Log("CCUndercover will go to old way, for clickID = " + clickID + ", affID=" + affID);
      return null;
    }


    private static string GetParamByName(string input, string parameterName)
    {
      Match match = new Regex(string.Format(@"(\?{0}=([A-Za-z0-9]+))|(\&{0}=([A-Za-z0-9]+))", parameterName)).Match(input);
      string result = string.Empty;
      if (!string.IsNullOrEmpty(match.Groups[2].Value.ToString()))
        result = match.Groups[2].Value.ToString();
      else if (string.IsNullOrEmpty(result) && !string.IsNullOrEmpty(match.Groups[4].Value.ToString()))
        result = match.Groups[4].Value.ToString();
      return result;
    }
    public static void Log(string text)
    {
    }
  }
}
