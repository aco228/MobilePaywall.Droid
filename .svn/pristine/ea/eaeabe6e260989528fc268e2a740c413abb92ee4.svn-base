using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidContentDataManager : IDataManager<AndroidContentData> 
  {
	

  }

  public partial class AndroidContentData : MobilePaywallObject<IAndroidContentDataManager> 
  {
		private AndroidContent _androidContent;
		private byte[] _data = null;
		private int _size = -1;
		

		public AndroidContent AndroidContent 
		{
			get
			{
				if (this._androidContent != null &&
						this._androidContent.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidContent = AndroidContent.CreateManager().LazyLoad(this.ConnectionContext, this._androidContent.ID) as AndroidContent;
					else
						this._androidContent = AndroidContent.CreateManager().LazyLoad(this._androidContent.ID) as AndroidContent;
				return this._androidContent;
			}
			set { _androidContent = value; }
		}

		public byte[] Data { get { return this._data; } set { this._data = value;}  }
		public int Size{ get {return this._size; } set { this._size = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidContentData()
    { 
    }

    public AndroidContentData(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidContentData(int id,  AndroidContent androidContent, byte[] data, int size, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidContent = androidContent;
			this._data = data;
			this._size = size;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidContentData(-1,  this.AndroidContent,this.Data,this.Size, DateTime.Now, DateTime.Now);
    }
  }
}

