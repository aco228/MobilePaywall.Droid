using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using System.Web.Routing;

namespace MobilePaywall.Web.Helpers
{
	public static class ErrorHelper
	{
		public static string AppendSessionID(RequestContext requestContext, string url)
		{
			PaywallHttpContext paywallContext = PaywallHttpContext.GetCurrent(requestContext.HttpContext.ApplicationInstance.Context);

			// http://mydomain.com/controller/action/id?somevalue=bla
			// http://mydomain.com/controller/action/id/sid/SESSION_GUID?
			// /controller/action/id

			// Use globally defined constants instead of literals for markers such as "sid"

			string sessionPath = MobilePaywall.Constants.SessionID + "/" + paywallContext.Session.SessionData.Guid.ToString().Replace("-", "");
			if (url.Contains(sessionPath))
				return url;

      if (IsSessionProvidedButDifferent(url, paywallContext.Session.SessionData.Guid.ToString()))
        requestContext.HttpContext.Response.Redirect("/");
    
			if (url.Contains("?"))
				url = url.Replace("?", sessionPath + "?");
			else
			{
				if (!url.EndsWith("/"))
					url += "/";
				url += sessionPath;
			}
			return url;
		}

    private static bool IsSessionProvidedButDifferent(string url, string paywallSessionGuid)
    {
      // Check if the session id is already provided but different from the one which is in the paywall context session.
      string sessionGuid = url.Split('/').LastOrDefault().Split('?').First();

      string[] urlData = url.Split('/');
      for (int i = 0; i < urlData.Length; i++)
        if (urlData[i].ToLower().Equals(MobilePaywall.Constants.SessionID))
        {
          if (!urlData[i++].Equals(sessionGuid))
          {
            return true;
          }
          break;
        }
      return false;
    }

	}
}
