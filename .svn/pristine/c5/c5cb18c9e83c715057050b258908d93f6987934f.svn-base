using MobilePaywall.Direct;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace MobilePaywall.Service.Callback.Controllers
{
	public class CCSubmitController : Controller
	{

		#region # log #

		private int? _logID = -1;
		private MobilePaywallLogDirect db = null;

		private void CreateLog()
		{
			db = MobilePaywallLogDirect.Instance;
			this._logID = this.db.Execute("INSERT INTO MobilePaywallLog.log.CCSubmitLog (Url) VALUES ('" + HttpContext.Request.RawUrl.ToString() + "');");
		}

		private void Log(string text)
		{
			if (!this._logID.HasValue)
				return;
			this.db.Execute("INSERT INTO MobilePaywallLog.log.CCSubmitLogData (CCSubmitLogID, Text) VALUES (" + this._logID.Value + ", '" + text + "')");
		}

		#endregion

		[Route("callback")]
		public ActionResult Index()
		{
			this.CreateLog();

			string txid = Request["txid"] != null ? Request["txid"].ToString().ToLower() : "";

			string iEvent = Request["event"] != null ? Request["event"].ToString().ToLower() : "";
			if (iEvent.Equals("settle"))
				iEvent = "initial";

			if (Request["success"] != null && Request["success"].ToString().Equals("1"))
				iEvent = "subscribed";

			if(iEvent.Equals("subscribed"))
			{
				string email = Request["email"] != null ? Request["email"].ToString() : string.Empty;
				string username = Request["username"] != null ? Request["username"].ToString() : string.Empty;
				string password = Request["password"] != null ? Request["password"].ToString() : string.Empty;
				this.SendLoginToSportCallback(txid, username, password, email);
			}

			if (iEvent.Equals("initial") || iEvent.Equals("rebill") || iEvent.Equals("subscribed"))
				this.SendPostbackToSportCallback(txid, iEvent);

			if (iEvent.ToLower().Equals("initial"))
				this.SendPostbackToBananaclicks(txid);

			return new HttpStatusCodeResult(200);
		}


		public ActionResult Baza()
		{
			DirectContainer dc = MobilePaywallLogDirect.Instance.LoadContainer("SELECT TOP 1000 * FROM MObilePaywallLog.log.CCSubmitLog WHERE CCSubmitLogID>=11 ORDER BY CCSubmitLogID DESC;");
			string result = "";
			foreach(var row in dc.Rows)
			{
				result += string.Format("<span style=\"color:blue;display: inline-block; width:170px;\">{0}:</span>", row.GetString("Created"));
				result += string.Format("<span style=\"\">{0}:</span>", row.GetString("Url"));
				result += string.Format("<br>");
			}

			return this.Content(result);
		}

		private void SendPostbackToBananaclicks(string transaction_id)
		{
			string postbackLink = "http://conversions.bananaclicks.com/?transaction_id=" + transaction_id;
			HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(postbackLink);
			webRequest.AllowAutoRedirect = false;
			HttpWebResponse response;
			HttpStatusCode statusCode;

			try
			{
				response = (HttpWebResponse)webRequest.GetResponse();
			}
			catch (WebException we)
			{
				return;
			}
		}

		// SEND TRANSACTION INFORMATIONS
		private void SendPostbackToSportCallback(string transaction_id, string type)
		{
			string postbackLink = "https://welcome.livesports.click/callback.php?lxid=" + transaction_id + "&type=" + type;
			this.Log("TRACKING: " + postbackLink);
			HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(postbackLink);
			webRequest.AllowAutoRedirect = false;
			HttpWebResponse response;
			HttpStatusCode statusCode;

			try
			{
				response = (HttpWebResponse)webRequest.GetResponse();
			}
			catch (WebException we)
			{
				return;
			}
		}

		// SEND USERNAME AND PASSWORD
		private void SendLoginToSportCallback(string transaction_id, string username, string password, string email)
		{
			string postbackLink = "https://welcome.livesports.click/subscribe.php?set=" + string.Format("&lxid={0}&email={1}&username={2}&password={3}", transaction_id, email, username, password);
			this.Log("USER/PASS: " + postbackLink);
			HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(postbackLink);
			webRequest.AllowAutoRedirect = false;
			HttpWebResponse response;
			HttpStatusCode statusCode;

			try
			{
				response = (HttpWebResponse)webRequest.GetResponse();
			}
			catch (WebException we)
			{
				return;
			}
		}
		
	}
}