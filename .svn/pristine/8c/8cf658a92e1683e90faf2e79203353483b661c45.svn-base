@model PaymentsViewModel
@{
  Layout = string.Format("~/Views/{0}/_Layout/_Layout.cshtml", PaywallHttpContext.Current.Service.ServiceData.Template.Name);
}
@Styles.Render("~/Style/Pink/Cancellation")
@Scripts.Render("~/Script/Cancellation")

<style>
  .row { margin: 0px !important; padding: 20px !important; }
  td { padding: 5px !important; } 
  .cancellation_table { background-color: rgb(86, 87, 85) !important; }
</style>

<div class="cancellation_page row">
  @{
    if (Model.InactiveSubscriptions != null && Model.InactiveSubscriptions.Count > 0)
    {
      <h2>@Translations.Web.Payments.Subscriptions</h2>

      <table id="cancellation_table_header">
        <tr>
          <td>@Translations.Web.Payments.Status</td>
          <td>@Translations.Web.Payments.Name</td>
          <td>@Translations.Web.Payments.Created</td>
        </tr>
      </table>
      <table class="cancellation_table row">

        @foreach (Cashflow.Message.Data.Subscription s in Model.InactiveSubscriptions)
        {
          <tr>
            <td>
              <div class="cancellation_circle cancellation_circle_red"></div>
              inactive
            </td>
            <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
            <td>@s.Created<br /></td>
          </tr>

        }

      </table>
    }

    if (Model.ActiveSubscriptions != null && Model.ActiveSubscriptions.Count > 0)
    {
      <h2>@Translations.Web.Payments.Subscriptions</h2>

      <table id="cancellation_table_header">
        <tr>
          <td>@Translations.Web.Payments.Status</td>
          <td>@Translations.Web.Payments.Name</td>
          <td>@Translations.Web.Payments.Created</td>
          <td>Prijs</td>
          @*<td>@Translations.Web.Payments.Options</td>*@
        </tr>
      </table>
      <table class="cancellation_table row">

        @foreach (Cashflow.Message.Data.Subscription s in Model.ActiveSubscriptions)
        {
          <tr>
            <td>
              <div class="cancellation_circle cancellation_circle_green"></div>
              active
            </td>
            <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
            <td>@s.Created</td>
            <td>@string.Format("{0:0.00}", s.Amount.Value).Replace(".", ",") EUR</td>
            @*<td>
              <a href="/action/cancel?paymentGuidParam=@s.SubscriptionID">
                <button class="btn aktiveBtn">@Translations.Web.Payments.Cancel</button>
              </a>
            </td>*@
          </tr>
        }

      </table>
    }
  }
</div>

<div class="cancellation_page row">
  @{
    if (Model.Purchases != null && Model.Purchases.Count > 0)
    {
      <h2>@Translations.Web.Payments.Title</h2>
      <h2>@Translations.Web.Payments.Subscriptions</h2>

      <table id="cancellation_table_header">
        <tr>
          <td>@Translations.Web.Payments.Name</td>
          <td>@Translations.Web.Payments.Created</td>
        </tr>
      </table>
      <table class="cancellation_table row">

        @foreach (Cashflow.Message.Data.Purchase p in Model.Purchases)
        {
          <tr>
            <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
            <td>@p.Created<br /></td>
          </tr>
        }

      </table>
    }
  }
</div>

<script>

  @*var _cancellation = null;

  $(document).ready(function () {
    _cancellation = new Cancellation();
    _cancellation.QuestionText = '@Translations.Web.Cancel.Question';
    _cancellation.ConfirmText = '@Translations.Web.Cancel.Confirm';
    _cancellation.DenyText = '@Translations.Web.Cancel.Deny';
  });*@

</script>
