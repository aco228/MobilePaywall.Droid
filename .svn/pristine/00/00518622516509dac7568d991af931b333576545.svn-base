using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidPremiumSmsRequestManager : IDataManager<AndroidPremiumSmsRequest> 
  {
	

  }

  public partial class AndroidPremiumSmsRequest : MobilePaywallObject<IAndroidPremiumSmsRequestManager> 
  {
		private AndroidClientSession _androidClientSession;
		private Service _service;
		private bool _isProcessed = false;
		private bool _isSuccess = false;
		

		public AndroidClientSession AndroidClientSession 
		{
			get
			{
				if (this._androidClientSession != null &&
						this._androidClientSession.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidClientSession = AndroidClientSession.CreateManager().LazyLoad(this.ConnectionContext, this._androidClientSession.ID) as AndroidClientSession;
					else
						this._androidClientSession = AndroidClientSession.CreateManager().LazyLoad(this._androidClientSession.ID) as AndroidClientSession;
				return this._androidClientSession;
			}
			set { _androidClientSession = value; }
		}

		public Service Service 
		{
			get
			{
				if (this._service != null &&
						this._service.IsEmpty)
					if (this.ConnectionContext != null)
						this._service = Service.CreateManager().LazyLoad(this.ConnectionContext, this._service.ID) as Service;
					else
						this._service = Service.CreateManager().LazyLoad(this._service.ID) as Service;
				return this._service;
			}
			set { _service = value; }
		}

		public bool IsProcessed {get {return this._isProcessed; } set { this._isProcessed = value;} }
		public bool IsSuccess {get {return this._isSuccess; } set { this._isSuccess = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidPremiumSmsRequest()
    { 
    }

    public AndroidPremiumSmsRequest(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidPremiumSmsRequest(int id,  AndroidClientSession androidClientSession, Service service, bool isProcessed, bool isSuccess, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidClientSession = androidClientSession;
			this._service = service;
			this._isProcessed = isProcessed;
			this._isSuccess = isSuccess;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidPremiumSmsRequest(-1,  this.AndroidClientSession, this.Service,this.IsProcessed,this.IsSuccess, DateTime.Now, DateTime.Now);
    }
  }
}

