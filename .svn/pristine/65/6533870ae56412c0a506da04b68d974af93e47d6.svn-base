using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class LookupMsisdnCallbackTable : TableBase<LookupMsisdnCallback>
  {
    public static string GetColumnNames()
    {
      return TableBase<LookupMsisdnCallback>.GetColumnNames(string.Empty, LookupMsisdnCallbackTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<LookupMsisdnCallback>.GetColumnNames(tablePrefix, LookupMsisdnCallbackTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription LookupMsisdnCallbackID = new ColumnDescription("LookupMsisdnCallbackID", 0, typeof(int));
			public static readonly ColumnDescription LookupMsisdnCallbackGuid = new ColumnDescription("LookupMsisdnCallbackGuid", 1, typeof(Guid));
			public static readonly ColumnDescription LookupSessionID = new ColumnDescription("LookupSessionID", 2, typeof(int));
			public static readonly ColumnDescription IsCompleted = new ColumnDescription("IsCompleted", 3, typeof(bool));
			public static readonly ColumnDescription ValidTo = new ColumnDescription("ValidTo", 4, typeof(DateTime));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 5, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 6, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				LookupMsisdnCallbackID,
				LookupMsisdnCallbackGuid,
				LookupSessionID,
				IsCompleted,
				ValidTo,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public LookupMsisdnCallbackTable(SqlQuery query) : base(query) { }
    public LookupMsisdnCallbackTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int LookupMsisdnCallbackID { get { return this.Reader.GetInt32(this.GetIndex(Columns.LookupMsisdnCallbackID)); } }
		public Guid LookupMsisdnCallbackGuid { get { return this.Reader.GetGuid(this.GetIndex(Columns.LookupMsisdnCallbackGuid)); } }
		public int LookupSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.LookupSessionID)); } }
		public bool IsCompleted { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsCompleted)); } }
		public DateTime ValidTo { get { return this.Reader.GetDateTime(this.GetIndex(Columns.ValidTo)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public LookupMsisdnCallback CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new LookupMsisdnCallback(this.LookupMsisdnCallbackID,this.LookupMsisdnCallbackGuid,new LookupSession(this.LookupSessionID), this.IsCompleted,this.ValidTo,this.Updated,this.Created); 
		}
		public LookupMsisdnCallback CreateInstance(LookupSession lookupSession)  
		{ 
			if (!this.HasData) return null;
			return new LookupMsisdnCallback(this.LookupMsisdnCallbackID,this.LookupMsisdnCallbackGuid,lookupSession ?? new LookupSession(this.LookupSessionID), this.IsCompleted,this.ValidTo,this.Updated,this.Created); 
		}
		

  }
}

