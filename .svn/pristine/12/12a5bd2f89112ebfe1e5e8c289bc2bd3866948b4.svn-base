@model TemplateSortContentModel
@{
  int _sessionID = (PaywallHttpContext.Current.Session != null && PaywallHttpContext.Current.Session.ClientSession != null) ? PaywallHttpContext.Current.Session.ClientSession.ID : -1;
  string _username = (PaywallHttpContext.Current.Session != null && PaywallHttpContext.Current.Session.ClientSession != null && PaywallHttpContext.Current.Session.ClientSession.Client != null) ? PaywallHttpContext.Current.Session.ClientSession.Client.Username : "NULL";
  
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta charset="UTF-8">
  <title>@PaywallHttpContext.Current.Service.ServiceData.Name sort content</title>
  <meta name="SID" id="@PaywallHttpContext.Current.Service.ServiceData.ID" />
  <meta name="CID" id="@PaywallHttpContext.Current.Service.ServiceData.FallbackCountry.ID" />
  <meta name="PPID" id="@PaywallHttpContext.Current.Service.PaymentProvider.ID" />
  <meta name="MOID" id="@PaywallHttpContext.Current.MobileOperatorID.ToString()" />
  <meta name="TMPL" id="@PaywallHttpContext.Current.Service.ServiceData.Template.Name" />
  <meta name="ClientSessionID" id="@_sessionID" />
  <meta name="Username" id="@_username" />
  <link href="~/Content/Template/ContentManagment.css" rel="stylesheet" />
  @Styles.Render("~/Style/css")
  @Scripts.Render("~/Script/js/system")
  @Scripts.Render("~/Scripts/Template/SortContent")
</head>
<body>

  <h4 class="heading_a uk-margin-bottom">@PaywallHttpContext.Current.Service.ServiceData.Name manage content</h4>
  <h5 class="heading_a uk-margin-bottom">Application must be restarted before</h5>
  <hr />
  <div>
    <h5 class="heading_a uk-margin-bottom">Click on thumbnail and "Update" button if you want to make that content invisible on service.</h5>
    <h5 class="heading_a uk-margin-bottom">If you want to make that content visible again, click on thumbnail and click "Update" button.</h5>
    <h5 class="heading_a uk-margin-bottom">Click on ► arrow if you want to see content</h5>
  </div>
  <div class="md-card uk-margin-medium-bottom">
    <div class="md-card-content">
      <div class="uk-overflow-container">
        
        <div id="contentBase">

          @{
            int maxGroupCount = 5;
            int groupID = 1;
            int itemsInGroup = 0;

            foreach (MobilePaywall.Data.Content content in Model.Content)
            {
              MobilePaywall.IContent icontent = content.Instantiate();
              string accessUrl = string.Format("/template/content?skip=&contentID=" + icontent.ContentData.ID);
              if(icontent.ContentData.ContentType.ID == 7)
              {
                Html5Content html5Content = Html5Content.CreateManager().Load(icontent.ContentData);
                if(html5Content != null) 
                { accessUrl = string.Format("/template/Html5access/{0}?skip=", html5Content.ID); }
              }

              MobilePaywall.ContentInformations info = icontent.GetInformations(PaywallHttpContext.Current.Service.ServiceData, PaywallHttpContext.Current.Service.ServiceData.FallbackLanguage);
              if (itemsInGroup == 0)
              {
                @Html.Raw("<div class=\"videoContentGroup\" id=\"g" + groupID + "\" ondrop=\"_drop(event)\" ondragover=\"_allowDrop(event)\" draggable=\"true\" ondragstart=\"_drag(event)\">")        ;
              }

              itemsInGroup++;

              <div class="videoContentWrap">
                <div id="wrapperr">
                  <div class="videoContent videoContent_hidden" contentid="@content.ID" style="background-image:url('@icontent.GetThumbnailUrl(Request.UserAgent)');">
                    <div style="height: 26px;background-color:white;width:auto;height:auto;">
                      @info.Title
                      <a href="@accessUrl" style="position: absolute;top: -18px;right: -12px; height:10px; width:46px; color:black;" data-ajax="false" target="_blank" class="ahref_blank">
                        <span style="font-size: 35px;">►</span>
                      </a>
                    </div>
                      <div class="video_content_disabled"></div>
                    </div>
                </div>

              </div>

              if (itemsInGroup == maxGroupCount)
              {
                itemsInGroup = 0;
                groupID++;
                @Html.Raw("</div>");
              }
            }

            if (itemsInGroup != maxGroupCount)
            { @Html.Raw("</div>");
            }
          }
          
          <div style="clear:both"></div>
        </div>
      </div>

      <div class="uk-grid">
        <div class="uk-width-medium-1-6">
          <a class="md-btn md-btn-flat md-btn-flat-primary" id="btnUpdateSort" inuse="false">Update</a>
        </div>
      </div>

    </div>
  </div>

  <script src="http://maps.google.com/maps/api/js?sensor=true"></script>
  @Scripts.Render("~/Scripts/Template")
  <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

  <script>

    var application = null;
    var visual = null;
    var template = null;

    $(function () { altair_helpers.retina_images(); });
    function Template()
    {
      // SUMMARY: shared template function for template communication
      this.call = function (url, data, succ_func)
      {
        $.ajax({
          url: '/template/' + url,
          method: 'POST',
          data: data,
          success: function (response) { succ_func(response); }
        });
      }
    }

    var contentGroupID = @Model.ContentGroupID;
    var _templateServiceContentSortID = @Model.TemplateServiceContentSortID;
    var _displayElements = [@Model.ContentJS_IDs];

    $(document).ready(function () {
      application = new Application();
      visual = new Visual();
      template = new Template();

      unhideElement();
      $('#sortContentUpdate').click(updateNewSortContent);
      $('#btnUpdateSort').click(buttonUpdateSort);
      $('#btnDeleteSort').click(buttonDeleteSort);

      var _ignoreHidden = false;
      $('.ahref_blank').click(function(e){
        console.log('ahref_blank has been clicked');
        _ignoreHidden = true;
      });

      $('.videoContent').click(function(e){

        if(_ignoreHidden)
        {
          _ignoreHidden = false;
          return;
        }

        if($(this).hasClass('videoContent_hidden'))
          $(this).removeClass('videoContent_hidden');
        else
          $(this).addClass('videoContent_hidden');
      });


    });

  </script>

</body>
</html>