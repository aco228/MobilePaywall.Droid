using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class CategoryDetailManager : ICategoryDetailManager
  {

		public List<CategoryDetail> Load(Category category)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, category);
		}

		public List<CategoryDetail> Load(IConnectionInfo connection, Category category)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, category);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, category);
		}

		public List<CategoryDetail> Load(ISqlConnectionInfo connection, Category category)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[cd].CategoryID = @CategoryID";
			parameters.Arguments.Add("CategoryID", category.ID);
			return this.LoadMany(connection, parameters);
		}


		public List<CategoryDetail> Load(Language language)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, language);
		}

		public List<CategoryDetail> Load(IConnectionInfo connection, Language language)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, language);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, language);
		}

		public List<CategoryDetail> Load(ISqlConnectionInfo connection, Language language)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[cd].LanguageID = @LanguageID";
			parameters.Arguments.Add("LanguageID", language.ID);
			return this.LoadMany(connection, parameters);
		}


		public CategoryDetail Load(Category category, Language language)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, category, language);
		}

		public CategoryDetail Load(IConnectionInfo connection, Category category, Language language)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, category, language);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, category, language);
		}

		public CategoryDetail Load(ISqlConnectionInfo connection, Category category, Language language)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[cd].CategoryID = @CategoryID AND [cd].LanguageID = @LanguageID";
			parameters.Arguments.Add("CategoryID", category.ID);
			parameters.Arguments.Add("LanguageID", language.ID);
			return this.Load(connection, parameters);
		}

  }
}

