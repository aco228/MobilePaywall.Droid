using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MobilePaywall.Implementation.Log.LogDatabase
{
  public class PaymentRequestLogDatabaseSync : LogDatabaseManager
  {
    private Data.PaymentRequest _paymentRequest = null;

    public PaymentRequestLogDatabaseSync(Data.PaymentRequest paymentRequest)
      :base(paymentRequest, "PaymentRequest")
    {
      this._paymentRequest = paymentRequest;
      this.Init();
    }

    public static void Call(Data.PaymentRequest data)
    {
      PaymentRequestLogDatabaseSync a = new PaymentRequestLogDatabaseSync(data);
    }

    protected override void Collect()
    {
      this.AddEntry("PaymentRequestGuid", this._paymentRequest.Guid.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("PaymentTypeID", ((int)this._paymentRequest.PaymentType).ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);
      this.AddEntry("PaymentRequestStatusID", ((int)this._paymentRequest.PaymentRequestStatus).ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.LookupSession != null)
        this.AddEntry("LookupSessionID", this._paymentRequest.LookupSession.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.Customer != null)
        this.AddEntry("CustomerID", this._paymentRequest.Customer.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.UserSession != null)
        this.AddEntry("UserSessionID", this._paymentRequest.UserSession.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.ServiceOffer != null)
        this.AddEntry("ServiceOfferID", this._paymentRequest.ServiceOffer.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.BusinessModelEntry != null)
        this.AddEntry("BusinessModelEntryID", this._paymentRequest.BusinessModelEntry.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._paymentRequest.ExternalPaymentRequestGuid.HasValue)
        this.AddEntry("ExternalPaymentRequestGuid", this._paymentRequest.ExternalPaymentRequestGuid.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._paymentRequest.UserHttpRequest != null)
        this.AddEntry("UserHttpRequestID", this._paymentRequest.UserHttpRequest.ID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      this.AddEntry("PaymentRedirectUrl", this._paymentRequest.PaymentRedirectUrl, LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
    }
  }
}
