using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AndroidPremiumCustomerTable : TableBase<AndroidPremiumCustomer>
  {
    public static string GetColumnNames()
    {
      return TableBase<AndroidPremiumCustomer>.GetColumnNames(string.Empty, AndroidPremiumCustomerTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AndroidPremiumCustomer>.GetColumnNames(tablePrefix, AndroidPremiumCustomerTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AndroidPremiumCustomerID = new ColumnDescription("AndroidPremiumCustomerID", 0, typeof(int));
			public static readonly ColumnDescription AndroidCustomerUniqueID = new ColumnDescription("AndroidCustomerUniqueID", 1, typeof(string));
			public static readonly ColumnDescription AndroidPremiumAplicationID = new ColumnDescription("AndroidPremiumAplicationID", 2, typeof(int));
			public static readonly ColumnDescription CountryID = new ColumnDescription("CountryID", 3, typeof(int));
			public static readonly ColumnDescription IPAddress = new ColumnDescription("IPAddress", 4, typeof(string));
			public static readonly ColumnDescription Msisdn = new ColumnDescription("Msisdn", 5, typeof(string));
			public static readonly ColumnDescription Referrer = new ColumnDescription("Referrer", 6, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 7, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 8, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AndroidPremiumCustomerID,
				AndroidCustomerUniqueID,
				AndroidPremiumAplicationID,
				CountryID,
				IPAddress,
				Msisdn,
				Referrer,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AndroidPremiumCustomerTable(SqlQuery query) : base(query) { }
    public AndroidPremiumCustomerTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AndroidPremiumCustomerID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidPremiumCustomerID)); } }
		public string AndroidCustomerUniqueID { get { return this.Reader.GetString(this.GetIndex(Columns.AndroidCustomerUniqueID)); } }
		public int AndroidPremiumAplicationID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidPremiumAplicationID)); } }
		public int CountryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CountryID)); } }
		public string IPAddress { get { return this.Reader.GetString(this.GetIndex(Columns.IPAddress)); } }
		
		public string Msisdn 
		{
			get
			{
				int index = this.GetIndex(Columns.Msisdn);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public string Referrer { get { return this.Reader.GetString(this.GetIndex(Columns.Referrer)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AndroidPremiumCustomer CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomer(this.AndroidPremiumCustomerID,this.AndroidCustomerUniqueID,new AndroidPremiumAplication(this.AndroidPremiumAplicationID), new Country(this.CountryID), this.IPAddress,this.Msisdn,this.Referrer,this.Updated,this.Created); 
		}
		public AndroidPremiumCustomer CreateInstance(AndroidPremiumAplication androidPremiumAplication)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomer(this.AndroidPremiumCustomerID,this.AndroidCustomerUniqueID,androidPremiumAplication ?? new AndroidPremiumAplication(this.AndroidPremiumAplicationID), new Country(this.CountryID), this.IPAddress,this.Msisdn,this.Referrer,this.Updated,this.Created); 
		}
		public AndroidPremiumCustomer CreateInstance(Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomer(this.AndroidPremiumCustomerID,this.AndroidCustomerUniqueID,new AndroidPremiumAplication(this.AndroidPremiumAplicationID), country ?? new Country(this.CountryID), this.IPAddress,this.Msisdn,this.Referrer,this.Updated,this.Created); 
		}
		public AndroidPremiumCustomer CreateInstance(AndroidPremiumAplication androidPremiumAplication, Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumCustomer(this.AndroidPremiumCustomerID,this.AndroidCustomerUniqueID,androidPremiumAplication ?? new AndroidPremiumAplication(this.AndroidPremiumAplicationID), country ?? new Country(this.CountryID), this.IPAddress,this.Msisdn,this.Referrer,this.Updated,this.Created); 
		}
		

  }
}

