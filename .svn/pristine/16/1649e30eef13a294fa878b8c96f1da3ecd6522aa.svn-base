using System;
using System.Configuration;
using System.Web;

using MobilePaywall.Web.Configuration;

namespace MobilePaywall.Web
{
	public class PaywallHttpModule : IHttpModule
	{
		private static readonly object ThumbnailCacheLockObject = new object();

		private HttpApplication _application = null; 
		private PaywallConfigurationSection _configuration = null;

		public PaywallConfigurationSection Configuration { get { return this._configuration; } }
				
		public void Init(HttpApplication context)
		{
			PaywallHttpApplication paywallApplication = context as PaywallHttpApplication;
			if (paywallApplication == null)
				throw new InvalidOperationException("PaywallHttpModule only works in conjunction with a PaywallHttpApplication.");
			this._application = context;

			Data.Application application = PaywallHttpApplication.GetRuntime(_application).ApplicationData;
			context.PreRequestHandlerExecute += new EventHandler(this.ApplicationPreRequestHandlerExecute);
			this.LoadConfiguration();
		}

		private void LoadConfiguration()
		{
			PaywallConfigurationSection configuration = (PaywallConfigurationSection)ConfigurationManager.GetSection("paywall");
			this._configuration = configuration;
		}

		private void ApplicationPreRequestHandlerExecute(object sender, EventArgs e)
		{
			// TODO question: should we remove this now?
			HttpContext context = HttpContext.Current; 
			string a = string.Empty;
		}


		public void Dispose()
		{
			return;
		}
	}
}
