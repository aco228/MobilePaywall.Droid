using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;



namespace MobilePaywall.Merchant
{
  public class PaywallHttpModule : IHttpModule
  {
    private HttpApplication _application = null;
    
    public void Init(HttpApplication context)
    {
      PaywallHttpApplication paywallApplication = context as PaywallHttpApplication;
      if (paywallApplication == null)
        throw new InvalidOperationException("PaywallHttpModule only works in conjunction with a PaywallHttpApplication.");
      this._application = context;
      Data.Application application = PaywallHttpApplication.GetRuntime(_application).ApplicationData;
      context.PreRequestHandlerExecute += new EventHandler(this.ApplicationPreRequestHandlerExecute);
    }

    private void ApplicationPreRequestHandlerExecute(object sender, EventArgs e)
    {
      // TODO question: should we remove this now?
      HttpContext context = HttpContext.Current;
      string a = string.Empty;
    }


    public void Dispose()
    {
      return;
    }
  }
}
