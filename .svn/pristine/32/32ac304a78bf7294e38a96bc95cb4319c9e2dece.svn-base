using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Senti.Localization;

namespace MobilePaywall.Localization
{
  public class PaymentsLocalizationGroup : ILocalizationGroup 
  {
    public static readonly PaymentsLocalizationGroup Empty = new PaymentsLocalizationGroup();

    private MobilePaywallLocalization _localization = null;

    protected bool IsEmpty { get { return this._localization == null; } }
    protected MobilePaywallLocalization Localization { get { return this._localization; } }

    private string _header = null;
		private string _title = null;
		private string _status = null;
		private string _active = null;
		private string _inactive = null;
		private string _name = null;
		private string _type = null;
		private string _category = null;
		private string _purchases = null;
		private string _subscriptions = null;
		private string _payments = null;
		private string _created = null;
		private string _cancelled = null;
		private string _validUntil = null;
		private string _activeUntil = null;
		private string _options = null;
		private string _cancel = null;
		private string _refund = null;
		

    public string Header { get { return this._header ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Header : string.Empty); } }
		public string Title { get { return this._title ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Title : string.Empty); } }
		public string Status { get { return this._status ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Status : string.Empty); } }
		public string Active { get { return this._active ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Active : string.Empty); } }
		public string Inactive { get { return this._inactive ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Inactive : string.Empty); } }
		public string Name { get { return this._name ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Name : string.Empty); } }
		public string Type { get { return this._type ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Type : string.Empty); } }
		public string Category { get { return this._category ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Category : string.Empty); } }
		public string Purchases { get { return this._purchases ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Purchases : string.Empty); } }
		public string Subscriptions { get { return this._subscriptions ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Subscriptions : string.Empty); } }
		public string Payments { get { return this._payments ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Payments : string.Empty); } }
		public string Created { get { return this._created ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Created : string.Empty); } }
		public string Cancelled { get { return this._cancelled ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Cancelled : string.Empty); } }
		public string ValidUntil { get { return this._validUntil ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.ValidUntil : string.Empty); } }
		public string ActiveUntil { get { return this._activeUntil ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.ActiveUntil : string.Empty); } }
		public string Options { get { return this._options ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Options : string.Empty); } }
		public string Cancel { get { return this._cancel ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Cancel : string.Empty); } }
		public string Refund { get { return this._refund ?? ((this.Localization.HasFallback && this.Localization.Fallback.Payments != null) ? this.Localization.Fallback.Payments.Refund : string.Empty); } }
		

    private PaymentsLocalizationGroup()
    {
      this._header = string.Empty;
				this._title = string.Empty;
				this._status = string.Empty;
				this._active = string.Empty;
				this._inactive = string.Empty;
				this._name = string.Empty;
				this._type = string.Empty;
				this._category = string.Empty;
				this._purchases = string.Empty;
				this._subscriptions = string.Empty;
				this._payments = string.Empty;
				this._created = string.Empty;
				this._cancelled = string.Empty;
				this._validUntil = string.Empty;
				this._activeUntil = string.Empty;
				this._options = string.Empty;
				this._cancel = string.Empty;
				this._refund = string.Empty;
				
    }

    public PaymentsLocalizationGroup(MobilePaywallLocalization localization)
    {
      this._localization = localization;
    }

    public string GetValue(string key)
    {
      switch (key)
      {
        case "Header":
					return this.Header;
				case "Title":
					return this.Title;
				case "Status":
					return this.Status;
				case "Active":
					return this.Active;
				case "Inactive":
					return this.Inactive;
				case "Name":
					return this.Name;
				case "Type":
					return this.Type;
				case "Category":
					return this.Category;
				case "Purchases":
					return this.Purchases;
				case "Subscriptions":
					return this.Subscriptions;
				case "Payments":
					return this.Payments;
				case "Created":
					return this.Created;
				case "Cancelled":
					return this.Cancelled;
				case "ValidUntil":
					return this.ValidUntil;
				case "ActiveUntil":
					return this.ActiveUntil;
				case "Options":
					return this.Options;
				case "Cancel":
					return this.Cancel;
				case "Refund":
					return this.Refund;
				
        default:
          return null;
      }
    }

    public bool AssignValue(string key, string value)
    {
      switch (key)
      {
        case "Header":
					this._header = value;
					return true;
				case "Title":
					this._title = value;
					return true;
				case "Status":
					this._status = value;
					return true;
				case "Active":
					this._active = value;
					return true;
				case "Inactive":
					this._inactive = value;
					return true;
				case "Name":
					this._name = value;
					return true;
				case "Type":
					this._type = value;
					return true;
				case "Category":
					this._category = value;
					return true;
				case "Purchases":
					this._purchases = value;
					return true;
				case "Subscriptions":
					this._subscriptions = value;
					return true;
				case "Payments":
					this._payments = value;
					return true;
				case "Created":
					this._created = value;
					return true;
				case "Cancelled":
					this._cancelled = value;
					return true;
				case "ValidUntil":
					this._validUntil = value;
					return true;
				case "ActiveUntil":
					this._activeUntil = value;
					return true;
				case "Options":
					this._options = value;
					return true;
				case "Cancel":
					this._cancel = value;
					return true;
				case "Refund":
					this._refund = value;
					return true;
				
        default:
          return false;
      }
    }
  }
}
