using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface ITemplateServiceInfoManager : IDataManager<TemplateServiceInfo> 
  {
	

  }

  public partial class TemplateServiceInfo : MobilePaywallObject<ITemplateServiceInfoManager> 
  {
		private Service _service;
		private TemplateServiceType _templateServiceType;
		private int _progress = -1;
		private int? _color = -1;
		private string _contact = String.Empty;
		private string _price = String.Empty;
		private bool _trckdEnabled = false;
		private bool _isPremiumSms = false;
		

		public Service Service 
		{
			get
			{
				if (this._service != null &&
						this._service.IsEmpty)
					if (this.ConnectionContext != null)
						this._service = Service.CreateManager().LazyLoad(this.ConnectionContext, this._service.ID) as Service;
					else
						this._service = Service.CreateManager().LazyLoad(this._service.ID) as Service;
				return this._service;
			}
			set { _service = value; }
		}

		public TemplateServiceType TemplateServiceType  { get { return this._templateServiceType; } set { this._templateServiceType = value; } }
		public int Progress{ get {return this._progress; } set { this._progress = value;} }
		public int? Color{ get {return this._color; } set { this._color = value;} }
		public string Contact{ get {return this._contact; } set { this._contact = value;} }
		public string Price{ get {return this._price; } set { this._price = value;} }
		public bool TrckdEnabled {get {return this._trckdEnabled; } set { this._trckdEnabled = value;} }
		public bool IsPremiumSms {get {return this._isPremiumSms; } set { this._isPremiumSms = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public TemplateServiceInfo()
    { 
    }

    public TemplateServiceInfo(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public TemplateServiceInfo(int id,  Service service, TemplateServiceType templateServiceType, int progress, int? color, string contact, string price, bool trckdEnabled, bool isPremiumSms, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._service = service;
			this._templateServiceType = templateServiceType;
			this._progress = progress;
			this._color = color;
			this._contact = contact;
			this._price = price;
			this._trckdEnabled = trckdEnabled;
			this._isPremiumSms = isPremiumSms;
			
    }

    public override object Clone(bool deepClone)
    {
      return new TemplateServiceInfo(-1,  this.Service, this.TemplateServiceType,this.Progress,this.Color,this.Contact,this.Price,this.TrckdEnabled,this.IsPremiumSms, DateTime.Now, DateTime.Now);
    }
  }
}

