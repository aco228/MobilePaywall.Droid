using MobilePaywall.Data;
using MobilePaywall.Web.Models.Specific._Template.ServiceCompareConfiguration.Base;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MobilePaywall.Web.Models.Specific._Template.ServiceCompareConfiguration.Types
{
  public class TemplateCompareServiceGroup : CompareGroupBase
  {
    private Service _compareService = null;

    public TemplateCompareServiceGroup(Service service)
      :base("ServiceCompareGroup")
    {
      this._compareService = service;
      this.Description = "Compare core.Service";
      this.CompareTable = new CompareTable()
      {
        SchemeName = "core",
        TableName = "Service",
        ColumnName = "ServiceID",
        ValueForThisService = PaywallHttpContext.Current.Service.ServiceData.ID.ToString(),
        ValueForCompareService = service.ID.ToString()
      };
      
    }

    public override void Execute()
    {
      this.CheckServiceType();
      this.CheckUserSessionType();
      this.CheckFallbackCountry();
      this.CheckFallbackLanguage();
      this.CheckAgeRating();
      this.CheckBusinessModel();
      this.CheckProduct();
    }

    private void CheckServiceType()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "ServiceTypeID";
      entry.CompareColumnValue = this._compareService.ServiceType.Name;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.ServiceType.Name;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.ServiceType.ToString();
      entry.IdFromCompareService = this._compareService.ServiceType.ID.ToString();
      
      if (this._compareService.ServiceType.ID == PaywallHttpContext.Current.Service.ServiceData.ServiceType.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckUserSessionType()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "UserSessionTypeID";
      entry.CompareColumnValue = this._compareService.UserSessionType.Name;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.UserSessionType.Name;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.UserSessionType.ID.ToString();
      entry.IdFromCompareService = this._compareService.UserSessionType.ID.ToString();

      if (this._compareService.UserSessionType.ID == PaywallHttpContext.Current.Service.ServiceData.UserSessionType.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckFallbackCountry()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "FallbackCountryID";
      entry.CompareColumnValue = this._compareService.FallbackCountry.TwoLetterIsoCode;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.FallbackCountry.TwoLetterIsoCode;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.FallbackCountry.ID.ToString();
      entry.IdFromCompareService = this._compareService.FallbackCountry.ID.ToString();
      
      if (this._compareService.FallbackCountry.ID == PaywallHttpContext.Current.Service.ServiceData.FallbackCountry.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckFallbackLanguage()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "FallbackLanguageID";
      entry.CompareColumnValue = this._compareService.FallbackLanguage.TwoLetterIsoCode;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.FallbackLanguage.TwoLetterIsoCode;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.FallbackLanguage.ID.ToString();
      entry.IdFromCompareService = this._compareService.FallbackLanguage.ID.ToString();

      if (this._compareService.FallbackLanguage.ID == PaywallHttpContext.Current.Service.ServiceData.FallbackLanguage.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckAgeRating()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "FallbackAgeRatingID";
      entry.CompareColumnValue = this._compareService.FallbackAgeRating.Name;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.FallbackAgeRating.Name;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.FallbackAgeRating.ID.ToString();
      entry.IdFromCompareService = this._compareService.FallbackAgeRating.ID.ToString();

      if (this._compareService.FallbackAgeRating.ID == PaywallHttpContext.Current.Service.ServiceData.FallbackAgeRating.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckBusinessModel()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "BusinessModelID";
      entry.CompareColumnValue = this._compareService.BusinessModel.Name;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.BusinessModel.ID.ToString();
      entry.IdFromCompareService = this._compareService.BusinessModel.ID.ToString();

      if (this._compareService.BusinessModel.ID == PaywallHttpContext.Current.Service.ServiceData.BusinessModel.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

    private void CheckProduct()
    {
      CompareEntry entry = new CompareEntry(this.CompareTable, CompareEntryResult.Unknown, CompareEntryResultFix.Unknown);
      entry.ColumnName = "ProductID";
      entry.CompareColumnValue = this._compareService.Product.Name;
      entry.CompareThisValue = PaywallHttpContext.Current.Service.ServiceData.Product.Name;
      entry.IdForThisService = PaywallHttpContext.Current.Service.ServiceData.Product.ToString();
      entry.IdFromCompareService = this._compareService.Product.ID.ToString();

      if (this._compareService.Product.ID == PaywallHttpContext.Current.Service.ServiceData.Product.ID)
      {
        entry.Result = CompareEntryResult.OK;
        entry.Fix = CompareEntryResultFix.None;
      }
      else
      {
        entry.Result = CompareEntryResult.Different;
        entry.Fix = CompareEntryResultFix.Update;
      }

      this.Entries.Add(entry);
    }

  }
}
