using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AuctionCreditTable : TableBase<AuctionCredit>
  {
    public static string GetColumnNames()
    {
      return TableBase<AuctionCredit>.GetColumnNames(string.Empty, AuctionCreditTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AuctionCredit>.GetColumnNames(tablePrefix, AuctionCreditTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AuctionCreditID = new ColumnDescription("AuctionCreditID", 0, typeof(int));
			public static readonly ColumnDescription AuctionCreditStatusID = new ColumnDescription("AuctionCreditStatusID", 1, typeof(int));
			public static readonly ColumnDescription CustomerID = new ColumnDescription("CustomerID", 2, typeof(int));
			public static readonly ColumnDescription Amount = new ColumnDescription("Amount", 3, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 4, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 5, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AuctionCreditID,
				AuctionCreditStatusID,
				CustomerID,
				Amount,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AuctionCreditTable(SqlQuery query) : base(query) { }
    public AuctionCreditTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AuctionCreditID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AuctionCreditID)); } }
		public int AuctionCreditStatusID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AuctionCreditStatusID)); } }
		public int CustomerID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CustomerID)); } }
		public int Amount { get { return this.Reader.GetInt32(this.GetIndex(Columns.Amount)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AuctionCredit CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AuctionCredit(this.AuctionCreditID,(AuctionCreditStatus)this.AuctionCreditStatusID,new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCredit CreateInstance(Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCredit(this.AuctionCreditID,(AuctionCreditStatus)this.AuctionCreditStatusID,customer ?? new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		

  }
}

