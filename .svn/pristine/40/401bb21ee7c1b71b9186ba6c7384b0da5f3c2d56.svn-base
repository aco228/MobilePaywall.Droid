using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class PaymentConfigurationTable : TableBase<PaymentConfiguration>
  {
    public static string GetColumnNames()
    {
      return TableBase<PaymentConfiguration>.GetColumnNames(string.Empty, PaymentConfigurationTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<PaymentConfiguration>.GetColumnNames(tablePrefix, PaymentConfigurationTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription PaymentConfigurationID = new ColumnDescription("PaymentConfigurationID", 0, typeof(int));
			public static readonly ColumnDescription Name = new ColumnDescription("Name", 1, typeof(string));
			public static readonly ColumnDescription Description = new ColumnDescription("Description", 2, typeof(string));
			public static readonly ColumnDescription PaymentCredentialsID = new ColumnDescription("PaymentCredentialsID", 3, typeof(int));
			public static readonly ColumnDescription PaymentInterfaceID = new ColumnDescription("PaymentInterfaceID", 4, typeof(int));
			public static readonly ColumnDescription PaymentProviderID = new ColumnDescription("PaymentProviderID", 5, typeof(int));
			public static readonly ColumnDescription BehaviorModelID = new ColumnDescription("BehaviorModelID", 6, typeof(int));
			public static readonly ColumnDescription PaymentTypeID = new ColumnDescription("PaymentTypeID", 7, typeof(int));
			public static readonly ColumnDescription ProductID = new ColumnDescription("ProductID", 8, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 9, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 10, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				PaymentConfigurationID,
				Name,
				Description,
				PaymentCredentialsID,
				PaymentInterfaceID,
				PaymentProviderID,
				BehaviorModelID,
				PaymentTypeID,
				ProductID,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public PaymentConfigurationTable(SqlQuery query) : base(query) { }
    public PaymentConfigurationTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int PaymentConfigurationID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentConfigurationID)); } }
		public string Name { get { return this.Reader.GetString(this.GetIndex(Columns.Name)); } }
		
		public string Description 
		{
			get
			{
				int index = this.GetIndex(Columns.Description);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public int PaymentCredentialsID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentCredentialsID)); } }
		public int PaymentInterfaceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentInterfaceID)); } }
		
		public int? PaymentProviderID 
		{
			get
			{
				int index = this.GetIndex(Columns.PaymentProviderID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public int BehaviorModelID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BehaviorModelID)); } }
		public int PaymentTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentTypeID)); } }
		public int ProductID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ProductID)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public PaymentConfiguration CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentProvider paymentProvider, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentProvider paymentProvider, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentProvider paymentProvider, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, PaymentProvider paymentProvider, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentProvider paymentProvider, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentProvider paymentProvider, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, PaymentProvider paymentProvider, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, PaymentProvider paymentProvider, BehaviorModel behaviorModel)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentProvider paymentProvider, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentInterface paymentInterface, PaymentProvider paymentProvider, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, PaymentProvider paymentProvider, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		public PaymentConfiguration CreateInstance(PaymentCredentials paymentCredentials, PaymentInterface paymentInterface, PaymentProvider paymentProvider, BehaviorModel behaviorModel, Product product)  
		{ 
			if (!this.HasData) return null;
			return new PaymentConfiguration(this.PaymentConfigurationID,this.Name,this.Description,paymentCredentials ?? new PaymentCredentials(this.PaymentCredentialsID), paymentInterface ?? new PaymentInterface(this.PaymentInterfaceID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), behaviorModel ?? new BehaviorModel(this.BehaviorModelID), (PaymentType)this.PaymentTypeID,product ?? new Product(this.ProductID), this.Updated,this.Created); 
		}
		

  }
}

