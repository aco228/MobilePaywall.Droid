using MobilePaywall.Localization;
using Senti.Localization;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MobilePaywall.Localization
{
  public class AuctionLocalizationGroup : ILocalizationGroup
  {
    public static readonly AuctionLocalizationGroup Empty = new AuctionLocalizationGroup();

    private MobilePaywallLocalization _localization = null;

    protected bool IsEmpty { get { return this._localization == null; } }
    protected MobilePaywallLocalization Localization { get { return this._localization; } }

    private string _subscribe = null;
    private string _allreadyHaveAccount = null;
		private string _login = null;
		private string _credits = null;
    private string _bid = null;
    private string _buyAdditionalCredits = null;
    private string _buyAdditionalCreditsError = null;
    private string _buy = null;
    private string _notEnoughCredits = null;
    private string _congratuations = null;
    private string _bidNotUnique = null;
    private string _sessionExpired = null;

    public string Subscribe { get { return this._subscribe ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Subscribe : string.Empty); } }
		public string AllreadyHaveAccount { get { return this._allreadyHaveAccount ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.AllreadyHaveAccount : string.Empty); } }
		public string Login { get { return this._login ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Login : string.Empty); } }
		public string Credits { get { return this._credits ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Credits : string.Empty); } }
    public string Bid { get { return this._bid ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Bid : string.Empty); } }
    public string BuyAdditionalCredits { get { return this._buyAdditionalCredits ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.BuyAdditionalCredits : string.Empty); } }
    public string BuyAdditionalCreditsError { get { return this._buyAdditionalCreditsError ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.BuyAdditionalCreditsError : string.Empty); } }
    public string Buy { get { return this._buy ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Buy : string.Empty); } }
    public string NotEnoughCredits { get { return this._notEnoughCredits ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.NotEnoughCredits : string.Empty); } }
    public string Congratuations { get { return this._congratuations ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.Congratuations : string.Empty); } }
    public string BidNotUnique { get { return this._bidNotUnique ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.BidNotUnique : string.Empty); } }
    public string SessionExpired { get { return this._sessionExpired ?? ((this.Localization.HasFallback && this.Localization.Fallback.Auction != null) ? this.Localization.Fallback.Auction.SessionExpired : string.Empty); } }
		

    private AuctionLocalizationGroup()
    {
      this._subscribe = string.Empty;
      this._allreadyHaveAccount = string.Empty;
      this._login = string.Empty;
      this._credits = string.Empty;
      this._bid = string.Empty;
      this._buyAdditionalCredits = string.Empty;
      this._buyAdditionalCreditsError = string.Empty;
      this._buy = string.Empty;
      this._notEnoughCredits = string.Empty;
      this._congratuations = string.Empty;
      this._bidNotUnique = string.Empty;
      this._sessionExpired = string.Empty;
    }

    public AuctionLocalizationGroup(MobilePaywallLocalization localization)
    {
      this._localization = localization;
    }

    public string GetValue(string key)
    {
      switch (key)
      {
        case "Subscribe":
					return this.Subscribe;
				case "AllreadyHaveAccount":
					return this.AllreadyHaveAccount;
				case "Login":
					return this.Login;
				case "Credits":
          return this.Credits;
        case "Bid":
          return this.Bid;
        case "BuyAdditionalCredits":
          return this.BuyAdditionalCredits;
        case "BuyAdditionalCreditsError":
          return this.BuyAdditionalCreditsError;
        case "Buy":
          return this.Buy;
        case "NotEnoughCredits":
          return this.NotEnoughCredits;
        case "Congratuations":
          return this.Congratuations;
        case "BidNotUnique":
          return this.BidNotUnique;
        case "SessionExpired":
          return this.SessionExpired;
				
        default:
          return null;
      }
    }

    public bool AssignValue(string key, string value)
    {
      switch (key)
      {
        case "Subscribe":
					this._subscribe = value;
					return true;
				case "AllreadyHaveAccount":
					this._allreadyHaveAccount = value;
					return true;
				case "Login":
					this._login = value;
					return true;
				case "Credits":
					this._credits = value;
          return true;
        case "Bid":
          this._bid = value;
          return true;
        case "BuyAdditionalCredits":
          this._buyAdditionalCredits = value;
          return true;
        case "BuyAdditionalCreditsError":
          this._buyAdditionalCreditsError = value;
          return true;
        case "Buy":
          this._buy = value;
          return true;
        case "NotEnoughCredits":
          this._notEnoughCredits = value;
          return true;
        case "Congratuations":
          this._congratuations = value;
          return true;
        case "BidNotUnique":
          this._bidNotUnique = value;
          return true;
        case "SessionExpired":
          this._sessionExpired = value;
          return true;
        default:
          return false;
      }
    }
  }
}
