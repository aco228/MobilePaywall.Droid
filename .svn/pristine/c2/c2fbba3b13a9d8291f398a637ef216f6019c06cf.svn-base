using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AndroidClientSessionTable : TableBase<AndroidClientSession>
  {
    public static string GetColumnNames()
    {
      return TableBase<AndroidClientSession>.GetColumnNames(string.Empty, AndroidClientSessionTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AndroidClientSession>.GetColumnNames(tablePrefix, AndroidClientSessionTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AndroidClientSessionID = new ColumnDescription("AndroidClientSessionID", 0, typeof(int));
			public static readonly ColumnDescription AndroidDistributionID = new ColumnDescription("AndroidDistributionID", 1, typeof(int));
			public static readonly ColumnDescription AndroidDistributionGroupID = new ColumnDescription("AndroidDistributionGroupID", 2, typeof(int));
			public static readonly ColumnDescription AndroidUniqueID = new ColumnDescription("AndroidUniqueID", 3, typeof(string));
			public static readonly ColumnDescription TokenID = new ColumnDescription("TokenID", 4, typeof(string));
			public static readonly ColumnDescription CountryID = new ColumnDescription("CountryID", 5, typeof(int));
			public static readonly ColumnDescription Msisdn = new ColumnDescription("Msisdn", 6, typeof(string));
			public static readonly ColumnDescription OSVersion = new ColumnDescription("OSVersion", 7, typeof(string));
			public static readonly ColumnDescription VersionSDK = new ColumnDescription("VersionSDK", 8, typeof(string));
			public static readonly ColumnDescription Device = new ColumnDescription("Device", 9, typeof(string));
			public static readonly ColumnDescription Company = new ColumnDescription("Company", 10, typeof(string));
			public static readonly ColumnDescription Model = new ColumnDescription("Model", 11, typeof(string));
			public static readonly ColumnDescription Product = new ColumnDescription("Product", 12, typeof(string));
			public static readonly ColumnDescription FingerprintID = new ColumnDescription("FingerprintID", 13, typeof(Guid));
			public static readonly ColumnDescription Referrer = new ColumnDescription("Referrer", 14, typeof(string));
			public static readonly ColumnDescription HasSmsPermission = new ColumnDescription("HasSmsPermission", 15, typeof(bool));
			public static readonly ColumnDescription LastPing = new ColumnDescription("LastPing", 16, typeof(DateTime));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 17, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 18, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AndroidClientSessionID,
				AndroidDistributionID,
				AndroidDistributionGroupID,
				AndroidUniqueID,
				TokenID,
				CountryID,
				Msisdn,
				OSVersion,
				VersionSDK,
				Device,
				Company,
				Model,
				Product,
				FingerprintID,
				Referrer,
				HasSmsPermission,
				LastPing,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AndroidClientSessionTable(SqlQuery query) : base(query) { }
    public AndroidClientSessionTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AndroidClientSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidClientSessionID)); } }
		public int AndroidDistributionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidDistributionID)); } }
		public int AndroidDistributionGroupID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidDistributionGroupID)); } }
		
		public string AndroidUniqueID 
		{
			get
			{
				int index = this.GetIndex(Columns.AndroidUniqueID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string TokenID 
		{
			get
			{
				int index = this.GetIndex(Columns.TokenID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public int? CountryID 
		{
			get
			{
				int index = this.GetIndex(Columns.CountryID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public string Msisdn 
		{
			get
			{
				int index = this.GetIndex(Columns.Msisdn);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string OSVersion 
		{
			get
			{
				int index = this.GetIndex(Columns.OSVersion);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string VersionSDK 
		{
			get
			{
				int index = this.GetIndex(Columns.VersionSDK);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string Device 
		{
			get
			{
				int index = this.GetIndex(Columns.Device);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string Company 
		{
			get
			{
				int index = this.GetIndex(Columns.Company);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string Model 
		{
			get
			{
				int index = this.GetIndex(Columns.Model);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string Product 
		{
			get
			{
				int index = this.GetIndex(Columns.Product);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public Guid? FingerprintID 
		{
			get
			{
				int index = this.GetIndex(Columns.FingerprintID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetGuid(index);
			}
		}

		
		public string Referrer 
		{
			get
			{
				int index = this.GetIndex(Columns.Referrer);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public bool HasSmsPermission { get { return this.Reader.GetBoolean(this.GetIndex(Columns.HasSmsPermission)); } }
		public DateTime LastPing { get { return this.Reader.GetDateTime(this.GetIndex(Columns.LastPing)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AndroidClientSession CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,new AndroidDistribution(this.AndroidDistributionID), new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,(CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistribution androidDistribution)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,androidDistribution ?? new AndroidDistribution(this.AndroidDistributionID), new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,(CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistributionGroup androidDistributionGroup)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,new AndroidDistribution(this.AndroidDistributionID), androidDistributionGroup ?? new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,(CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,new AndroidDistribution(this.AndroidDistributionID), new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,country ?? (this.CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistribution androidDistribution, AndroidDistributionGroup androidDistributionGroup)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,androidDistribution ?? new AndroidDistribution(this.AndroidDistributionID), androidDistributionGroup ?? new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,(CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistribution androidDistribution, Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,androidDistribution ?? new AndroidDistribution(this.AndroidDistributionID), new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,country ?? (this.CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistributionGroup androidDistributionGroup, Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,new AndroidDistribution(this.AndroidDistributionID), androidDistributionGroup ?? new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,country ?? (this.CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		public AndroidClientSession CreateInstance(AndroidDistribution androidDistribution, AndroidDistributionGroup androidDistributionGroup, Country country)  
		{ 
			if (!this.HasData) return null;
			return new AndroidClientSession(this.AndroidClientSessionID,androidDistribution ?? new AndroidDistribution(this.AndroidDistributionID), androidDistributionGroup ?? new AndroidDistributionGroup(this.AndroidDistributionGroupID), this.AndroidUniqueID,this.TokenID,country ?? (this.CountryID.HasValue ? new Country(this.CountryID.Value) : null), this.Msisdn,this.OSVersion,this.VersionSDK,this.Device,this.Company,this.Model,this.Product,this.FingerprintID,this.Referrer,this.HasSmsPermission,this.LastPing,this.Updated,this.Created); 
		}
		

  }
}

