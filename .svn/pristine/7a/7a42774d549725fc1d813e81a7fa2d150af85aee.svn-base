using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class BusinessModelEntryTable : TableBase<BusinessModelEntry>
  {
    public static string GetColumnNames()
    {
      return TableBase<BusinessModelEntry>.GetColumnNames(string.Empty, BusinessModelEntryTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<BusinessModelEntry>.GetColumnNames(tablePrefix, BusinessModelEntryTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription BusinessModelEntryID = new ColumnDescription("BusinessModelEntryID", 0, typeof(int));
			public static readonly ColumnDescription BusinessModelEntryStatusID = new ColumnDescription("BusinessModelEntryStatusID", 1, typeof(int));
			public static readonly ColumnDescription BusinessModelID = new ColumnDescription("BusinessModelID", 2, typeof(int));
			public static readonly ColumnDescription CountryID = new ColumnDescription("CountryID", 3, typeof(int));
			public static readonly ColumnDescription MobileOperatorID = new ColumnDescription("MobileOperatorID", 4, typeof(int));
			public static readonly ColumnDescription BusinessModelTypeID = new ColumnDescription("BusinessModelTypeID", 5, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 6, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 7, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				BusinessModelEntryID,
				BusinessModelEntryStatusID,
				BusinessModelID,
				CountryID,
				MobileOperatorID,
				BusinessModelTypeID,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public BusinessModelEntryTable(SqlQuery query) : base(query) { }
    public BusinessModelEntryTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int BusinessModelEntryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelEntryID)); } }
		public int BusinessModelEntryStatusID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelEntryStatusID)); } }
		public int BusinessModelID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelID)); } }
		public int CountryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CountryID)); } }
		
		public int? MobileOperatorID 
		{
			get
			{
				int index = this.GetIndex(Columns.MobileOperatorID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public int BusinessModelTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelTypeID)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public BusinessModelEntry CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(Country country)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, Country country)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(Country country, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(MobileOperator mobileOperator, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(Country country, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, Country country, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, MobileOperator mobileOperator, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, Country country, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(Country country, MobileOperator mobileOperator, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		public BusinessModelEntry CreateInstance(BusinessModel businessModel, Country country, MobileOperator mobileOperator, BusinessModelType businessModelType)  
		{ 
			if (!this.HasData) return null;
			return new BusinessModelEntry(this.BusinessModelEntryID,(BusinessModelEntryStatus)this.BusinessModelEntryStatusID,businessModel ?? new BusinessModel(this.BusinessModelID), country ?? new Country(this.CountryID), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), businessModelType ?? new BusinessModelType(this.BusinessModelTypeID), this.Updated,this.Created); 
		}
		

  }
}

