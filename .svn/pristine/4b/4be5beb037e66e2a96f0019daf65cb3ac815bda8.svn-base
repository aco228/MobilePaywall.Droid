using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IVideoContentDataManager : IDataManager<VideoContentData> 
  {
	

  }

  public partial class VideoContentData : MobilePaywallObject<IVideoContentDataManager> 
  {
		private VideoContent _videoContent;
		private VideoConversionProfileEntry _videoConversionProfileEntry;
		private bool _isFullVideo = false;
		private bool _isOriginal = false;
		private int _duration = -1;
		private byte[] _data = null;
		

		public VideoContent VideoContent 
		{
			get
			{
				if (this._videoContent != null &&
						this._videoContent.IsEmpty)
					if (this.ConnectionContext != null)
						this._videoContent = VideoContent.CreateManager().LazyLoad(this.ConnectionContext, this._videoContent.ID) as VideoContent;
					else
						this._videoContent = VideoContent.CreateManager().LazyLoad(this._videoContent.ID) as VideoContent;
				return this._videoContent;
			}
			set { _videoContent = value; }
		}

		public VideoConversionProfileEntry VideoConversionProfileEntry 
		{
			get
			{
				if (this._videoConversionProfileEntry != null &&
						this._videoConversionProfileEntry.IsEmpty)
					if (this.ConnectionContext != null)
						this._videoConversionProfileEntry = VideoConversionProfileEntry.CreateManager().LazyLoad(this.ConnectionContext, this._videoConversionProfileEntry.ID) as VideoConversionProfileEntry;
					else
						this._videoConversionProfileEntry = VideoConversionProfileEntry.CreateManager().LazyLoad(this._videoConversionProfileEntry.ID) as VideoConversionProfileEntry;
				return this._videoConversionProfileEntry;
			}
			set { _videoConversionProfileEntry = value; }
		}

		public bool IsFullVideo {get {return this._isFullVideo; } set { this._isFullVideo = value;} }
		public bool IsOriginal {get {return this._isOriginal; } set { this._isOriginal = value;} }
		public int Duration{ get {return this._duration; } set { this._duration = value;} }
		public byte[] Data { get { return this._data; } set { this._data = value;}  }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return true;} }

    public override bool IsUpdatable { get { return true;} }

    public VideoContentData()
    { 
    }

    public VideoContentData(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public VideoContentData(int id,  VideoContent videoContent, VideoConversionProfileEntry videoConversionProfileEntry, bool isFullVideo, bool isOriginal, int duration, byte[] data, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._videoContent = videoContent;
			this._videoConversionProfileEntry = videoConversionProfileEntry;
			this._isFullVideo = isFullVideo;
			this._isOriginal = isOriginal;
			this._duration = duration;
			this._data = data;
			
    }

    public override object Clone(bool deepClone)
    {
      return new VideoContentData(-1,  this.VideoContent, this.VideoConversionProfileEntry,this.IsFullVideo,this.IsOriginal,this.Duration,this.Data, DateTime.Now, DateTime.Now);
    }
  }
}

