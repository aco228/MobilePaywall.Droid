using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class ContentAccessViewTable : TableBase<ContentAccessView>
  {
    public static string GetColumnNames()
    {
      return TableBase<ContentAccessView>.GetColumnNames(string.Empty, ContentAccessViewTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<ContentAccessView>.GetColumnNames(tablePrefix, ContentAccessViewTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription ContentAccessViewID = new ColumnDescription("ContentAccessViewID", 0, typeof(int));
			public static readonly ColumnDescription InstanceID = new ColumnDescription("InstanceID", 1, typeof(int));
			public static readonly ColumnDescription ContentTypeID = new ColumnDescription("ContentTypeID", 2, typeof(int));
			public static readonly ColumnDescription ApplicationID = new ColumnDescription("ApplicationID", 3, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 4, typeof(int));
			public static readonly ColumnDescription ServiceConfigurationEntryID = new ColumnDescription("ServiceConfigurationEntryID", 5, typeof(int));
			public static readonly ColumnDescription ViewName = new ColumnDescription("ViewName", 6, typeof(string));
			public static readonly ColumnDescription LayoutName = new ColumnDescription("LayoutName", 7, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 8, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 9, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				ContentAccessViewID,
				InstanceID,
				ContentTypeID,
				ApplicationID,
				ServiceID,
				ServiceConfigurationEntryID,
				ViewName,
				LayoutName,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public ContentAccessViewTable(SqlQuery query) : base(query) { }
    public ContentAccessViewTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int ContentAccessViewID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentAccessViewID)); } }
		public int InstanceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.InstanceID)); } }
		public int ContentTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentTypeID)); } }
		
		public int? ApplicationID 
		{
			get
			{
				int index = this.GetIndex(Columns.ApplicationID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? ServiceID 
		{
			get
			{
				int index = this.GetIndex(Columns.ServiceID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? ServiceConfigurationEntryID 
		{
			get
			{
				int index = this.GetIndex(Columns.ServiceConfigurationEntryID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public string ViewName { get { return this.Reader.GetString(this.GetIndex(Columns.ViewName)); } }
		
		public string LayoutName 
		{
			get
			{
				int index = this.GetIndex(Columns.LayoutName);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public ContentAccessView CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Application application)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Application application)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Application application)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Application application, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Application application, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Application application)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Application application, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Application application, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Application application, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Application application, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Application application, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Application application, Service service)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Application application, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(ContentType contentType, Application application, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, Application application, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), (ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		public ContentAccessView CreateInstance(Instance instance, ContentType contentType, Application application, Service service, ServiceConfigurationEntry serviceConfigurationEntry)  
		{ 
			if (!this.HasData) return null;
			return new ContentAccessView(this.ContentAccessViewID,instance ?? new Instance(this.InstanceID), contentType ?? new ContentType(this.ContentTypeID), application ?? (this.ApplicationID.HasValue ? new Application(this.ApplicationID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), serviceConfigurationEntry ?? (this.ServiceConfigurationEntryID.HasValue ? new ServiceConfigurationEntry(this.ServiceConfigurationEntryID.Value) : null), this.ViewName,this.LayoutName,this.Updated,this.Created); 
		}
		

  }
}

