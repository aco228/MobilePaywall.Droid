using iTextSharp.text;
using iTextSharp.text.pdf;
using MobilePaywall.Data;
using Senti.Security;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace MobilePaywall.CustomerCare.Controllers
{
  // THIS CONTROLLER IS NOT IN USE!!!
  public class SubscriptionsController : Controller
  {
    // GET: Subscriptions
    public ActionResult Index()
    {
      return View();
    }

    public void AddTestClient()
    {
      ClientType type = ClientType.CreateManager().Load(2);
      string password = "test";

      byte[] encryptedUnckeckedPassword = PasswordEncryption.Create(password).EncryptedPasswordAndSalt;


      Client client = new Client(-1,
                                  Guid.NewGuid(),
                                  type,
                                  ClientStatus.Active,
                                  "ako",
                                  encryptedUnckeckedPassword,
                                  "ako@media-monekeys.com",
                                  DateTime.Now,
                                  DateTime.Now);

      client.Insert();
                                    
    }

    public ActionResult Transactions()
    {
      return View();
    }

    #region #TestPDFDocument#

    public void TestDocument2()
    {
      //PdfDocument.PdfDocument document = new PdfDocument.PdfDocument(HttpContext);
      //document.Open();

      //PdfDocument.PdfTable customerTable = new PdfDocument.PdfTable();
      //customerTable.Header = "Customer informations";
      //customerTable.Data.Add(new List<string>() { "Username", "aco228" });
      //customerTable.Data.Add(new List<string>() { "Country", "Montenegro" });
      //customerTable.Data.Add(new List<string>() { "Mobile operator", "Tcom" });

      //document.AddTable(customerTable);

      //PdfDocument.PdfTable subscriptionInformations = new PdfDocument.PdfTable();
      //subscriptionInformations.Header = "Subscription Informations";
      //subscriptionInformations.Data.Add(new List<string>() { "Identifier", "HJgasdGKASJGDkjasd" });
      //subscriptionInformations.Data.Add(new List<string>() { "Date", "12-05-2015" });
      //subscriptionInformations.Data.Add(new List<string>() { "Number of transactions", "12" });

      //document.AddTable(subscriptionInformations);

      //PdfDocument.PdfTable transactionTable = new PdfDocument.PdfTable();
      //transactionTable.Header = "Transactions";
      //transactionTable.HasHeaderColumn = true;
      //transactionTable.Data.Add(new List<string>() { "Date", "Amount", "Currency", "Status" });
      //transactionTable.Data.Add(new List<string>() { "12-05-2015", "156", "e", "Active" });
      //transactionTable.Data.Add(new List<string>() { "12-06-2015", "156", "e", "Active" });
      //transactionTable.Data.Add(new List<string>() { "12-07-2015", "156", "e", "Inactive" });
      //transactionTable.Data.Add(new List<string>() { "12-08-2015", "156", "e", "Active" });
      //transactionTable.Data.Add(new List<string>() { "12-09-2015", "156", "e", "Active" });

      //document.AddTable(transactionTable);

      //document.Close();
    }

    public void TestDocument()
    {
      //HttpContext.Response.ContentType = "application/pdf";
      //HttpContext.Response.AddHeader("content-disposition", "attachment;filename=Subscription.pdf");
      //HttpContext.Response.Cache.SetCacheability(HttpCacheability.NoCache);

      //Document doc = new Document();
      //PdfWriter.GetInstance(doc, HttpContext.Response.OutputStream);
      //doc.Open();

      //PdfPTable table = new PdfPTable(2);
      //table.DefaultCell.Padding = 5;
      //table.DefaultCell.BorderColor = BaseColor.GRAY;
      //PdfPCell cell = new PdfPCell(new Phrase("Customer informations"));
      //cell.HorizontalAlignment = 1;  //0=Left, 1=Centre, 2=Right
      //cell.Colspan = 2;
      //cell.Padding = 10;

      //table.AddCell(cell);
      //table.AddCell("Username"); table.AddCell("asdkjhaksd");
      //table.AddCell("Country"); table.AddCell("Montenegro");
      //table.AddCell("Mobile operator"); table.AddCell("T-com");

      //doc.Add(table);
      //doc.Add(new Paragraph("\r\n"));
      //doc.Add(new Paragraph("\r\n"));

      //table = new PdfPTable(2);
      //table.DefaultCell.Padding = 5;
      //table.DefaultCell.BorderColor = BaseColor.GRAY;
      //cell = new PdfPCell(new Phrase("Subscription informations"));
      //cell.HorizontalAlignment = 1;  //0=Left, 1=Centre, 2=Right
      //cell.Colspan = 2;
      //cell.Padding = 10;

      //table.AddCell(cell);
      //table.AddCell("Date"); table.AddCell("12-05-2005");
      //table.AddCell("Number of transaction"); table.AddCell("15");
      //table.AddCell("Some important information"); table.AddCell("bla bla");

      //doc.Add(table);
      //doc.Add(new Paragraph("\r\n"));
      //doc.Add(new Paragraph("\r\n"));

      //table = new PdfPTable(4);
      //table.DefaultCell.Padding = 5;
      //table.DefaultCell.BorderColor = BaseColor.GRAY;
      //cell = new PdfPCell(new Phrase("Transactions"));
      //cell.HorizontalAlignment = 1;  //0=Left, 1=Centre, 2=Right
      //cell.Colspan = 4;
      //cell.Padding = 10;

      //table.AddCell(cell);
      //table.AddCell("Date"); 
      //table.AddCell("Ammount");
      //table.AddCell("Currencty"); 
      //table.AddCell("Status");

      //table.AddCell("12-05-2005");
      //table.AddCell("15e");
      //table.AddCell("Euros");
      //table.AddCell("Active");

      //table.AddCell("12-05-2005");
      //table.AddCell("15e");
      //table.AddCell("Euros");
      //table.AddCell("Active");

      //table.AddCell("12-05-2005");
      //table.AddCell("15e");
      //table.AddCell("Euros");
      //table.AddCell("Active");

      //table.AddCell("12-05-2005");
      //table.AddCell("15e");
      //table.AddCell("Euros");
      //table.AddCell("Active");

      //table.AddCell("12-05-2005");
      //table.AddCell("15e");
      //table.AddCell("Euros");
      //table.AddCell("Active");

      //doc.Add(table);
      //doc.Add(new Paragraph("\r\n"));
      //doc.Add(new Paragraph("\r\n"));

      //doc.Close();
      //HttpContext.Response.Write(doc);
      //HttpContext.Response.End();
    }

    #endregion

  }
}