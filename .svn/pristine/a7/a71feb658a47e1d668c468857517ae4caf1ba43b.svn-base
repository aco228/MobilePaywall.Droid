using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;



namespace MobilePaywall.Data
{
	public partial interface IGeoDatabaseDownloadHistoryManager : IDataManager<GeoDatabaseDownloadHistory>
	{


	}

	public partial class GeoDatabaseDownloadHistory : MobilePaywallObject<IGeoDatabaseDownloadHistoryManager>
	{
		private string _mD5Hash = String.Empty;
		private byte[] _data = null;
		private GeoDatabaseDownloadHistoryStatus _geoDatabaseDownloadHistoryStatus;


		public string MD5Hash { get { return this._mD5Hash; } set { this._mD5Hash = value; } }
		public byte[] Data { get { return this._data; } set { this._data = value; } }
		public GeoDatabaseDownloadHistoryStatus GeoDatabaseDownloadHistoryStatus { get { return this._geoDatabaseDownloadHistoryStatus; } set { this._geoDatabaseDownloadHistoryStatus = value; } }


		public override bool IsInsertable { get { return true; } }

		public override bool IsDeletable { get { return false; } }

		public override bool IsUpdatable { get { return true; } }

		public GeoDatabaseDownloadHistory()
		{
		}

		public GeoDatabaseDownloadHistory(int id)
			: base(id, DateTime.Now, DateTime.Now, true)
		{
		}

		public GeoDatabaseDownloadHistory(int id, string mD5Hash, byte[] data, GeoDatabaseDownloadHistoryStatus geoDatabaseDownloadHistoryStatus, DateTime updated, DateTime created)
			: base(id, updated, created, false)
		{
			this._mD5Hash = mD5Hash;
			this._data = data;
			this._geoDatabaseDownloadHistoryStatus = geoDatabaseDownloadHistoryStatus;

		}

		public override object Clone(bool deepClone)
		{
			return new GeoDatabaseDownloadHistory(-1, this.MD5Hash, this.Data, this.GeoDatabaseDownloadHistoryStatus, DateTime.Now, DateTime.Now);
		}
	}
}

