using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

namespace MobilePaywall.Data.Sql
{
  public partial class LanguageManager : ILanguageManager
  {
		
		public Language Load(string value, LanguageIdentifier identifier)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, value, identifier);
		}

		public Language Load(IConnectionInfo connection, string value, LanguageIdentifier identifier)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, value, identifier);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, value, identifier);
		}

		public Language Load(ISqlConnectionInfo connection, string value, LanguageIdentifier identifier)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			string parameter = identifier.ToString();
			parameters.Where = string.Format("[l].{0} = @{0}", parameter);
			parameters.Arguments.Add(parameter, value);
			return this.Load(connection, parameters);
		}

		public List<Language> Load()
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection);
		}

		public List<Language> Load(IConnectionInfo connection)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection);
		}

		public List<Language> Load(ISqlConnectionInfo connection)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			return this.LoadMany(connection, parameters);
		}
  }
}

