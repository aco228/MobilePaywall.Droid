using Senti.Data;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidContentDataManager 
  {

    AndroidContentData Load(AndroidContent AndroidContent);
    AndroidContentData Load(IConnectionInfo connection, AndroidContent AndroidContent);
    AndroidContentData Load(AndroidContent AndroidContent, string mimeType);
    AndroidContentData Load(IConnectionInfo connection, AndroidContent AndroidContent, string mimeType);
    AndroidContentData Load(AndroidContent AndroidContent, VideoCodec videoCodec);
    AndroidContentData Load(IConnectionInfo connection, AndroidContent AndroidContent, VideoCodec videoCodec);
    AndroidContentData LoadWithoutData(int AndroidContentDataID);
    AndroidContentData LoadWithoutData(IConnectionInfo connection, int AndroidContentDataID);
    List<AndroidContentData> LoadWithoutData(AndroidContent AndroidContent);
    List<AndroidContentData> LoadWithoutData(IConnectionInfo connection, AndroidContent AndroidContent);
    List<AndroidContentData> Load(AndroidContent AndroidContent, VideoConversionProfile conversionProfile, bool isOriginal);
    List<AndroidContentData> Load(IConnectionInfo connection, AndroidContent AndroidContent, VideoConversionProfile conversionProfile, bool isOriginal);

  }

  public partial class AndroidContentData
  {
    private string _dataFilePath;
    public string DataFilePath { get { return this._dataFilePath; } set { this._dataFilePath = value; } }

    public static AndroidContentData LoadByID(int id)
    {
      AndroidContentData AndroidContentData = null;
      using (ConnectionInfo connection = new ConnectionInfo(IsolationLevel.ReadUncommitted))
      {
        connection.Transaction.Begin();
        IAndroidContentDataManager vcdManager = AndroidContentData.CreateManager(2);
        AndroidContentData = vcdManager.Load(connection, id);
        connection.Transaction.Commit();
      }

      return AndroidContentData;
    }

    public static AndroidContentData LoadByAndroidContent(AndroidContent AndroidContent)
    {
      AndroidContentData AndroidContentData = null;
      using (ConnectionInfo connection = new ConnectionInfo(IsolationLevel.ReadUncommitted))
      {
        connection.Transaction.Begin();
        IAndroidContentDataManager vcdManager = AndroidContentData.CreateManager(2);
        AndroidContentData = vcdManager.Load(connection, AndroidContent);
        connection.Transaction.Commit();
      }

      return AndroidContentData;
    }

    public static List<AndroidContentData> LoadWithoutDataByAndroidContent(AndroidContent AndroidContent)
    {
      List<AndroidContentData> AndroidContentData = null;
      using (ConnectionInfo connection = new ConnectionInfo(IsolationLevel.ReadUncommitted))
      {
        connection.Transaction.Begin();
        IAndroidContentDataManager vcdManager = MobilePaywall.Data.AndroidContentData.CreateManager(2);
        AndroidContentData = vcdManager.LoadWithoutData(connection, AndroidContent);
        connection.Transaction.Commit();
      }

      return AndroidContentData;
    }

    public static AndroidContentData LoadWitoutDataWithID(int AndroidContentDataID)
    {
      AndroidContentData AndroidContentData = null;
      using (ConnectionInfo connection = new ConnectionInfo(IsolationLevel.ReadUncommitted))
      {
        connection.Transaction.Begin();
        IAndroidContentDataManager vcdManager = AndroidContentData.CreateManager(2);
        AndroidContentData = vcdManager.LoadWithoutData(AndroidContentDataID);
        connection.Transaction.Commit();
      }
      return AndroidContentData;
    }

    public static List<AndroidContentData> LoadAllByAndroidContentAndConversionProfile(AndroidContent AndroidContent, VideoConversionProfile conversionProfile, bool isOriginal)
    {
      List<AndroidContentData> AndroidContentData = null;
      using (ConnectionInfo connection = new ConnectionInfo(IsolationLevel.ReadUncommitted))
      {
        connection.Transaction.Begin();
        IAndroidContentDataManager vcdManager = MobilePaywall.Data.AndroidContentData.CreateManager();
        AndroidContentData = vcdManager.Load(connection, AndroidContent, conversionProfile, isOriginal);
        connection.Transaction.Commit();
      }

      return AndroidContentData;
    }

  }
}

