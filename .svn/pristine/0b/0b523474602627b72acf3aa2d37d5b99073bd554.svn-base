using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class StatisticTable : TableBase<Statistic>
  {
    public static string GetColumnNames()
    {
      return TableBase<Statistic>.GetColumnNames(string.Empty, StatisticTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<Statistic>.GetColumnNames(tablePrefix, StatisticTable.Columns.Item);
    }

    public class Columns
    {
      public static readonly ColumnDescription UserSessionGuid = new ColumnDescription("UserSessionGuid", 0, typeof(int));
      public static readonly ColumnDescription MerchantID = new ColumnDescription("MerchantID", 1, typeof(int));
      public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 2, typeof(int));
      public static readonly ColumnDescription DomainID = new ColumnDescription("DomainID", 3, typeof(int));
			public static readonly ColumnDescription CustomerID = new ColumnDescription("CustomerID", 4, typeof(int));
      public static readonly ColumnDescription CountryID = new ColumnDescription("CountryID", 5, typeof(int));
      public static readonly ColumnDescription LanguageID = new ColumnDescription("LanguageID", 6, typeof(int));
      public static readonly ColumnDescription MobileOperatorID = new ColumnDescription("MobileOperatorID", 7, typeof(int));
      public static readonly ColumnDescription IPAddress = new ColumnDescription("IPAddress", 8, typeof(string));
      public static readonly ColumnDescription IPAddressTypeID = new ColumnDescription("IPAddressTypeID", 9, typeof(int));
      public static readonly ColumnDescription UserAgent = new ColumnDescription("UserAgent", 10, typeof(string));
      public static readonly ColumnDescription Referrer = new ColumnDescription("Referrer", 11, typeof(string));
			public static readonly ColumnDescription UserSessionCreated = new ColumnDescription("USCreated", 12, typeof(DateTime));
      public static readonly ColumnDescription LookupSessionGuid = new ColumnDescription("LookupSessionGuid", 13, typeof(Guid));
      public static readonly ColumnDescription LookupSessionStatusID = new ColumnDescription("LookupSessionStatusID", 14, typeof(int));
      public static readonly ColumnDescription LookupSessionCreated = new ColumnDescription("LSCreated", 15, typeof(DateTime));
      public static readonly ColumnDescription LookupSessionResultID = new ColumnDescription("LookupSessionResultID", 16, typeof(int));
      public static readonly ColumnDescription IsSuccessfull = new ColumnDescription("IsSuccessful", 17, typeof(bool));
			public static readonly ColumnDescription IsFinalResult = new ColumnDescription("IsFinalResult", 18, typeof(bool));
      public static readonly ColumnDescription PaymentRequestGuid = new ColumnDescription("PaymentRequestGuid", 19, typeof(Guid));
      public static readonly ColumnDescription PaymentRequestStatusID = new ColumnDescription("PaymentRequestStatusID", 20, typeof(int));
      public static readonly ColumnDescription PaymentRequestCreated = new ColumnDescription("PRCreated", 21, typeof(DateTime));
      public static readonly ColumnDescription PaymentGuid = new ColumnDescription("PaymentGuid", 22, typeof(Guid));
      public static readonly ColumnDescription PaymentTypeID = new ColumnDescription("PaymentTypeID", 23, typeof(int));
      public static readonly ColumnDescription PaymentStatusID = new ColumnDescription("PaymentStatusID", 24, typeof(int));
      public static readonly ColumnDescription PaymentUpdated = new ColumnDescription("PUpdated", 25, typeof(DateTime));
      public static readonly ColumnDescription PaymentCreated = new ColumnDescription("PCreated", 26, typeof(DateTime));
      public static readonly ColumnDescription TransactionGuid = new ColumnDescription("TransactionGuid", 27, typeof(Guid));
      public static readonly ColumnDescription TransactionStatusID = new ColumnDescription("TransactionStatusID", 28, typeof(int));
      public static readonly ColumnDescription TransactionCreated = new ColumnDescription("TCreated", 29, typeof(DateTime));
      public static readonly ColumnDescription STransactionGuid = new ColumnDescription("STransactionGuid", 30, typeof(Guid));
      public static readonly ColumnDescription STransactionStatusID = new ColumnDescription("STransactionStatusID", 31, typeof(int));
      public static readonly ColumnDescription STransactionCreated = new ColumnDescription("STCreated", 32, typeof(DateTime));

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
        UserSessionGuid,
        MerchantID,
        ServiceID,
        DomainID,
        CustomerID,
        CountryID,
        LanguageID, 
        MobileOperatorID,
        IPAddress,
        IPAddressTypeID,
        UserAgent,
        Referrer,
        UserSessionCreated,
        LookupSessionGuid,
        LookupSessionStatusID,
        LookupSessionCreated,
        LookupSessionResultID,
        IsSuccessfull,
        IsFinalResult,
        PaymentRequestGuid,
        PaymentRequestStatusID,
        PaymentRequestCreated,
        PaymentGuid,
        PaymentTypeID,
        PaymentStatusID,
        PaymentUpdated,
        PaymentCreated,
        TransactionGuid,
        TransactionStatusID,
        TransactionCreated,
        STransactionGuid,
        STransactionStatusID,
        STransactionCreated
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public StatisticTable(SqlQuery query) : base(query) { }
    public StatisticTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

    public Guid UserSessionGuid { get { return this.Reader.GetGuid(this.GetIndex(Columns.UserSessionGuid)); } }
    public int MerchantID { get { return this.Reader.GetInt32(this.GetIndex(Columns.MerchantID)); } }
    public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
    public int DomainID { get { return this.Reader.GetInt32(this.GetIndex(Columns.DomainID)); } }
    public int? CustomerID
		{
			get
			{
				int index = this.GetIndex(Columns.CustomerID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}
		public int? CountryID
		{
			get
			{
        int index = this.GetIndex(Columns.CountryID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}
    public int? LanguageID
    {
      get
      {
        int index = this.GetIndex(Columns.LanguageID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
		public int? MobileOperatorID
		{
			get
			{
        int index = this.GetIndex(Columns.MobileOperatorID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}
    public string IPAddress { get { return this.Reader.GetString(this.GetIndex(Columns.IPAddress)); } }
    public int IPAddressTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.IPAddressTypeID)); } }
    public string UserAgent
    {
      get
      {
        int index = this.GetIndex(Columns.UserAgent);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetString(index);
      }
    }
    public string Referrer
    {
      get
      {
        int index = this.GetIndex(Columns.Referrer);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetString(index);
      }
    }
    public DateTime UserSessionCreated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.UserSessionCreated)); } }
    public Guid? LookupSessionGuid
    {
      get
      {
        int index = this.GetIndex(Columns.LookupSessionGuid);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetGuid(index);
      }
    }
    public int? LookupSessionStatusID
    {
      get
      {
        int index = this.GetIndex(Columns.LookupSessionStatusID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
    public DateTime? LookupSessionCreated
		{
			get
			{
				int index = this.GetIndex(Columns.LookupSessionCreated);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}
		public int? LookupSessionResultID
		{
			get
			{
        int index = this.GetIndex(Columns.LookupSessionResultID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}
		public bool? IsSuccessfull
		{
			get
			{
				int index = this.GetIndex(Columns.IsSuccessfull);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetBoolean(index);
			}
		}
		public bool? IsFinalResult
		{
			get
			{
				int index = this.GetIndex(Columns.IsFinalResult);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetBoolean(index);
			}
		}
    public Guid? PaymentRequestGuid
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentRequestGuid);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetGuid(index);
      }
    }
    public int? PaymentRequestStatusID
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentRequestStatusID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
    public DateTime? PaymentRequestCreated
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentRequestCreated);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetDateTime(index);
      }
    }
    public Guid? PaymentGuid
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentGuid);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetGuid(index);
      }
    }
    public int? PaymentTypeID
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentTypeID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
		public int? PaymentStatusID
		{
			get
			{
        int index = this.GetIndex(Columns.PaymentStatusID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}
    public DateTime? PaymentUpdated
    {
      get
      {
        int index = this.GetIndex(Columns.PaymentUpdated);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetDateTime(index);
      }
    }
		public DateTime? PaymentCreated
		{
			get
			{
				int index = this.GetIndex(Columns.PaymentCreated);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}
    public Guid? TransactionGuid
    {
      get
      {
        int index = this.GetIndex(Columns.TransactionGuid);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetGuid(index);
      }
    }
    public int? TransactionStatusID
    {
      get
      {
        int index = this.GetIndex(Columns.TransactionStatusID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
    public DateTime? TransactionCreated
    {
      get
      {
        int index = this.GetIndex(Columns.TransactionCreated);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetDateTime(index);
      }
    }
    public Guid? STransactionGuid
    {
      get
      {
        int index = this.GetIndex(Columns.STransactionGuid);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetGuid(index);
      }
    }
    public int? STransactionStatusID
    {
      get
      {
        int index = this.GetIndex(Columns.STransactionStatusID);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetInt32(index);
      }
    }
    public DateTime? STransactionCreated
    {
      get
      {
        int index = this.GetIndex(Columns.STransactionCreated);
        if (this.Reader.IsDBNull(index)) return null;
        return this.Reader.GetDateTime(index);
      }
    }
    
	  public Statistic CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return 
        new Statistic(this.UserSessionGuid, this.MerchantID, this.ServiceID, this.DomainID, this.CustomerID, this.CountryID, this.LanguageID, this.MobileOperatorID, this.IPAddress, this.IPAddressTypeID, this.UserAgent, this.Referrer,
          this.UserSessionCreated, this.LookupSessionGuid, this.LookupSessionStatusID, this.LookupSessionCreated, this.LookupSessionResultID, this.IsSuccessfull, this.IsFinalResult, this.PaymentRequestGuid, this.PaymentRequestStatusID,
          this.PaymentRequestCreated, this.PaymentGuid, this.PaymentTypeID, this.PaymentStatusID, this.PaymentUpdated, this.PaymentCreated, this.TransactionGuid, this.TransactionStatusID, this.TransactionCreated, this.STransactionGuid, 
          this.STransactionStatusID, this.STransactionCreated);
		}
  }
}