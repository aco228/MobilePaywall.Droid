using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidDistributionManager : IDataManager<AndroidDistribution> 
  {
	

  }

  public partial class AndroidDistribution : MobilePaywallObject<IAndroidDistributionManager> 
  {
		private AndroidDistributionGroup _androidDistributionGroup;
		private string _name = String.Empty;
		private string _description = String.Empty;
		

		public AndroidDistributionGroup AndroidDistributionGroup 
		{
			get
			{
				if (this._androidDistributionGroup != null &&
						this._androidDistributionGroup.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidDistributionGroup = AndroidDistributionGroup.CreateManager().LazyLoad(this.ConnectionContext, this._androidDistributionGroup.ID) as AndroidDistributionGroup;
					else
						this._androidDistributionGroup = AndroidDistributionGroup.CreateManager().LazyLoad(this._androidDistributionGroup.ID) as AndroidDistributionGroup;
				return this._androidDistributionGroup;
			}
			set { _androidDistributionGroup = value; }
		}

		public string Name{ get {return this._name; } set { this._name = value;} }
		public string Description{ get {return this._description; } set { this._description = value;} }
		

    public override bool IsInsertable { get { return true;} }

  //  public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidDistribution()
    { 
    }

    public AndroidDistribution(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidDistribution(int id,  AndroidDistributionGroup androidDistributionGroup, string name, string description, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidDistributionGroup = androidDistributionGroup;
			this._name = name;
			this._description = description;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidDistribution(-1,  this.AndroidDistributionGroup,this.Name,this.Description, DateTime.Now, DateTime.Now);
    }
  }
}

