using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class LookupSessionTable : TableBase<LookupSession>
  {
    public static string GetColumnNames()
    {
      return TableBase<LookupSession>.GetColumnNames(string.Empty, LookupSessionTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<LookupSession>.GetColumnNames(tablePrefix, LookupSessionTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription LookupSessionID = new ColumnDescription("LookupSessionID", 0, typeof(int));
			public static readonly ColumnDescription LookupSessionGuid = new ColumnDescription("LookupSessionGuid", 1, typeof(Guid));
			public static readonly ColumnDescription LookupSessionStatusID = new ColumnDescription("LookupSessionStatusID", 2, typeof(int));
			public static readonly ColumnDescription UserSessionID = new ColumnDescription("UserSessionID", 3, typeof(int));
			public static readonly ColumnDescription UserHttpRequestID = new ColumnDescription("UserHttpRequestID", 4, typeof(int));
			public static readonly ColumnDescription IdentificationSessionGuid = new ColumnDescription("IdentificationSessionGuid", 5, typeof(Guid));
			public static readonly ColumnDescription LookupUrl = new ColumnDescription("LookupUrl", 6, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 7, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 8, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				LookupSessionID,
				LookupSessionGuid,
				LookupSessionStatusID,
				UserSessionID,
				UserHttpRequestID,
				IdentificationSessionGuid,
				LookupUrl,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public LookupSessionTable(SqlQuery query) : base(query) { }
    public LookupSessionTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int LookupSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.LookupSessionID)); } }
		public Guid LookupSessionGuid { get { return this.Reader.GetGuid(this.GetIndex(Columns.LookupSessionGuid)); } }
		public int LookupSessionStatusID { get { return this.Reader.GetInt32(this.GetIndex(Columns.LookupSessionStatusID)); } }
		public int UserSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.UserSessionID)); } }
		public int UserHttpRequestID { get { return this.Reader.GetInt32(this.GetIndex(Columns.UserHttpRequestID)); } }
		
		public Guid? IdentificationSessionGuid 
		{
			get
			{
				int index = this.GetIndex(Columns.IdentificationSessionGuid);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetGuid(index);
			}
		}

		
		public string LookupUrl 
		{
			get
			{
				int index = this.GetIndex(Columns.LookupUrl);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public LookupSession CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new LookupSession(this.LookupSessionID,this.LookupSessionGuid,(LookupSessionStatus)this.LookupSessionStatusID,new UserSession(this.UserSessionID), new UserHttpRequest(this.UserHttpRequestID), this.IdentificationSessionGuid,this.LookupUrl,this.Updated,this.Created); 
		}
		public LookupSession CreateInstance(UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new LookupSession(this.LookupSessionID,this.LookupSessionGuid,(LookupSessionStatus)this.LookupSessionStatusID,new UserSession(this.UserSessionID), userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.IdentificationSessionGuid,this.LookupUrl,this.Updated,this.Created); 
		}
		public LookupSession CreateInstance(UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new LookupSession(this.LookupSessionID,this.LookupSessionGuid,(LookupSessionStatus)this.LookupSessionStatusID,userSession ?? new UserSession(this.UserSessionID), new UserHttpRequest(this.UserHttpRequestID), this.IdentificationSessionGuid,this.LookupUrl,this.Updated,this.Created); 
		}
		public LookupSession CreateInstance(UserSession userSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new LookupSession(this.LookupSessionID,this.LookupSessionGuid,(LookupSessionStatus)this.LookupSessionStatusID,userSession ?? new UserSession(this.UserSessionID), userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.IdentificationSessionGuid,this.LookupUrl,this.Updated,this.Created); 
		}
		

  }
}

