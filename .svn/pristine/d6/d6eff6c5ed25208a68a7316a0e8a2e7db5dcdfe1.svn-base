using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MobilePaywall.Implementation.Log.LogDatabase
{
  public class OLCacheLogDatabaseSync : LogDatabaseManager
  {
    private Data.OLCache _cache = null;

    public OLCacheLogDatabaseSync(Data.OLCache olCache)
      :base(olCache, "OLCache")
    {
      this._cache = olCache;
      this.Init();
    }

    public static void Call(Data.OLCache olCache)
    {
      OLCacheLogDatabaseSync a = new OLCacheLogDatabaseSync(olCache);
    }

    protected override void Collect()
    {
      this.AddEntry("UserSessionID", this._cache.UserSessionID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);
      this.AddEntry("ServiceID", this._cache.ServiceID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);
      this.AddEntry("Pxid", this._cache.Pxid.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("IPAddress", this._cache.IPAddress.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("ServiceName", this._cache.ServiceName.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("ServiceCountry", this._cache.ServiceCountry.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("CountryName", this._cache.CountryName.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
      this.AddEntry("CountryCode", this._cache.CountryCode.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._cache.MobileOperatorID.HasValue)
        this.AddEntry("MobileOperatorID", this._cache.MobileOperatorID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(!string.IsNullOrEmpty(this._cache.MobileOperatorName))
        this.AddEntry("MobileOperatorName", this._cache.MobileOperatorName.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._cache.IdentificationSessionGuid.HasValue)
        this.AddEntry("IdentificationSessionGuid", this._cache.IdentificationSessionGuid.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(!string.IsNullOrEmpty(this._cache.Msisdn))
        this.AddEntry("Msisdn", this._cache.Msisdn.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._cache.PaymentRequestID.HasValue)
        this.AddEntry("PaymentRequestID", this._cache.PaymentRequestID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._cache.PaymentID.HasValue)
        this.AddEntry("PaymentID", this._cache.PaymentID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._cache.PaymentCreated.HasValue)
        this.AddEntry("PaymentCreated", this.ConvertDate(this._cache.PaymentCreated.Value), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._cache.PaymentContentAccessPolicyID.HasValue)
        this.AddEntry("PaymentContentAccessPolicyID", this._cache.PaymentContentAccessPolicyID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._cache.TransactionID.HasValue)
        this.AddEntry("TransactionID", this._cache.TransactionID.ToString(), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._cache.TransactionCreated.HasValue)
        this.AddEntry("TransactionCreated", this.ConvertDate(this._cache.TransactionCreated.Value), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);

      if(this._cache.IsSubseguent.HasValue)
        this.AddEntry("IsSubseguent", this._cache.IsSubseguent.Value ? "1" : "0", LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.Int);

      if(this._cache.SessionCreated.HasValue)
        this.AddEntry("SessionCreated", this.ConvertDate(this._cache.SessionCreated.Value), LogDatabaseManagerUpdateEntry.LogDatabaseManagerUpdateEntryType.String);
    }
  }
}
