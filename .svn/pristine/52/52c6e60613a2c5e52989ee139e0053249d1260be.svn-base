using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IQuizAnswerManager : IDataManager<QuizAnswer> 
  {
	

  }

  public partial class QuizAnswer : MobilePaywallObject<IQuizAnswerManager> 
  {
		private QuizQuestion _quizQuestion;
		private int _weight = -1;
		private Language _language;
		private string _text = String.Empty;
		private string _description = String.Empty;
		

		public QuizQuestion QuizQuestion 
		{
			get
			{
				if (this._quizQuestion != null &&
						this._quizQuestion.IsEmpty)
					if (this.ConnectionContext != null)
						this._quizQuestion = QuizQuestion.CreateManager().LazyLoad(this.ConnectionContext, this._quizQuestion.ID) as QuizQuestion;
					else
						this._quizQuestion = QuizQuestion.CreateManager().LazyLoad(this._quizQuestion.ID) as QuizQuestion;
				return this._quizQuestion;
			}
			set { _quizQuestion = value; }
		}

		public int Weight{ get {return this._weight; } set { this._weight = value;} }
		public Language Language 
		{
			get
			{
				if (this._language != null &&
						this._language.IsEmpty)
					if (this.ConnectionContext != null)
						this._language = Language.CreateManager().LazyLoad(this.ConnectionContext, this._language.ID) as Language;
					else
						this._language = Language.CreateManager().LazyLoad(this._language.ID) as Language;
				return this._language;
			}
			set { _language = value; }
		}

		public string Text{ get {return this._text; } set { this._text = value;} }
		public string Description{ get {return this._description; } set { this._description = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public QuizAnswer()
    { 
    }

    public QuizAnswer(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public QuizAnswer(int id,  QuizQuestion quizQuestion, int weight, Language language, string text, string description, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._quizQuestion = quizQuestion;
			this._weight = weight;
			this._language = language;
			this._text = text;
			this._description = description;
			
    }

    public override object Clone(bool deepClone)
    {
      return new QuizAnswer(-1,  this.QuizQuestion,this.Weight, this.Language,this.Text,this.Description, DateTime.Now, DateTime.Now);
    }
  }
}

