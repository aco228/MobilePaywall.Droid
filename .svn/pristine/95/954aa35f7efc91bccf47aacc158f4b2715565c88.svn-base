using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IQuizResultManager : IDataManager<QuizResult> 
  {
	

  }

  public partial class QuizResult : MobilePaywallObject<IQuizResultManager> 
  {
		private QuizContent _quizContent;
		private Language _language;
		private string _title = String.Empty;
		private string _description = String.Empty;
		private int _fromWeight = -1;
		private int _toWeight = -1;
		

		public QuizContent QuizContent 
		{
			get
			{
				if (this._quizContent != null &&
						this._quizContent.IsEmpty)
					if (this.ConnectionContext != null)
						this._quizContent = QuizContent.CreateManager().LazyLoad(this.ConnectionContext, this._quizContent.ID) as QuizContent;
					else
						this._quizContent = QuizContent.CreateManager().LazyLoad(this._quizContent.ID) as QuizContent;
				return this._quizContent;
			}
			set { _quizContent = value; }
		}

		public Language Language 
		{
			get
			{
				if (this._language != null &&
						this._language.IsEmpty)
					if (this.ConnectionContext != null)
						this._language = Language.CreateManager().LazyLoad(this.ConnectionContext, this._language.ID) as Language;
					else
						this._language = Language.CreateManager().LazyLoad(this._language.ID) as Language;
				return this._language;
			}
			set { _language = value; }
		}

		public string Title{ get {return this._title; } set { this._title = value;} }
		public string Description{ get {return this._description; } set { this._description = value;} }
		public int FromWeight{ get {return this._fromWeight; } set { this._fromWeight = value;} }
		public int ToWeight{ get {return this._toWeight; } set { this._toWeight = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public QuizResult()
    { 
    }

    public QuizResult(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public QuizResult(int id,  QuizContent quizContent, Language language, string title, string description, int fromWeight, int toWeight, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._quizContent = quizContent;
			this._language = language;
			this._title = title;
			this._description = description;
			this._fromWeight = fromWeight;
			this._toWeight = toWeight;
			
    }

    public override object Clone(bool deepClone)
    {
      return new QuizResult(-1,  this.QuizContent, this.Language,this.Title,this.Description,this.FromWeight,this.ToWeight, DateTime.Now, DateTime.Now);
    }
  }
}

