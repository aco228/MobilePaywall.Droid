using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class ShortcodeKeywordServiceOfferMapTable : TableBase<ShortcodeKeywordServiceOfferMap>
  {
    public static string GetColumnNames()
    {
      return TableBase<ShortcodeKeywordServiceOfferMap>.GetColumnNames(string.Empty, ShortcodeKeywordServiceOfferMapTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<ShortcodeKeywordServiceOfferMap>.GetColumnNames(tablePrefix, ShortcodeKeywordServiceOfferMapTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription ShortcodeKeywordServiceOfferMapID = new ColumnDescription("ShortcodeKeywordServiceOfferMapID", 0, typeof(int));
			public static readonly ColumnDescription ShortcodeID = new ColumnDescription("ShortcodeID", 1, typeof(int));
			public static readonly ColumnDescription KeywordID = new ColumnDescription("KeywordID", 2, typeof(int));
			public static readonly ColumnDescription ServiceOfferID = new ColumnDescription("ServiceOfferID", 3, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 4, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 5, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				ShortcodeKeywordServiceOfferMapID,
				ShortcodeID,
				KeywordID,
				ServiceOfferID,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public ShortcodeKeywordServiceOfferMapTable(SqlQuery query) : base(query) { }
    public ShortcodeKeywordServiceOfferMapTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int ShortcodeKeywordServiceOfferMapID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ShortcodeKeywordServiceOfferMapID)); } }
		public int ShortcodeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ShortcodeID)); } }
		public int KeywordID { get { return this.Reader.GetInt32(this.GetIndex(Columns.KeywordID)); } }
		public int ServiceOfferID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceOfferID)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public ShortcodeKeywordServiceOfferMap CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,new Shortcode(this.ShortcodeID), new Keyword(this.KeywordID), new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Keyword keyword)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,new Shortcode(this.ShortcodeID), keyword ?? new Keyword(this.KeywordID), new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,new Shortcode(this.ShortcodeID), new Keyword(this.KeywordID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Shortcode shortcode)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,shortcode ?? new Shortcode(this.ShortcodeID), new Keyword(this.KeywordID), new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Keyword keyword, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,new Shortcode(this.ShortcodeID), keyword ?? new Keyword(this.KeywordID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Shortcode shortcode, Keyword keyword)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,shortcode ?? new Shortcode(this.ShortcodeID), keyword ?? new Keyword(this.KeywordID), new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Shortcode shortcode, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,shortcode ?? new Shortcode(this.ShortcodeID), new Keyword(this.KeywordID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		public ShortcodeKeywordServiceOfferMap CreateInstance(Shortcode shortcode, Keyword keyword, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID,shortcode ?? new Shortcode(this.ShortcodeID), keyword ?? new Keyword(this.KeywordID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), this.Updated,this.Created); 
		}
		

  }
}

