@model PaymentsViewModel
@{
  Layout = string.Format("~/Views/{0}/_Layout/_Layout.cshtml", PaywallHttpContext.Current.Service.ServiceData.Template.Name);
}
@Styles.Render("~/Style/Pink/Cancellation")
@Scripts.Render("~/Script/Cancellation")

<style>
  .row { margin: 0px !important; padding: 20px !important; }
  td { padding: 5px !important; }
  .cancellation_table { background-color: rgb(86, 87, 85) !important; }
</style>

<div class="block clearfix">
  <h1> @Translations.Web.Payments.Title </h1>
  <p>
    @{
      if (Model.InactiveSubscriptions != null && Model.InactiveSubscriptions.Count > 0)
      {
        <h2 style="margin-top:20px"> @Translations.Web.Payments.Subscriptions </h2>

        <table id="cancellation_table_header">
          <tr>
            <td>@Translations.Web.Payments.Status</td>
            <td>@Translations.Web.Payments.Name</td>
            <td>@Translations.Web.Payments.Created</td>
          </tr>

          @foreach (Cashflow.Message.Data.Subscription s in Model.InactiveSubscriptions)
          {
            <tr>
              <td>
                <div class="cancellation_circle cancellation_circle_red"></div>
                inactive
              </td>
              <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
              <td>@s.Created<br /></td>
            </tr>

          }
        </table>
      }
    }

    @if (Model.ActiveSubscriptions != null && Model.ActiveSubscriptions.Count > 0)
    {

      <h2 style="margin-top:20px"> @Translations.Web.Payments.Subscriptions </h2>
      <div class="header header1"><div class="header_text"></div></div>

      <table id="cancellation_table_header">
        <tr>
          <td>@Translations.Web.Payments.Status</td>
          <td>@Translations.Web.Payments.Name</td>
          <td>@Translations.Web.Payments.Created</td>
          <td>@Translations.Web.Payments.Options</td>
        </tr>

        @foreach (Cashflow.Message.Data.Subscription s in Model.ActiveSubscriptions)
        {
          <tr>
            <td>
              <div class="cancellation_circle cancellation_circle_green"></div>
              active
            </td>
            <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
            <td>@s.Created</td>
            <td>
              <a href="@Model.Link">
                <button class="btn aktiveBtn" guid="@s.SubscriptionID">@Translations.Web.Payments.Cancel</button>
              </a>
            </td>
          </tr>
        }
      </table>
    }

  </p>
</div>

<div class="block clearfix">
  <p>
    @{
      if (Model.Purchases != null && Model.Purchases.Count > 0)
      {
        <div class="header"><div class="header_text">@Translations.Web.Payments.Subscriptions</div></div>

        <table id="cancellation_table_header">
          <tr>
            <td>@Translations.Web.Payments.Name</td>
            <td>@Translations.Web.Payments.Created</td>
          </tr>
          @foreach (Cashflow.Message.Data.Purchase p in Model.Purchases)
          {
            <tr>
              <td>@PaywallHttpContext.Current.Service.ServiceData.Name<br />@PaywallHttpContext.Current.Service.ServiceData.BusinessModel.Name</td>
              <td>@p.Created<br /></td>
            </tr>

          }
        </table>
      }
    }
  </p>
</div>

<script>
  @*var _cancellation = null;

  $(document).ready(function () {
    _cancellation = new Cancellation();
    _cancellation.QuestionText = '@Translations.Web.Cancel.Question';
    _cancellation.ConfirmText = '@Translations.Web.Cancel.Confirm';
    _cancellation.DenyText = '@Translations.Web.Cancel.Deny';
  });*@
</script>
