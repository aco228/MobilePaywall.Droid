using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class ServiceVisualMediaDimensionsMapManager : IServiceVisualMediaDimensionsMapManager
  {

		public List<ServiceVisualMediaDimensionsMap> Load(Service service)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, service);
		}

		public List<ServiceVisualMediaDimensionsMap> Load(IConnectionInfo connection, Service service)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, service);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, service);
		}

		public List<ServiceVisualMediaDimensionsMap> Load(ISqlConnectionInfo connection, Service service)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[svmdm_s].ServiceID = @ServiceID";
			parameters.Arguments.Add("ServiceID", service.ID);
			//return this.Load(connection, parameters);
			return this.LoadMany(connection, parameters);
		}


		public List<ServiceVisualMediaDimensionsMap> Load(VisualMediaDimensions visualMediaDimensions)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, visualMediaDimensions);
		}

		public List<ServiceVisualMediaDimensionsMap> Load(IConnectionInfo connection, VisualMediaDimensions visualMediaDimensions)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, visualMediaDimensions);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, visualMediaDimensions);
		}

		public List<ServiceVisualMediaDimensionsMap> Load(ISqlConnectionInfo connection, VisualMediaDimensions visualMediaDimensions)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[svmdm_vmd].VisualMediaDimensionsID = @VisualMediaDimensionsID";
			parameters.Arguments.Add("VisualMediaDimensionsID", visualMediaDimensions.ID);
			//return this.Load(connection, parameters);
			return this.LoadMany(connection, parameters);
		}


		public ServiceVisualMediaDimensionsMap Load(Service service, VisualMediaDimensions visualMediaDimensions)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, service, visualMediaDimensions);
		}

		public ServiceVisualMediaDimensionsMap Load(IConnectionInfo connection, Service service, VisualMediaDimensions visualMediaDimensions)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, service, visualMediaDimensions);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, service, visualMediaDimensions);
		}

		public ServiceVisualMediaDimensionsMap Load(ISqlConnectionInfo connection, Service service, VisualMediaDimensions visualMediaDimensions)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[svmdm_s].ServiceID = @ServiceID AND [svmdm_vmd].VisualMediaDimensionsID = @VisualMediaDimensions";
			parameters.Arguments.Add("ServiceID", service.ID);
			parameters.Arguments.Add("VisualMediaDimensionsID", visualMediaDimensions.ID);
			return this.Load(connection, parameters);
			//return this.LoadMany(connection, parameters);
		}

  }
}

