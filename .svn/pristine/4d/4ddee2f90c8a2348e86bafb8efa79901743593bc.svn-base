using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidPremiumCustomerServiceMapManager : IDataManager<AndroidPremiumCustomerServiceMap> 
  {
	

  }

  public partial class AndroidPremiumCustomerServiceMap : MobilePaywallObject<IAndroidPremiumCustomerServiceMapManager> 
  {
		private AndroidPremiumCustomer _androidPremiumCustomer;
		private int? _oLCacheID = -1;
		private int _serviceID = -1;
		private string _shortcode = String.Empty;
		private string _textMessage = String.Empty;
		private int? _paymentRequestID = -1;
		

		public AndroidPremiumCustomer AndroidPremiumCustomer 
		{
			get
			{
				if (this._androidPremiumCustomer != null &&
						this._androidPremiumCustomer.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidPremiumCustomer = AndroidPremiumCustomer.CreateManager().LazyLoad(this.ConnectionContext, this._androidPremiumCustomer.ID) as AndroidPremiumCustomer;
					else
						this._androidPremiumCustomer = AndroidPremiumCustomer.CreateManager().LazyLoad(this._androidPremiumCustomer.ID) as AndroidPremiumCustomer;
				return this._androidPremiumCustomer;
			}
			set { _androidPremiumCustomer = value; }
		}

		public int? OLCacheID{ get {return this._oLCacheID; } set { this._oLCacheID = value;} }
		public int ServiceID{ get {return this._serviceID; } set { this._serviceID = value;} }
		public string Shortcode{ get {return this._shortcode; } set { this._shortcode = value;} }
		public string TextMessage{ get {return this._textMessage; } set { this._textMessage = value;} }
		public int? PaymentRequestID{ get {return this._paymentRequestID; } set { this._paymentRequestID = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidPremiumCustomerServiceMap()
    { 
    }

    public AndroidPremiumCustomerServiceMap(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidPremiumCustomerServiceMap(int id,  AndroidPremiumCustomer androidPremiumCustomer, int? oLCacheID, int serviceID, string shortcode, string textMessage, int? paymentRequestID, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidPremiumCustomer = androidPremiumCustomer;
			this._oLCacheID = oLCacheID;
			this._serviceID = serviceID;
			this._shortcode = shortcode;
			this._textMessage = textMessage;
			this._paymentRequestID = paymentRequestID;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidPremiumCustomerServiceMap(-1,  this.AndroidPremiumCustomer,this.OLCacheID,this.ServiceID,this.Shortcode,this.TextMessage,this.PaymentRequestID, DateTime.Now, DateTime.Now);
    }
  }
}

