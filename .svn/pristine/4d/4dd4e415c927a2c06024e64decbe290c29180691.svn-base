using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class PaymentRequestTable : TableBase<PaymentRequest>
  {
    public static string GetColumnNames()
    {
      return TableBase<PaymentRequest>.GetColumnNames(string.Empty, PaymentRequestTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<PaymentRequest>.GetColumnNames(tablePrefix, PaymentRequestTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription PaymentRequestID = new ColumnDescription("PaymentRequestID", 0, typeof(int));
			public static readonly ColumnDescription PaymentRequestGuid = new ColumnDescription("PaymentRequestGuid", 1, typeof(Guid));
			public static readonly ColumnDescription PaymentTypeID = new ColumnDescription("PaymentTypeID", 2, typeof(int));
			public static readonly ColumnDescription PaymentRequestStatusID = new ColumnDescription("PaymentRequestStatusID", 3, typeof(int));
			public static readonly ColumnDescription LookupSessionID = new ColumnDescription("LookupSessionID", 4, typeof(int));
			public static readonly ColumnDescription CustomerID = new ColumnDescription("CustomerID", 5, typeof(int));
			public static readonly ColumnDescription UserSessionID = new ColumnDescription("UserSessionID", 6, typeof(int));
			public static readonly ColumnDescription ServiceOfferID = new ColumnDescription("ServiceOfferID", 7, typeof(int));
			public static readonly ColumnDescription BusinessModelEntryID = new ColumnDescription("BusinessModelEntryID", 8, typeof(int));
			public static readonly ColumnDescription ExternalPaymentRequestGuid = new ColumnDescription("ExternalPaymentRequestGuid", 9, typeof(Guid));
			public static readonly ColumnDescription UserHttpRequestID = new ColumnDescription("UserHttpRequestID", 10, typeof(int));
			public static readonly ColumnDescription PaymentRedirectUrl = new ColumnDescription("PaymentRedirectUrl", 11, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 12, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 13, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				PaymentRequestID,
				PaymentRequestGuid,
				PaymentTypeID,
				PaymentRequestStatusID,
				LookupSessionID,
				CustomerID,
				UserSessionID,
				ServiceOfferID,
				BusinessModelEntryID,
				ExternalPaymentRequestGuid,
				UserHttpRequestID,
				PaymentRedirectUrl,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public PaymentRequestTable(SqlQuery query) : base(query) { }
    public PaymentRequestTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int PaymentRequestID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentRequestID)); } }
		public Guid PaymentRequestGuid { get { return this.Reader.GetGuid(this.GetIndex(Columns.PaymentRequestGuid)); } }
		public int PaymentTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentTypeID)); } }
		public int PaymentRequestStatusID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentRequestStatusID)); } }
		public int LookupSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.LookupSessionID)); } }
		public int CustomerID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CustomerID)); } }
		public int UserSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.UserSessionID)); } }
		public int ServiceOfferID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceOfferID)); } }
		public int BusinessModelEntryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelEntryID)); } }
		
		public Guid? ExternalPaymentRequestGuid 
		{
			get
			{
				int index = this.GetIndex(Columns.ExternalPaymentRequestGuid);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetGuid(index);
			}
		}

		public int UserHttpRequestID { get { return this.Reader.GetInt32(this.GetIndex(Columns.UserHttpRequestID)); } }
		
		public string PaymentRedirectUrl 
		{
			get
			{
				int index = this.GetIndex(Columns.PaymentRedirectUrl);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public PaymentRequest CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(Customer customer, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, ServiceOffer serviceOffer, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		public PaymentRequest CreateInstance(LookupSession lookupSession, Customer customer, UserSession userSession, ServiceOffer serviceOffer, BusinessModelEntry businessModelEntry, UserHttpRequest userHttpRequest)  
		{ 
			if (!this.HasData) return null;
			return new PaymentRequest(this.PaymentRequestID,this.PaymentRequestGuid,(PaymentType)this.PaymentTypeID,(PaymentRequestStatus)this.PaymentRequestStatusID,lookupSession ?? new LookupSession(this.LookupSessionID), customer ?? new Customer(this.CustomerID), userSession ?? new UserSession(this.UserSessionID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), this.ExternalPaymentRequestGuid,userHttpRequest ?? new UserHttpRequest(this.UserHttpRequestID), this.PaymentRedirectUrl,this.Updated,this.Created); 
		}
		

  }
}

