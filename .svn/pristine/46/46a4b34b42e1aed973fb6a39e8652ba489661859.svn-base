using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface ITemplateServiceCapManager : IDataManager<TemplateServiceCap> 
  {
	

  }

  public partial class TemplateServiceCap : MobilePaywallObject<ITemplateServiceCapManager> 
  {
		private Service _service;
		private MobileOperator _mobileOperator;
		private int _value = -1;
		private int _tempCurrentValue = -1;
		private string _timespan = String.Empty;
		private string _dateKey = String.Empty;
		private string _description = String.Empty;
		private bool _isLocked = false;
		private bool _isActive = false;
		private DateTime _lastTransactionDate = DateTime.MinValue;
		private DateTime _capReferenceDate = DateTime.MinValue;
		

		public Service Service 
		{
			get
			{
				if (this._service != null &&
						this._service.IsEmpty)
					if (this.ConnectionContext != null)
						this._service = Service.CreateManager().LazyLoad(this.ConnectionContext, this._service.ID) as Service;
					else
						this._service = Service.CreateManager().LazyLoad(this._service.ID) as Service;
				return this._service;
			}
			set { _service = value; }
		}

		public MobileOperator MobileOperator 
		{
			get
			{
				if (this._mobileOperator != null &&
						this._mobileOperator.IsEmpty)
					if (this.ConnectionContext != null)
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this.ConnectionContext, this._mobileOperator.ID) as MobileOperator;
					else
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this._mobileOperator.ID) as MobileOperator;
				return this._mobileOperator;
			}
			set { _mobileOperator = value; }
		}

		public int Value{ get {return this._value; } set { this._value = value;} }
		public int TempCurrentValue{ get {return this._tempCurrentValue; } set { this._tempCurrentValue = value;} }
		public string Timespan{ get {return this._timespan; } set { this._timespan = value;} }
		public string DateKey{ get {return this._dateKey; } set { this._dateKey = value;} }
		public string Description{ get {return this._description; } set { this._description = value;} }
		public bool IsLocked {get {return this._isLocked; } set { this._isLocked = value;} }
		public bool IsActive {get {return this._isActive; } set { this._isActive = value;} }
		public DateTime LastTransactionDate { get { return this._lastTransactionDate; } set { this._lastTransactionDate = value;} }
		public DateTime CapReferenceDate { get { return this._capReferenceDate; } set { this._capReferenceDate = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public TemplateServiceCap()
    { 
    }

    public TemplateServiceCap(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public TemplateServiceCap(int id,  Service service, MobileOperator mobileOperator, int value, int tempCurrentValue, string timespan, string dateKey, string description, bool isLocked, bool isActive, DateTime lastTransactionDate, DateTime capReferenceDate, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._service = service;
			this._mobileOperator = mobileOperator;
			this._value = value;
			this._tempCurrentValue = tempCurrentValue;
			this._timespan = timespan;
			this._dateKey = dateKey;
			this._description = description;
			this._isLocked = isLocked;
			this._isActive = isActive;
			this._lastTransactionDate = lastTransactionDate;
			this._capReferenceDate = capReferenceDate;
			
    }

    public override object Clone(bool deepClone)
    {
      return new TemplateServiceCap(-1,  this.Service, this.MobileOperator,this.Value,this.TempCurrentValue,this.Timespan,this.DateKey,this.Description,this.IsLocked,this.IsActive,this.LastTransactionDate,this.CapReferenceDate, DateTime.Now, DateTime.Now);
    }
  }
}

