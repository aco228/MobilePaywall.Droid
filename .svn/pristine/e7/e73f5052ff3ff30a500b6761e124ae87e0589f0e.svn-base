@model Statistics
<!-- BEGIN TABLE -->
@{
  List<string> columns = new List<string>();

  if (Model.Split == Split.Year)
  {
    columns.Add("Year");
  }
  if (Model.Split == Split.Month)
  {
    columns.Add("Month");
  }
  if (Model.Split == Split.Week)
  {
    columns.Add("Week");
  }
  if (Model.Split == Split.Day)
  {
    columns.Add("Day");
  }
  if (Model.Split == Split.Hour)
  {
    columns.Add("Hour");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Instance))
  {
    columns.Add("Instance");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Merchant))
  {
    columns.Add("Merchant");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Service))
  {
    columns.Add("Service");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Provider))
  {
    columns.Add("Provider");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Country))
  {
    columns.Add("Country");
  }
  if (Statistics.IsGroupColumnIncluded(Model.Entries, Group.Operator))
  {
    columns.Add("Operator");
  }

  int totalSessions = Model.Entries.Sum(x => x.Sessions);
  int totalIdentifications = Model.Entries.Sum(x => x.Identifications);
  int totalSuccessfulIdentifications = Model.Entries.Sum(x => x.SuccessfullIdentifications);
  int totalPayments = Model.Entries.Sum(x => x.Payments);
  int totalCancellations = Model.Entries.Sum(x => x.CancelledPayments);
  int totalTransactions = Model.Entries.Sum(x => x.Transactions);
  int totalSubsequents = Model.Entries.Sum(x => x.Subsequents);

  int i = columns.Count + 6;
  if (Model.Split == Split.Hour)
  {
    i++;
  }

  //Retired
  //int i = 0;
  //string columnsIncluded = "";
  //foreach (string c in columns)
  //{
  //  columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>{1}</label>", i, c);
  //  i++;
  //}
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Clicks</label>", i++);
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Identifications</label>", i++);
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Payments</label>", i++);
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Cancellations</label>", i++);
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Transactions</label>", i++);
  //columnsIncluded += string.Format("<label><input type='checkbox' checked data-column='{0}'>Subsequents</label>", i++);
}
<table class="table table-striped table-bordered table-hover" id="statistics_table">
  <thead>
    <tr>
      @{
        if (columns.Contains("Year"))
        {
          <th>
            Year
          </th>
        }
        if (columns.Contains("Month"))
        {
          <th>
            Month
          </th>
        }
        if (columns.Contains("Week"))
        {
          <th>
            Week
          </th>
        }
        if (columns.Contains("Day"))
        {
          <th>
            Day
          </th>
        }
        if (columns.Contains("Hour"))
        {
          <th>
            Date
          </th>
          <th>
            Hour
          </th>
        }
        if (columns.Contains("Instance"))
        {
          <th>
            Instance
          </th>
        }
        if (columns.Contains("Merchant"))
        {
          <th>
            Merchant
          </th>
        }
        if (columns.Contains("Service"))
        {
          <th>
            Service
          </th>
        }
        if (columns.Contains("Provider"))
        {
          <th>
            Payment Provider
          </th>
        }
        if (columns.Contains("Country"))
        {
          <th>
            Country
          </th>
        }
        if (columns.Contains("Operator"))
        {
          <th>
            Operator
          </th>
        }
      }

      <th>
        Clicks
      </th>
      <th>
        Identifications
      </th>
      <th>
        Payments
      </th>
      <th>
        Cancellations
      </th>
      <th>
        Transactions
      </th>
      <th>
        Rebills
      </th>
      <th style="display:none;">

      </th>
    </tr>
  </thead>
  <tbody>
    @{
      foreach (StatisticEntry entry in Model.Entries)
      {
        <tr>
          @if (columns.Contains("Year"))
          {
            <td>
              @if (entry.Date != null)
              {
                @entry.Date.Value.ToString("yyyy")
              }
            </td>
          }
          @if (columns.Contains("Month"))
          {
            <td>
              @if (entry.Date != null)
              {
                @entry.Date.Value.ToString("MMM-yyyy")
              }
            </td>
          }
          @if (columns.Contains("Week"))
          {
            <td>
              @if (entry.WeekRange != null)
              {
                @entry.WeekRange
              }
            </td>
          }
          @if (columns.Contains("Day"))
          {
            <td>
              @if (entry.Date != null)
              {
                @entry.Date.Value.ToString("dd-MMM-yyyy")
              }
            </td>
          }
          @if (columns.Contains("Hour"))
          {
            <td>
              @entry.Date.Value.ToString("dd-MMM-yyyy")
            </td>
            <td>
              @string.Format("{0}", entry.Date.Value.ToString("HH:mm"))
            </td>
          }

          @if (columns.Contains("Instance"))
          {
            <td>
              @entry.InstanceName
            </td>
          }

          @if (columns.Contains("Merchant"))
          {
            <td>
              @entry.MerchantName
            </td>
          }

          @if (columns.Contains("Service"))
          {
            <td>
              @entry.ServiceName
            </td>
          }

          @if (columns.Contains("Provider"))
          {
            <td>
              @entry.ProviderName
            </td>
          }

          @if (columns.Contains("Country"))
          {
            <td>
              @if (entry.CountryName != null)
              {
                @entry.CountryName
              }
            </td>
          }

          @if (columns.Contains("Operator"))
          {
            <td>
              @if (entry.OperatorName != null)
              {
                @entry.OperatorName
              }
            </td>
          }

          <td>
            @entry.Sessions
          </td>

          <td class="tooltips" data-container="body" data-placement="top" data-original-title="@Html.Raw(Server.HtmlDecode("Total: " + entry.Identifications + "<br/>"))">
            @entry.SuccessfullIdentifications
          </td>
          <td>
            @entry.Payments
          </td>
          <td>
            @entry.CancelledPayments
          </td>
          <td>
            @string.Format("{0} {1}", entry.Transactions, Model.GetCR(entry.Sessions, entry.Transactions))
          </td>
          <td>
            @entry.Subsequents
          </td>
          <td style="display:none;">
            <table>
              <tr class="expanded-details">
                <td>
                  <b>Identifications</b> <br />
                  Total: @entry.Identifications <br />
                  Initialized: @entry.InitializedIdentifications <br />
                  Pending: @entry.PendingIdentifications <br />
                  Failed: @entry.FailedIdentifications <br />
                  Successful: @entry.SuccessfullIdentifications <br />
                </td>
                <td>
                  <b>Payments</b> <br />
                  Total: @entry.Payments <br />
                  Initialized: @entry.InitializedPayments <br />
                  Pending: @entry.PendingPayments <br />
                  Failed: @entry.FailedPayments <br />
                  Total cancellations: @entry.TCancellations <br />
                  Cancelled: @entry.CancelledPayments <br />
                  Successful: @entry.SuccessfullPayments <br />
                </td>
                <td>
                  <b>Transactions</b> <br />
                  Total: @entry.TTransactions <br />
                  Transactions: @entry.Transactions <br />
                </td>
              </tr>
            </table>
          </td>
        </tr>
        @*<tr class="details" style="display:none;">
            <td>nesto</td>
          </tr>*@
      }
    }
  </tbody>
  <tfoot>
    <tr style="background: rgb(75, 119, 190) none repeat scroll 0 0; color: rgb(255, 255, 255); font-weight: 600;">
      @if (i > 0 && i - 6 > 0)
      {
        int t = i - 6;
        while (t > 0)
        {
          t = t - 1;
          @Html.Raw(Server.HtmlDecode("<td></td>"));
        }
      }
      <td>
        @totalSessions
      </td>
      <td>
        @*@totalIdentifications*@
        @totalSuccessfulIdentifications
      </td>
      <td>
        @totalPayments
      </td>
      <td>
        @totalCancellations
      </td>
      <td>
        @string.Format("{0} {1}", totalTransactions, Model.GetCR(totalSessions, totalTransactions))
      </td>
      <td>
        @totalSubsequents
      </td>
    </tr>
  </tfoot>
</table>

@*Retired*@
@*<script>
    $(document).ready(function () {
      $('#statistics_table_column_toggler').html("@Html.Raw(Server.HtmlDecode(columnsIncluded))");
    });
  </script>*@
<!-- END TABLE -->