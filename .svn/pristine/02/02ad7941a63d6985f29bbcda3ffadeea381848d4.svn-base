using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using System.Web.Mvc;
using System.Web.Optimization;
using System.Web.Routing;

using Senti.Diagnostics.Log;

using log4net;
using MobilePaywall.Service.Callback.SpecificHandlers;

namespace MobilePaywall.Service.Callback
{
	public class WebApiApplication : System.Web.HttpApplication
	{
    protected static ILog _log = null;
    public static SpecificHandlerManager SpecificHandlerManager = null;

    protected static ILog Log
    {
      get 
      {
        if (WebApiApplication._log == null)
          WebApiApplication._log = LogManager.GetLogger(typeof(WebApiApplication));
        return WebApiApplication._log;
      }
    }

		protected void Application_Start()
		{
			AreaRegistration.RegisterAllAreas();
			GlobalConfiguration.Configure(WebApiConfig.Register);
			FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);
			RouteConfig.RegisterRoutes(RouteTable.Routes);
			BundleConfig.RegisterBundles(BundleTable.Bundles);
			
      MobilePaywall.Data.Sql.Database db = null;
      Senti.Data.DataLayerRuntime runtime = new Senti.Data.DataLayerRuntime();

			log4net.Config.XmlConfigurator.ConfigureAndWatch(new System.IO.FileInfo(Server.MapPath("~/log4net.config")));

      // SPECIFIC IMPLEMENTATIONS
      WebApiApplication.SpecificHandlerManager = new SpecificHandlerManager();

		}

    protected void Application_Error(object sender, EventArgs e)
    {
      HttpContext context = HttpContext.Current;
      Exception lastExceptionWhichWasNotHandled = context.Server.GetLastError();
      PLog.Fatal("global.exception", "", lastExceptionWhichWasNotHandled.ToString());

      //Log.Fatal(new LogMessageBuilder(
      //            new LogErrorCode("global", "application", "exception"),
      //            string.Format("{0} - {1}", this.Request.Url.ToString(), this.Request.UserHostAddress)), lastExceptionWhichWasNotHandled);
      return;
    }
	}
}
