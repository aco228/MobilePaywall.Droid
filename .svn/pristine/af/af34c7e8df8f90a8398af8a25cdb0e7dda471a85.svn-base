using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IGreeceMsisdnServiceMapManager : IDataManager<GreeceMsisdnServiceMap> 
  {
	

  }

  public partial class GreeceMsisdnServiceMap : MobilePaywallObject<IGreeceMsisdnServiceMapManager> 
  {
		private GreeceMsisdn _greeceMsisdn;
		private Service _service;
		private OLCache _oLCache;
		

		public GreeceMsisdn GreeceMsisdn 
		{
			get
			{
				if (this._greeceMsisdn != null &&
						this._greeceMsisdn.IsEmpty)
					if (this.ConnectionContext != null)
						this._greeceMsisdn = GreeceMsisdn.CreateManager().LazyLoad(this.ConnectionContext, this._greeceMsisdn.ID) as GreeceMsisdn;
					else
						this._greeceMsisdn = GreeceMsisdn.CreateManager().LazyLoad(this._greeceMsisdn.ID) as GreeceMsisdn;
				return this._greeceMsisdn;
			}
			set { _greeceMsisdn = value; }
		}

		public Service Service 
		{
			get
			{
				if (this._service != null &&
						this._service.IsEmpty)
					if (this.ConnectionContext != null)
						this._service = Service.CreateManager().LazyLoad(this.ConnectionContext, this._service.ID) as Service;
					else
						this._service = Service.CreateManager().LazyLoad(this._service.ID) as Service;
				return this._service;
			}
			set { _service = value; }
		}

		public OLCache OLCache 
		{
			get
			{
				if (this._oLCache != null &&
						this._oLCache.IsEmpty)
					if (this.ConnectionContext != null)
						this._oLCache = OLCache.CreateManager().LazyLoad(this.ConnectionContext, this._oLCache.ID) as OLCache;
					else
						this._oLCache = OLCache.CreateManager().LazyLoad(this._oLCache.ID) as OLCache;
				return this._oLCache;
			}
			set { _oLCache = value; }
		}

		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public GreeceMsisdnServiceMap()
    { 
    }

    public GreeceMsisdnServiceMap(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public GreeceMsisdnServiceMap(int id,  GreeceMsisdn greeceMsisdn, Service service, OLCache oLCache, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._greeceMsisdn = greeceMsisdn;
			this._service = service;
			this._oLCache = oLCache;
			
    }

    public override object Clone(bool deepClone)
    {
      return new GreeceMsisdnServiceMap(-1,  this.GreeceMsisdn, this.Service, this.OLCache, DateTime.Now, DateTime.Now);
    }
  }
}

