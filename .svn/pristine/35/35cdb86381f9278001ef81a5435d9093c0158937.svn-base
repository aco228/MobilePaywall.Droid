using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class ContentCategoryMapManager : IContentCategoryMapManager
  {
    public List<ContentCategoryMap> Load()
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection);
    }

    public List<ContentCategoryMap> Load(IConnectionInfo connection)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection);
    }

    public List<ContentCategoryMap> Load(ISqlConnectionInfo connection)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      return this.LoadMany(connection, parameters);
    }

		public List<ContentCategoryMap> Load(Content content)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content);
		}

		public List<ContentCategoryMap> Load(IConnectionInfo connection, Content content)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content);
		}

		public List<ContentCategoryMap> Load(ISqlConnectionInfo connection, Content content)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ccm].ContentID = @ContentID";
			parameters.Arguments.Add("ContentID", content.ID);
			return this.LoadMany(connection, parameters);
		}


		public List<ContentCategoryMap> Load(Category category)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, category);
		}

		public List<ContentCategoryMap> Load(IConnectionInfo connection, Category category)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, category);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, category);
		}

		public List<ContentCategoryMap> Load(ISqlConnectionInfo connection, Category category)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ccm].CategoryID = @CategoryID";
			parameters.Arguments.Add("CategoryID", category.ID);
			return this.LoadMany(connection, parameters);
		}


    public ContentCategoryMap Load(Content content, Category category)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, content, category);
    }

    public ContentCategoryMap Load(IConnectionInfo connection, Content content, Category category)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, content, category);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, content, category);
    }

    public ContentCategoryMap Load(ISqlConnectionInfo connection, Content content, Category category)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[ccm].ContentID=@ContentID AND [ccm].CategoryID=@CategoryID";
      parameters.Arguments.Add("ContentID", content.ID);
      parameters.Arguments.Add("CategoryID", category.ID);
      return this.Load(connection, parameters);
    }

    public List<ContentCategoryMap> Load(Category category, ContentGroup contentGroup)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, category, contentGroup);
    }

    public List<ContentCategoryMap> Load(IConnectionInfo connection, Category category, ContentGroup contentGroup)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, category, contentGroup);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, category, contentGroup);
    }

    public List<ContentCategoryMap> Load(ISqlConnectionInfo connection, Category category, ContentGroup contentGroup)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[ccm_c].ContentGroupID = @ContentGroupID AND [ccm].CategoryID=@CategoryID";
      parameters.Arguments.Add("CategoryID", category.ID);
      parameters.Arguments.Add("ContentGroupID", contentGroup.ID);
      return this.LoadMany(connection, parameters);
    }
  }
}

