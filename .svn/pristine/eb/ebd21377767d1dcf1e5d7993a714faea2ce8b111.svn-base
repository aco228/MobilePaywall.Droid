using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AndroidPremiumSmsRequestTable : TableBase<AndroidPremiumSmsRequest>
  {
    public static string GetColumnNames()
    {
      return TableBase<AndroidPremiumSmsRequest>.GetColumnNames(string.Empty, AndroidPremiumSmsRequestTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AndroidPremiumSmsRequest>.GetColumnNames(tablePrefix, AndroidPremiumSmsRequestTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AndroidPremiumSmsRequestID = new ColumnDescription("AndroidPremiumSmsRequestID", 0, typeof(int));
			public static readonly ColumnDescription AndroidClientSessionID = new ColumnDescription("AndroidClientSessionID", 1, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 2, typeof(int));
			public static readonly ColumnDescription IsProcessed = new ColumnDescription("IsProcessed", 3, typeof(bool));
			public static readonly ColumnDescription IsSuccess = new ColumnDescription("IsSuccess", 4, typeof(bool));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 5, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 6, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AndroidPremiumSmsRequestID,
				AndroidClientSessionID,
				ServiceID,
				IsProcessed,
				IsSuccess,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AndroidPremiumSmsRequestTable(SqlQuery query) : base(query) { }
    public AndroidPremiumSmsRequestTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AndroidPremiumSmsRequestID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidPremiumSmsRequestID)); } }
		public int AndroidClientSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AndroidClientSessionID)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public bool IsProcessed { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsProcessed)); } }
		public bool IsSuccess { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsSuccess)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AndroidPremiumSmsRequest CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumSmsRequest(this.AndroidPremiumSmsRequestID,new AndroidClientSession(this.AndroidClientSessionID), new Service(this.ServiceID), this.IsProcessed,this.IsSuccess,this.Updated,this.Created); 
		}
		public AndroidPremiumSmsRequest CreateInstance(AndroidClientSession androidClientSession)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumSmsRequest(this.AndroidPremiumSmsRequestID,androidClientSession ?? new AndroidClientSession(this.AndroidClientSessionID), new Service(this.ServiceID), this.IsProcessed,this.IsSuccess,this.Updated,this.Created); 
		}
		public AndroidPremiumSmsRequest CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumSmsRequest(this.AndroidPremiumSmsRequestID,new AndroidClientSession(this.AndroidClientSessionID), service ?? new Service(this.ServiceID), this.IsProcessed,this.IsSuccess,this.Updated,this.Created); 
		}
		public AndroidPremiumSmsRequest CreateInstance(AndroidClientSession androidClientSession, Service service)  
		{ 
			if (!this.HasData) return null;
			return new AndroidPremiumSmsRequest(this.AndroidPremiumSmsRequestID,androidClientSession ?? new AndroidClientSession(this.AndroidClientSessionID), service ?? new Service(this.ServiceID), this.IsProcessed,this.IsSuccess,this.Updated,this.Created); 
		}
		

  }
}

