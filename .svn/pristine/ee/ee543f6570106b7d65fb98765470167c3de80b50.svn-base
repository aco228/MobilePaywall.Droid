@model TemplateModificationsModel
@{
  Layout = "~/Views/Template/_Layout/_Layout.cshtml";
}
<script src="~/Scripts/Template/ace/ace.js"></script>

<style>
  select { margin-left: 35px !important; padding: 10px; width: 80%!important; }
  textarea{ overflow: hidden; word-wrap: break-word; height: 280px; font-size:12px!important; line-height:14px; }
  .editor { width:100%; height:500px; margin-top: 10px;}
</style>

<div class="md-card" style="margin-bottom:15px;">
  <div class="md-card-content">
    <div class="uk-grid">
      <div class="uk-width-medium-1-6">
        <a class="md-btn md-btn-flat md-btn-flat-primary" href="#" id="addNewModification" inuse="false">Add new modification</a>
      </div>
    </div>
  </div>
</div>

<div hidden id="hiddenClass">

  <div class="md-card tempalteModificationParent" templatemodificationid="-1">
    <div class="md-card-content">
      <div class="uk-grid" data-uk-grid-margin="">
        <div class="uk-width-medium-3-3">
          <div id="form_validation" class="uk-form-stacked">
            <div class="uk-form-row">
              <div class="md-input-wrapper md-input-filled"><label for="fullname">Description</label><input disabled type="text" name="fullname" value="New template modification" required="" class="md-input description" data-parsley-id="4"><span class="md-input-bar"></span></div>
            </div>
            <div class="uk-form-row">
              <span>
                <input type="checkbox" name="val_check_hobbies"  class="currentService"/>
                <label for="val_check_ski" class="inline-label">Current service</label>
              </span>
              <span>
                <input type="checkbox" class="currentPaymentProvider" />
                <label for="val_check_run" class="inline-label">Current payment provider</label>
              </span>
              <span>
                <input type="checkbox" class="isActive" checked/>
                <label for="val_check_eat" class="inline-label">Is active</label>
              </span>
            </div>

            <div class="uk-form-row">
              <span>
                <label for="hobbies" class="uk-form-label">Mobile operator:</label>
                <select class="form-control selectMobileOperator">
                  <option mot="-1">NULL</option>
                  @foreach (var tt in Model.MobileOperators)
                  {
                    <option mot="@tt.ID">@tt.Name</option>
                  }
                </select>
              </span>
            </div>
            <div class="uk-form-row">
              <div class="md-input-wrapper"><label for="message">Css text</label>
                @*<textarea class="md-input templateData" name="message" data-parsley-trigger="keyup" data-parsley-minlength="20" data-parsley-maxlength="100" data-parsley-validation-threshold="10" data-parsley-minlength-message="Come on! You need to enter at least a 20 caracters long comment.." data-autosize-on="true" data-parsley-id="30"></textarea>*@
                <div class="editor"></div>
                <span class="md-input-bar"></span>
              </div>
            </div>
            <div class="uk-form-row">
              <button type="submit" class="md-btn md-btn-primary btnUpdateTemplate" inuse="false">Update</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

</div>




<div id="appendedDiv">

  @foreach (TemplateModification tm in Model.TemplateModifications)
  {
    string title = string.Format(" Service: {0}, Payment Provider:{1}, Mobile Operator:{2}",
      tm.Service != null ? tm.Service.Name : "",
      tm.PaymentProvider != null ? tm.PaymentProvider.Name : "",
      tm.MobileOperator != null ? tm.MobileOperator.Name : "");

    <div class="md-card tempalteModificationParent" templatemodificationid="@tm.ID">
      <div class="md-card-content">
        <div class="uk-grid" data-uk-grid-margin="">
          <div class="uk-width-medium-3-3">
            <div id="form_validation" class="uk-form-stacked">
              <div class="uk-form-row">
                <div class="md-input-wrapper md-input-filled"><label for="fullname">Description</label><input disabled type="text" name="fullname" value="@tm.Description" required="" class="md-input description" data-parsley-id="4"><span class="md-input-bar"></span></div>
              </div>
              <div class="uk-form-row">
                <span>
                  <input type="checkbox" name="val_check_hobbies" class="currentService" @Html.Raw(tm.Service != null ? "checked" : "") disabled />
                  <label for="val_check_ski" class="inline-label">Current service</label>
                </span>
                <span>
                  <input type="checkbox" class="currentPaymentProvider" @Html.Raw(tm.PaymentProvider != null ? "checked" : "") disabled />
                  <label for="val_check_run" class="inline-label">Current payment provider</label>
                </span>
                <span>
                  <input type="checkbox" class="isActive" @Html.Raw(tm.IsActive ? "checked" : "") />
                  <label for="val_check_eat" class="inline-label">Is active</label>
                </span>
              </div>

              <div class="uk-form-row">
                <span>
                  <label for="hobbies" class="uk-form-label">Mobile operator:</label>
                  <select class="form-control selectMobileOperator" disabled>
                    <option mot="-1" @Html.Raw(tm.MobileOperator == null ? "selected" : "")>NULL</option>
                    @foreach (var tt in Model.MobileOperators)
                    {
                      <option mot="@tt.ID" @Html.Raw(tm.MobileOperator != null && tm.MobileOperator.ID == tt.ID ? "selected" : "")>@tt.Name</option>
                    }
                  </select>
                </span>
              </div>
              <div class="uk-form-row">
                <div class="md-input-wrapper md-input-filled">
                  <label for="message">Css text</label>
                  @*<textarea class="md-input templateData" name="message" data-parsley-trigger="keyup" data-parsley-minlength="20" data-parsley-maxlength="100" data-parsley-validation-threshold="10" data-parsley-minlength-message="Come on! You need to enter at least a 20 caracters long comment.." data-autosize-on="true"  data-parsley-id="30">@tm.Data</textarea>*@
                  <div class="editor">@tm.Data</div>
                  <span class="md-input-bar"></span>
                </div>
              </div>
              <div class="uk-form-row">
                <button type="submit" class="md-btn md-btn-primary btnUpdateTemplate" inuse="false">Update</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

  }
</div>




<script>

  function onLoad(){
    initAce();
    addModification();
    btnSubmit();
  }

  function initAce()
  {
    $('.editor').each(function () {
      if ($(this).attr('aceIsSet') == 'true')
        return;
      
      if ($(this).closest('#hiddenClass').length > 0)
        return;

      var id = _system.ID('editor');
      $(this).attr('id', id);

      var editor = ace.edit(id);
      editor.setTheme("ace/theme/xcode");
      editor.getSession().setMode("ace/mode/css");

      console.log('ace configured for ' + id)
      $(this).attr('aceIsSet', 'true');
    });
  }

  function addModification() {
    $('#addNewModification').click(function () {
      $('#appendedDiv').append($('#hiddenClass').html());
      initAce();

      //$('input').iCheck({
      //  checkboxClass: 'checkbox-default',
      //  radioClass: 'radio-default'
      //});
    });

  }

  function btnSubmit() {
    $('body').on('click', '.btnUpdateTemplate', function () {
      var btn = $(this);
      var parent = $(this).closest('.tempalteModificationParent');
      var id = parent.attr('templateModificationID');
      var currentService = parent.find('.currentService').is(':checked') ? "1" : "0";
      var currentPaymentProvider = parent.find('.currentPaymentProvider').is(':checked') ? "1" : "0";
      var currentMobileOperator = parent.find('.selectMobileOperator').find(":selected").attr('mot');
      var isActive = parent.find('.isActive').is(':checked') ? "1" : "0";
      var data = ace.edit(parent.find('.editor').attr('id')).getValue();
      var description = parent.find('.description').val();
      
      var message = 'Are you sure you want to update TemplateModifications?';
      var isDelete = false;

      if (data == '' && id == '-1') {
        parent.remove();
        return;
      }
      else if (data == '' && id != '-1') {
        message = 'Are you sure you want to delete this TemplateModification?';
        isDelete = true;
      }

      visual.Confirm(message, 'Yes', 'No', function () {
        var tmplText = btn.text();
        btn.attr('inuse', 'true');
        btn.text('...');

        var modificationData = {
          templateModificationID: id,
          currentService: currentService,
          currentPaymentProvider: currentPaymentProvider,
          currentMobileOperatorID: currentMobileOperator,
          isActive: isActive,
          data: data,
          description: description
        }
        console.log(modificationData.templateModificationID + " " + modificationData.currentService + " " + modificationData.currentPaymentProvider + " " + modificationData.data);

        template.call('ApiChangeTemplateModifications', modificationData, function (response) {
          btn.attr('inuse', 'false');
          btn.text(tmplText);

          if (response.status && !isDelete) {
            visual.Toast(response.message);
            parent.attr('id', response.id);
          }
          else if (response.status && !isDelete) {
            visual.Toast(response.message);
            parent.remove();
          }
          else
            visual.Alert(response.message);
        });

      });

    });
  }

  //function addTemplateModifications(element) {
  //  var btn = $(element);
  //  var parent = btn.closest('#serviceConfiguration');
  //  var currentService = parent.find('#currentService').is(':checked');
  //  var currentPaymentProvider = parent.find('#currentPaymentProvider').is(':checked');
  //  var currentMobileOperator = parent.find('#selectMobileOperator').find(":selected").attr('mot');

  //  console.log(currentService +" " + currentPaymentProvider + " "+ currentMobileOperator);
  //  visual.Confirm('Are you sure you want to add TemplateModifications?', 'Yes', 'No', function () {

  //    var tmplText = btn.text();
  //    btn.attr('inuse', 'true');
  //    btn.text('...');

  //    template.call('ApiChangeTemplateModifications', { currentService: currentService, currentPaymentProvider: currentPaymentProvider, currentMobileOperatorID: currentMobileOperator }, function (response) {
  //      btn.attr('inuse', 'false');
  //      btn.text(tmplText);
  //      visual.Alert(response.message);
  //    });

  //  });
  //}

</script>
