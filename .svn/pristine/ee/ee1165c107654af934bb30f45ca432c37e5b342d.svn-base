using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class TemplateServiceContentSortTable : TableBase<TemplateServiceContentSort>
  {
    public static string GetColumnNames()
    {
      return TableBase<TemplateServiceContentSort>.GetColumnNames(string.Empty, TemplateServiceContentSortTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<TemplateServiceContentSort>.GetColumnNames(tablePrefix, TemplateServiceContentSortTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription TemplateServiceContentSortID = new ColumnDescription("TemplateServiceContentSortID", 0, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 1, typeof(int));
			public static readonly ColumnDescription ContentGroupID = new ColumnDescription("ContentGroupID", 2, typeof(int));
			public static readonly ColumnDescription Data = new ColumnDescription("Data", 3, typeof(string));
			public static readonly ColumnDescription Separator = new ColumnDescription("Separator", 4, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 5, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 6, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				TemplateServiceContentSortID,
				ServiceID,
				ContentGroupID,
				Data,
				Separator,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public TemplateServiceContentSortTable(SqlQuery query) : base(query) { }
    public TemplateServiceContentSortTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int TemplateServiceContentSortID { get { return this.Reader.GetInt32(this.GetIndex(Columns.TemplateServiceContentSortID)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public int ContentGroupID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentGroupID)); } }
		public string Data { get { return this.Reader.GetString(this.GetIndex(Columns.Data)); } }
		public string Separator { get { return this.Reader.GetString(this.GetIndex(Columns.Separator)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public TemplateServiceContentSort CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceContentSort(this.TemplateServiceContentSortID,new Service(this.ServiceID), new ContentGroup(this.ContentGroupID), this.Data,this.Separator,this.Updated,this.Created); 
		}
		public TemplateServiceContentSort CreateInstance(ContentGroup contentGroup)  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceContentSort(this.TemplateServiceContentSortID,new Service(this.ServiceID), contentGroup ?? new ContentGroup(this.ContentGroupID), this.Data,this.Separator,this.Updated,this.Created); 
		}
		public TemplateServiceContentSort CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceContentSort(this.TemplateServiceContentSortID,service ?? new Service(this.ServiceID), new ContentGroup(this.ContentGroupID), this.Data,this.Separator,this.Updated,this.Created); 
		}
		public TemplateServiceContentSort CreateInstance(Service service, ContentGroup contentGroup)  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceContentSort(this.TemplateServiceContentSortID,service ?? new Service(this.ServiceID), contentGroup ?? new ContentGroup(this.ContentGroupID), this.Data,this.Separator,this.Updated,this.Created); 
		}
		

  }
}

