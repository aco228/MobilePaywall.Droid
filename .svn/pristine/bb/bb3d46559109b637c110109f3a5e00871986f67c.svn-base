using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class PremiumMessageTable : TableBase<PremiumMessage>
  {
    public static string GetColumnNames()
    {
      return TableBase<PremiumMessage>.GetColumnNames(string.Empty, PremiumMessageTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<PremiumMessage>.GetColumnNames(tablePrefix, PremiumMessageTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription PremiumMessageID = new ColumnDescription("PremiumMessageID", 0, typeof(int));
			public static readonly ColumnDescription PremiumMessageGuid = new ColumnDescription("PremiumMessageGuid", 1, typeof(Guid));
			public static readonly ColumnDescription PremiumMessageDirectionID = new ColumnDescription("PremiumMessageDirectionID", 2, typeof(int));
			public static readonly ColumnDescription PremiumMessageStatusID = new ColumnDescription("PremiumMessageStatusID", 3, typeof(int));
			public static readonly ColumnDescription UserSessionID = new ColumnDescription("UserSessionID", 4, typeof(int));
			public static readonly ColumnDescription ShortcodeKeywordServiceOfferMapID = new ColumnDescription("ShortcodeKeywordServiceOfferMapID", 5, typeof(int));
			public static readonly ColumnDescription Text = new ColumnDescription("Text", 6, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 7, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 8, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				PremiumMessageID,
				PremiumMessageGuid,
				PremiumMessageDirectionID,
				PremiumMessageStatusID,
				UserSessionID,
				ShortcodeKeywordServiceOfferMapID,
				Text,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public PremiumMessageTable(SqlQuery query) : base(query) { }
    public PremiumMessageTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int PremiumMessageID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PremiumMessageID)); } }
		public Guid PremiumMessageGuid { get { return this.Reader.GetGuid(this.GetIndex(Columns.PremiumMessageGuid)); } }
		public int PremiumMessageDirectionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PremiumMessageDirectionID)); } }
		public int PremiumMessageStatusID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PremiumMessageStatusID)); } }
		public int UserSessionID { get { return this.Reader.GetInt32(this.GetIndex(Columns.UserSessionID)); } }
		public int ShortcodeKeywordServiceOfferMapID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ShortcodeKeywordServiceOfferMapID)); } }
		
		public string Text 
		{
			get
			{
				int index = this.GetIndex(Columns.Text);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public PremiumMessage CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new PremiumMessage(this.PremiumMessageID,this.PremiumMessageGuid,(PremiumMessageDirection)this.PremiumMessageDirectionID,(PremiumMessageStatus)this.PremiumMessageStatusID,new UserSession(this.UserSessionID), new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID), this.Text,this.Updated,this.Created); 
		}
		public PremiumMessage CreateInstance(ShortcodeKeywordServiceOfferMap shortcodeKeywordServiceOfferMap)  
		{ 
			if (!this.HasData) return null;
			return new PremiumMessage(this.PremiumMessageID,this.PremiumMessageGuid,(PremiumMessageDirection)this.PremiumMessageDirectionID,(PremiumMessageStatus)this.PremiumMessageStatusID,new UserSession(this.UserSessionID), shortcodeKeywordServiceOfferMap ?? new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID), this.Text,this.Updated,this.Created); 
		}
		public PremiumMessage CreateInstance(UserSession userSession)  
		{ 
			if (!this.HasData) return null;
			return new PremiumMessage(this.PremiumMessageID,this.PremiumMessageGuid,(PremiumMessageDirection)this.PremiumMessageDirectionID,(PremiumMessageStatus)this.PremiumMessageStatusID,userSession ?? new UserSession(this.UserSessionID), new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID), this.Text,this.Updated,this.Created); 
		}
		public PremiumMessage CreateInstance(UserSession userSession, ShortcodeKeywordServiceOfferMap shortcodeKeywordServiceOfferMap)  
		{ 
			if (!this.HasData) return null;
			return new PremiumMessage(this.PremiumMessageID,this.PremiumMessageGuid,(PremiumMessageDirection)this.PremiumMessageDirectionID,(PremiumMessageStatus)this.PremiumMessageStatusID,userSession ?? new UserSession(this.UserSessionID), shortcodeKeywordServiceOfferMap ?? new ShortcodeKeywordServiceOfferMap(this.ShortcodeKeywordServiceOfferMapID), this.Text,this.Updated,this.Created); 
		}
		

  }
}

