using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class VideoSceneTable : TableBase<VideoScene>
  {
    public static string GetColumnNames()
    {
      return TableBase<VideoScene>.GetColumnNames(string.Empty, VideoSceneTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<VideoScene>.GetColumnNames(tablePrefix, VideoSceneTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription VideoSceneID = new ColumnDescription("VideoSceneID", 0, typeof(int));
			public static readonly ColumnDescription VideoContentID = new ColumnDescription("VideoContentID", 1, typeof(int));
			public static readonly ColumnDescription VideoContentDataID = new ColumnDescription("VideoContentDataID", 2, typeof(int));
			public static readonly ColumnDescription ContentThumbnailID = new ColumnDescription("ContentThumbnailID", 3, typeof(int));
			public static readonly ColumnDescription SortIndex = new ColumnDescription("SortIndex", 4, typeof(int));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 5, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 6, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				VideoSceneID,
				VideoContentID,
				VideoContentDataID,
				ContentThumbnailID,
				SortIndex,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public VideoSceneTable(SqlQuery query) : base(query) { }
    public VideoSceneTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int VideoSceneID { get { return this.Reader.GetInt32(this.GetIndex(Columns.VideoSceneID)); } }
		public int VideoContentID { get { return this.Reader.GetInt32(this.GetIndex(Columns.VideoContentID)); } }
		public int VideoContentDataID { get { return this.Reader.GetInt32(this.GetIndex(Columns.VideoContentDataID)); } }
		public int ContentThumbnailID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentThumbnailID)); } }
		public int SortIndex { get { return this.Reader.GetInt32(this.GetIndex(Columns.SortIndex)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public VideoScene CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,new VideoContent(this.VideoContentID), new VideoContentData(this.VideoContentDataID), new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(ContentThumbnail contentThumbnail)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,new VideoContent(this.VideoContentID), new VideoContentData(this.VideoContentDataID), contentThumbnail ?? new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContent videoContent)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,videoContent ?? new VideoContent(this.VideoContentID), new VideoContentData(this.VideoContentDataID), new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContentData videoContentData)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,new VideoContent(this.VideoContentID), videoContentData ?? new VideoContentData(this.VideoContentDataID), new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContent videoContent, ContentThumbnail contentThumbnail)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,videoContent ?? new VideoContent(this.VideoContentID), new VideoContentData(this.VideoContentDataID), contentThumbnail ?? new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContentData videoContentData, ContentThumbnail contentThumbnail)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,new VideoContent(this.VideoContentID), videoContentData ?? new VideoContentData(this.VideoContentDataID), contentThumbnail ?? new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContent videoContent, VideoContentData videoContentData)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,videoContent ?? new VideoContent(this.VideoContentID), videoContentData ?? new VideoContentData(this.VideoContentDataID), new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		public VideoScene CreateInstance(VideoContent videoContent, VideoContentData videoContentData, ContentThumbnail contentThumbnail)  
		{ 
			if (!this.HasData) return null;
			return new VideoScene(this.VideoSceneID,videoContent ?? new VideoContent(this.VideoContentID), videoContentData ?? new VideoContentData(this.VideoContentDataID), contentThumbnail ?? new ContentThumbnail(this.ContentThumbnailID), this.SortIndex,this.Updated,this.Created); 
		}
		

  }
}

