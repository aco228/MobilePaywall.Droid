using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IServiceConfigurationManager : IDataManager<ServiceConfiguration> 
  {
	

  }

  public partial class ServiceConfiguration : MobilePaywallObject<IServiceConfigurationManager> 
  {
		private Instance _intstance;
		private string _name = String.Empty;
		

		public Instance Intstance 
		{
			get
			{
				if (this._intstance != null &&
						this._intstance.IsEmpty)
					if (this.ConnectionContext != null)
						this._intstance = Instance.CreateManager().LazyLoad(this.ConnectionContext, this._intstance.ID) as Instance;
					else
						this._intstance = Instance.CreateManager().LazyLoad(this._intstance.ID) as Instance;
				return this._intstance;
			}
			set { _intstance = value; }
		}

		public string Name{ get {return this._name; } set { this._name = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public ServiceConfiguration()
    { 
    }

    public ServiceConfiguration(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public ServiceConfiguration(int id,  Instance intstance, string name, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._intstance = intstance;
			this._name = name;
			
    }

    public override object Clone(bool deepClone)
    {
      return new ServiceConfiguration(-1,  this.Intstance,this.Name, DateTime.Now, DateTime.Now);
    }
  }
}

