using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class CustomPageDataTable : TableBase<CustomPageData>
  {
    public static string GetColumnNames()
    {
      return TableBase<CustomPageData>.GetColumnNames(string.Empty, CustomPageDataTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<CustomPageData>.GetColumnNames(tablePrefix, CustomPageDataTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription CustomPageDataID = new ColumnDescription("CustomPageDataID", 0, typeof(int));
			public static readonly ColumnDescription CustomPageID = new ColumnDescription("CustomPageID", 1, typeof(int));
			public static readonly ColumnDescription PaymentProviderID = new ColumnDescription("PaymentProviderID", 2, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 3, typeof(int));
			public static readonly ColumnDescription MobileOperatorID = new ColumnDescription("MobileOperatorID", 4, typeof(int));
			public static readonly ColumnDescription IsPlainText = new ColumnDescription("IsPlainText", 5, typeof(bool));
			public static readonly ColumnDescription UseLayout = new ColumnDescription("UseLayout", 6, typeof(bool));
			public static readonly ColumnDescription UsePredefinedDiv = new ColumnDescription("UsePredefinedDiv", 7, typeof(bool));
			public static readonly ColumnDescription Title = new ColumnDescription("Title", 8, typeof(string));
			public static readonly ColumnDescription Data = new ColumnDescription("Data", 9, typeof(string));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 10, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 11, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				CustomPageDataID,
				CustomPageID,
				PaymentProviderID,
				ServiceID,
				MobileOperatorID,
				IsPlainText,
				UseLayout,
				UsePredefinedDiv,
				Title,
				Data,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public CustomPageDataTable(SqlQuery query) : base(query) { }
    public CustomPageDataTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int CustomPageDataID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CustomPageDataID)); } }
		public int CustomPageID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CustomPageID)); } }
		
		public int? PaymentProviderID 
		{
			get
			{
				int index = this.GetIndex(Columns.PaymentProviderID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? ServiceID 
		{
			get
			{
				int index = this.GetIndex(Columns.ServiceID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? MobileOperatorID 
		{
			get
			{
				int index = this.GetIndex(Columns.MobileOperatorID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public bool? IsPlainText 
		{
			get
			{
				int index = this.GetIndex(Columns.IsPlainText);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetBoolean(index);
			}
		}

		
		public bool? UseLayout 
		{
			get
			{
				int index = this.GetIndex(Columns.UseLayout);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetBoolean(index);
			}
		}

		
		public bool? UsePredefinedDiv 
		{
			get
			{
				int index = this.GetIndex(Columns.UsePredefinedDiv);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetBoolean(index);
			}
		}

		public string Title { get { return this.Reader.GetString(this.GetIndex(Columns.Title)); } }
		public string Data { get { return this.Reader.GetString(this.GetIndex(Columns.Data)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public CustomPageData CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, PaymentProvider paymentProvider)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, Service service)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(PaymentProvider paymentProvider, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(Service service, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(PaymentProvider paymentProvider, Service service)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, PaymentProvider paymentProvider, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), (ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, Service service, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), (PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, PaymentProvider paymentProvider, Service service)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), (MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(PaymentProvider paymentProvider, Service service, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		public CustomPageData CreateInstance(CustomPage customPage, PaymentProvider paymentProvider, Service service, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new CustomPageData(this.CustomPageDataID,customPage ?? new CustomPage(this.CustomPageID), paymentProvider ?? (this.PaymentProviderID.HasValue ? new PaymentProvider(this.PaymentProviderID.Value) : null), service ?? (this.ServiceID.HasValue ? new Service(this.ServiceID.Value) : null), mobileOperator ?? (this.MobileOperatorID.HasValue ? new MobileOperator(this.MobileOperatorID.Value) : null), this.IsPlainText,this.UseLayout,this.UsePredefinedDiv,this.Title,this.Data,this.Updated,this.Created); 
		}
		

  }
}

