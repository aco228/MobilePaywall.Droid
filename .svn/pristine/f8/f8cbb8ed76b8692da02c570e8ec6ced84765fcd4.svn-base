using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidPremiumCustomerManager : IDataManager<AndroidPremiumCustomer> 
  {
	

  }

  public partial class AndroidPremiumCustomer : MobilePaywallObject<IAndroidPremiumCustomerManager> 
  {
		private string _androidCustomerUniqueID = String.Empty;
		private AndroidPremiumAplication _androidPremiumAplication;
		private Country _country;
		private string _iPAddress = String.Empty;
		private string _msisdn = String.Empty;
		private string _referrer = String.Empty;
		

		public string AndroidCustomerUniqueID{ get {return this._androidCustomerUniqueID; } set { this._androidCustomerUniqueID = value;} }
		public AndroidPremiumAplication AndroidPremiumAplication 
		{
			get
			{
				if (this._androidPremiumAplication != null &&
						this._androidPremiumAplication.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidPremiumAplication = AndroidPremiumAplication.CreateManager().LazyLoad(this.ConnectionContext, this._androidPremiumAplication.ID) as AndroidPremiumAplication;
					else
						this._androidPremiumAplication = AndroidPremiumAplication.CreateManager().LazyLoad(this._androidPremiumAplication.ID) as AndroidPremiumAplication;
				return this._androidPremiumAplication;
			}
			set { _androidPremiumAplication = value; }
		}

		public Country Country 
		{
			get
			{
				if (this._country != null &&
						this._country.IsEmpty)
					if (this.ConnectionContext != null)
						this._country = Country.CreateManager().LazyLoad(this.ConnectionContext, this._country.ID) as Country;
					else
						this._country = Country.CreateManager().LazyLoad(this._country.ID) as Country;
				return this._country;
			}
			set { _country = value; }
		}

		public string IPAddress{ get {return this._iPAddress; } set { this._iPAddress = value;} }
		public string Msisdn{ get {return this._msisdn; } set { this._msisdn = value;} }
		public string Referrer{ get {return this._referrer; } set { this._referrer = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidPremiumCustomer()
    { 
    }

    public AndroidPremiumCustomer(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidPremiumCustomer(int id,  string androidCustomerUniqueID, AndroidPremiumAplication androidPremiumAplication, Country country, string iPAddress, string msisdn, string referrer, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidCustomerUniqueID = androidCustomerUniqueID;
			this._androidPremiumAplication = androidPremiumAplication;
			this._country = country;
			this._iPAddress = iPAddress;
			this._msisdn = msisdn;
			this._referrer = referrer;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidPremiumCustomer(-1, this.AndroidCustomerUniqueID, this.AndroidPremiumAplication, this.Country,this.IPAddress,this.Msisdn,this.Referrer, DateTime.Now, DateTime.Now);
    }
  }
}

