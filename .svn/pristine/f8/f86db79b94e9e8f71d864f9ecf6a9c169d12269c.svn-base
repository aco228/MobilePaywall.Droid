using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AuctionCreditHistoryTable : TableBase<AuctionCreditHistory>
  {
    public static string GetColumnNames()
    {
      return TableBase<AuctionCreditHistory>.GetColumnNames(string.Empty, AuctionCreditHistoryTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AuctionCreditHistory>.GetColumnNames(tablePrefix, AuctionCreditHistoryTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AuctionCreditHistoryID = new ColumnDescription("AuctionCreditHistoryID", 0, typeof(int));
			public static readonly ColumnDescription AuctionCreditID = new ColumnDescription("AuctionCreditID", 1, typeof(int));
			public static readonly ColumnDescription AuctionCreditPolicyID = new ColumnDescription("AuctionCreditPolicyID", 2, typeof(int));
			public static readonly ColumnDescription CustomerID = new ColumnDescription("CustomerID", 3, typeof(int));
			public static readonly ColumnDescription Amount = new ColumnDescription("Amount", 4, typeof(double));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 5, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 6, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AuctionCreditHistoryID,
				AuctionCreditID,
				AuctionCreditPolicyID,
				CustomerID,
				Amount,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AuctionCreditHistoryTable(SqlQuery query) : base(query) { }
    public AuctionCreditHistoryTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AuctionCreditHistoryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AuctionCreditHistoryID)); } }
		public int AuctionCreditID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AuctionCreditID)); } }
		
		public int? AuctionCreditPolicyID 
		{
			get
			{
				int index = this.GetIndex(Columns.AuctionCreditPolicyID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public int CustomerID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CustomerID)); } }
		public decimal Amount { get { return this.Reader.GetDecimal(this.GetIndex(Columns.Amount)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AuctionCreditHistory CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,new AuctionCredit(this.AuctionCreditID), (AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCredit auctionCredit)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,auctionCredit ?? new AuctionCredit(this.AuctionCreditID), (AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCreditPolicy auctionCreditPolicy)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,new AuctionCredit(this.AuctionCreditID), auctionCreditPolicy ?? (this.AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,new AuctionCredit(this.AuctionCreditID), (AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), customer ?? new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCredit auctionCredit, AuctionCreditPolicy auctionCreditPolicy)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,auctionCredit ?? new AuctionCredit(this.AuctionCreditID), auctionCreditPolicy ?? (this.AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCredit auctionCredit, Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,auctionCredit ?? new AuctionCredit(this.AuctionCreditID), (AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), customer ?? new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCreditPolicy auctionCreditPolicy, Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,new AuctionCredit(this.AuctionCreditID), auctionCreditPolicy ?? (this.AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), customer ?? new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		public AuctionCreditHistory CreateInstance(AuctionCredit auctionCredit, AuctionCreditPolicy auctionCreditPolicy, Customer customer)  
		{ 
			if (!this.HasData) return null;
			return new AuctionCreditHistory(this.AuctionCreditHistoryID,auctionCredit ?? new AuctionCredit(this.AuctionCreditID), auctionCreditPolicy ?? (this.AuctionCreditPolicyID.HasValue ? new AuctionCreditPolicy(this.AuctionCreditPolicyID.Value) : null), customer ?? new Customer(this.CustomerID), this.Amount,this.Updated,this.Created); 
		}
		

  }
}

