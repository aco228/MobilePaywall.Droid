using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class ServiceOfferTable : TableBase<ServiceOffer>
  {
    public static string GetColumnNames()
    {
      return TableBase<ServiceOffer>.GetColumnNames(string.Empty, ServiceOfferTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<ServiceOffer>.GetColumnNames(tablePrefix, ServiceOfferTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription ServiceOfferID = new ColumnDescription("ServiceOfferID", 0, typeof(int));
			public static readonly ColumnDescription Name = new ColumnDescription("Name", 1, typeof(string));
			public static readonly ColumnDescription Description = new ColumnDescription("Description", 2, typeof(string));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 3, typeof(int));
			public static readonly ColumnDescription BusinessModelEntryID = new ColumnDescription("BusinessModelEntryID", 4, typeof(int));
			public static readonly ColumnDescription PaymentConfigurationID = new ColumnDescription("PaymentConfigurationID", 5, typeof(int));
			public static readonly ColumnDescription ContentAccessPolicyID = new ColumnDescription("ContentAccessPolicyID", 6, typeof(int));
			public static readonly ColumnDescription IsDefault = new ColumnDescription("IsDefault", 7, typeof(bool));
			public static readonly ColumnDescription IsActive = new ColumnDescription("IsActive", 8, typeof(bool));
			public static readonly ColumnDescription ValidFrom = new ColumnDescription("ValidFrom", 9, typeof(DateTime));
			public static readonly ColumnDescription ValidTo = new ColumnDescription("ValidTo", 10, typeof(DateTime));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 11, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 12, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				ServiceOfferID,
				Name,
				Description,
				ServiceID,
				BusinessModelEntryID,
				PaymentConfigurationID,
				ContentAccessPolicyID,
				IsDefault,
				IsActive,
				ValidFrom,
				ValidTo,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public ServiceOfferTable(SqlQuery query) : base(query) { }
    public ServiceOfferTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int ServiceOfferID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceOfferID)); } }
		public string Name { get { return this.Reader.GetString(this.GetIndex(Columns.Name)); } }
		public string Description { get { return this.Reader.GetString(this.GetIndex(Columns.Description)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public int BusinessModelEntryID { get { return this.Reader.GetInt32(this.GetIndex(Columns.BusinessModelEntryID)); } }
		public int PaymentConfigurationID { get { return this.Reader.GetInt32(this.GetIndex(Columns.PaymentConfigurationID)); } }
		public int ContentAccessPolicyID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentAccessPolicyID)); } }
		public bool IsDefault { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsDefault)); } }
		public bool IsActive { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsActive)); } }
		
		public DateTime? ValidFrom 
		{
			get
			{
				int index = this.GetIndex(Columns.ValidFrom);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}

		
		public DateTime? ValidTo 
		{
			get
			{
				int index = this.GetIndex(Columns.ValidTo);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public ServiceOffer CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(PaymentConfiguration paymentConfiguration)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(BusinessModelEntry businessModelEntry, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(BusinessModelEntry businessModelEntry, PaymentConfiguration paymentConfiguration)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, BusinessModelEntry businessModelEntry)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(PaymentConfiguration paymentConfiguration, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, PaymentConfiguration paymentConfiguration)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(BusinessModelEntry businessModelEntry, PaymentConfiguration paymentConfiguration, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, BusinessModelEntry businessModelEntry, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, BusinessModelEntry businessModelEntry, PaymentConfiguration paymentConfiguration)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, PaymentConfiguration paymentConfiguration, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServiceOffer CreateInstance(Service service, BusinessModelEntry businessModelEntry, PaymentConfiguration paymentConfiguration, ContentAccessPolicy contentAccessPolicy)  
		{ 
			if (!this.HasData) return null;
			return new ServiceOffer(this.ServiceOfferID,this.Name,this.Description,service ?? new Service(this.ServiceID), businessModelEntry ?? new BusinessModelEntry(this.BusinessModelEntryID), paymentConfiguration ?? new PaymentConfiguration(this.PaymentConfigurationID), contentAccessPolicy ?? new ContentAccessPolicy(this.ContentAccessPolicyID), this.IsDefault,this.IsActive,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		

  }
}

