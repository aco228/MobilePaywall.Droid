using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IGreeceMsisdnManager : IDataManager<GreeceMsisdn> 
  {
	

  }

  public partial class GreeceMsisdn : MobilePaywallObject<IGreeceMsisdnManager> 
  {
		private string _msisdn = String.Empty;
		private MobileOperator _mobileOperator;
		

		public string Msisdn{ get {return this._msisdn; } set { this._msisdn = value;} }
		public MobileOperator MobileOperator 
		{
			get
			{
				if (this._mobileOperator != null &&
						this._mobileOperator.IsEmpty)
					if (this.ConnectionContext != null)
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this.ConnectionContext, this._mobileOperator.ID) as MobileOperator;
					else
						this._mobileOperator = MobileOperator.CreateManager().LazyLoad(this._mobileOperator.ID) as MobileOperator;
				return this._mobileOperator;
			}
			set { _mobileOperator = value; }
		}

		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public GreeceMsisdn()
    { 
    }

    public GreeceMsisdn(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public GreeceMsisdn(int id,  string msisdn, MobileOperator mobileOperator, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._msisdn = msisdn;
			this._mobileOperator = mobileOperator;
			
    }

    public override object Clone(bool deepClone)
    {
      return new GreeceMsisdn(-1, this.Msisdn, this.MobileOperator, DateTime.Now, DateTime.Now);
    }
  }
}

