using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class AuctionRoundTable : TableBase<AuctionRound>
  {
    public static string GetColumnNames()
    {
      return TableBase<AuctionRound>.GetColumnNames(string.Empty, AuctionRoundTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<AuctionRound>.GetColumnNames(tablePrefix, AuctionRoundTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription AuctionRoundID = new ColumnDescription("AuctionRoundID", 0, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 1, typeof(int));
			public static readonly ColumnDescription ContentGroupID = new ColumnDescription("ContentGroupID", 2, typeof(int));
			public static readonly ColumnDescription ContentID = new ColumnDescription("ContentID", 3, typeof(int));
			public static readonly ColumnDescription AuctionBidID = new ColumnDescription("AuctionBidID", 4, typeof(int));
			public static readonly ColumnDescription IntervalID = new ColumnDescription("IntervalID", 5, typeof(int));
			public static readonly ColumnDescription IntervalValue = new ColumnDescription("IntervalValue", 6, typeof(int));
			public static readonly ColumnDescription ValidFrom = new ColumnDescription("ValidFrom", 7, typeof(DateTime));
			public static readonly ColumnDescription ValidTo = new ColumnDescription("ValidTo", 8, typeof(DateTime));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 9, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 10, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				AuctionRoundID,
				ServiceID,
				ContentGroupID,
				ContentID,
				AuctionBidID,
				IntervalID,
				IntervalValue,
				ValidFrom,
				ValidTo,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public AuctionRoundTable(SqlQuery query) : base(query) { }
    public AuctionRoundTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int AuctionRoundID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AuctionRoundID)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		
		public int? ContentGroupID 
		{
			get
			{
				int index = this.GetIndex(Columns.ContentGroupID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? ContentID 
		{
			get
			{
				int index = this.GetIndex(Columns.ContentID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public int? AuctionBidID 
		{
			get
			{
				int index = this.GetIndex(Columns.AuctionBidID);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		public int IntervalID { get { return this.Reader.GetInt32(this.GetIndex(Columns.IntervalID)); } }
		public int IntervalValue { get { return this.Reader.GetInt32(this.GetIndex(Columns.IntervalValue)); } }
		public DateTime ValidFrom { get { return this.Reader.GetDateTime(this.GetIndex(Columns.ValidFrom)); } }
		
		public DateTime? ValidTo 
		{
			get
			{
				int index = this.GetIndex(Columns.ValidTo);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public AuctionRound CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Content content)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(ContentGroup contentGroup)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Content content, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(ContentGroup contentGroup, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(ContentGroup contentGroup, Content content)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, Content content)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, ContentGroup contentGroup)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(ContentGroup contentGroup, Content content, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, Content content, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), (ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, ContentGroup contentGroup, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), (ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, ContentGroup contentGroup, Content content)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), (AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public AuctionRound CreateInstance(Service service, ContentGroup contentGroup, Content content, AuctionBid auctionBid)  
		{ 
			if (!this.HasData) return null;
			return new AuctionRound(this.AuctionRoundID,service ?? new Service(this.ServiceID), contentGroup ?? (this.ContentGroupID.HasValue ? new ContentGroup(this.ContentGroupID.Value) : null), content ?? (this.ContentID.HasValue ? new Content(this.ContentID.Value) : null), auctionBid ?? (this.AuctionBidID.HasValue ? new AuctionBid(this.AuctionBidID.Value) : null), (Interval)this.IntervalID,this.IntervalValue,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		

  }
}

