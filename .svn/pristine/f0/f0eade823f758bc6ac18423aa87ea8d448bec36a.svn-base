@model MobilePaywall.Web.Models.ContentModel
@{
  Layout = string.Format("~/Views/{0}/_Layout/_Layout.cshtml", PaywallHttpContext.Current.Service.ServiceData.Template.Name);
}

@Styles.Render("~/Style/Pink/Video")

<style>

</style>
<div class="videoPageWrapper">
  <div id="subheader">@Translations.Web.Content.Stream</div>
  <div id="videoswrapper">
    <div id="text">

      <video id="video_stream" poster="@Model.Content.GetThumbnailUrl(this.Request.UserAgent)" controls>
        @foreach (MobilePaywall.ContentStreamingOption streamOption in Model.ContentStreamingOptions)
        {
          <source src="@Model.AppendSessionID(streamOption)" type="@streamOption.MimeType" />
          <source src="@Model.AppendSessionID(streamOption)" />
        }
      </video>
      <div class="videoDetails">
        <div class="title">@Model.Content.DefaultTitle</div>
        <div class="subtitle">@Model.Content.DefaultDescription</div>
      </div>
    </div>

  </div>


  <div id="subheader">@Translations.Web.Content.Download</div>
  <div id="videoswrapper" style=" padding-top: 10px;">
    <div id="text">
      @{
        List<MobilePaywall.ContentDownloadOption> downloadList = Model.ContentDownloadOptions;
        foreach (MobilePaywall.ContentDownloadOption downloadOption in downloadList)
        {
          <div class="download_option">
            <div class="download_title">@downloadOption.Label</div>
            <a href="@Model.AppendSessionID(downloadOption)"><button class="btn download_button">@Translations.Web.Content.Download</button></a>
          </div>
        }
      }
    </div>
  </div>
</div>