using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class ContentThumbnailManager : IContentThumbnailManager
  {
		public T Load<T>(Content content)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load<T>(connection, content);
		}

		public T Load<T>(IConnectionInfo connection, Content content)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load<T>(sqlConnection, content);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load<T>(sqlConnection, content);
		}

		public T Load<T>(ISqlConnectionInfo connection, Content content)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID";
			parameters.Arguments.Add("ContentID", content.ID);
			if (typeof(T).Equals(typeof(List<ContentThumbnail>)))
				return (T)Convert.ChangeType(this.LoadMany(connection, parameters), typeof(T));
			else
				return (T)Convert.ChangeType(this.Load(connection, parameters), typeof(T));
		}

		public ContentThumbnail Load(int contentID, bool? isDefault)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, contentID, isDefault);
		}

		public ContentThumbnail Load(IConnectionInfo connection, int contentID, bool? isDefault)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, contentID, isDefault);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, contentID, isDefault);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, int contentID, bool? isDefault)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = string.Format("[ct].ContentID = @ContentID {0}", isDefault.HasValue ?  isDefault.Value ? " AND [ct].IsDefault = 1" : " AND [ct].IsDefault = 0" : "");
			parameters.Arguments.Add("ContentID", contentID);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, ImageFormat imageFormat)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, imageFormat);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, ImageFormat imageFormat)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, imageFormat);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, imageFormat);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, ImageFormat imageFormat)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].ImageFormatID = @ImageFormatID";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("ImageFormatID", imageFormat.ID);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, string mimeType)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, mimeType);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, string mimeType)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, mimeType);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, mimeType);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, string mimeType)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].MimeType = @MimeType";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("MimeType", mimeType);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, imageFormat, visualMediaDimensions);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, imageFormat, visualMediaDimensions);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, imageFormat, visualMediaDimensions);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].ImageFormatID = @ImageFormatID AND [ct].VisualMediaDimensionsID = @VisualMediaDimensionsID";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("ImageFormatID", imageFormat.ID);
			parameters.Arguments.Add("VisualMediaDimensionsID", visualMediaDimensions.ID);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions, bool isDefault)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, imageFormat, visualMediaDimensions, isDefault);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions, bool isDefault)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, imageFormat, visualMediaDimensions, isDefault);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, imageFormat, visualMediaDimensions, isDefault);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, ImageFormat imageFormat, VisualMediaDimensions visualMediaDimensions, bool isDefault)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].ImageFormatID = @ImageFormatID AND [ct].VisualMediaDimensionsID = @VisualMediaDimensionsID AND [ct].IsDefault = @IsDefault";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("ImageFormatID", imageFormat.ID);
			parameters.Arguments.Add("VisualMediaDimensionsID", visualMediaDimensions.ID);
			parameters.Arguments.Add("IsDefault", isDefault ? 1 : 0);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, ImageFormat imageFormat, bool isDefault)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, imageFormat, isDefault);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, ImageFormat imageFormat, bool isDefault)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, imageFormat, isDefault);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, imageFormat, isDefault);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, ImageFormat imageFormat, bool isDefault)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].ImageFormatID = @ImageFormatID AND [ct].IsDefault = @IsDefault";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("ImageFormatID", imageFormat.ID);
			parameters.Arguments.Add("IsDefault", isDefault ? 1 : 0);
			return this.Load(connection, parameters);
		}


		public ContentThumbnail Load(Content content, bool isDefault)
		{
			using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
				return this.Load(connection, content, isDefault);
		}

		public ContentThumbnail Load(IConnectionInfo connection, Content content, bool isDefault)
		{
			ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
			if (sqlConnection != null)
				return this.Load(sqlConnection, content, isDefault);
			using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
				return this.Load(sqlConnection, content, isDefault);
		}

		public ContentThumbnail Load(ISqlConnectionInfo connection, Content content, bool isDefault)
		{
			SqlQueryParameters parameters = new SqlQueryParameters();
			parameters.Where = "[ct].ContentID = @ContentID AND [ct].IsDefault = @IsDefault";
			parameters.Arguments.Add("ContentID", content.ID);
			parameters.Arguments.Add("IsDefault", isDefault ? 1 : 0);
			return this.Load(connection, parameters);
		}
	}
}

