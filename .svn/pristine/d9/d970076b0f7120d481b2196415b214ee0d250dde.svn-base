using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class ServicePriceTable : TableBase<ServicePrice>
  {
    public static string GetColumnNames()
    {
      return TableBase<ServicePrice>.GetColumnNames(string.Empty, ServicePriceTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<ServicePrice>.GetColumnNames(tablePrefix, ServicePriceTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription ServicePriceID = new ColumnDescription("ServicePriceID", 0, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 1, typeof(int));
			public static readonly ColumnDescription ServiceOfferID = new ColumnDescription("ServiceOfferID", 2, typeof(int));
			public static readonly ColumnDescription MobileOperatorID = new ColumnDescription("MobileOperatorID", 3, typeof(int));
			public static readonly ColumnDescription CurrencyID = new ColumnDescription("CurrencyID", 4, typeof(int));
			public static readonly ColumnDescription Gross = new ColumnDescription("Gross", 5, typeof(double));
			public static readonly ColumnDescription Payout = new ColumnDescription("Payout", 6, typeof(double));
			public static readonly ColumnDescription ValidFrom = new ColumnDescription("ValidFrom", 7, typeof(DateTime));
			public static readonly ColumnDescription ValidTo = new ColumnDescription("ValidTo", 8, typeof(DateTime));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 9, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 10, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				ServicePriceID,
				ServiceID,
				ServiceOfferID,
				MobileOperatorID,
				CurrencyID,
				Gross,
				Payout,
				ValidFrom,
				ValidTo,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public ServicePriceTable(SqlQuery query) : base(query) { }
    public ServicePriceTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int ServicePriceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServicePriceID)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public int ServiceOfferID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceOfferID)); } }
		public int MobileOperatorID { get { return this.Reader.GetInt32(this.GetIndex(Columns.MobileOperatorID)); } }
		public int CurrencyID { get { return this.Reader.GetInt32(this.GetIndex(Columns.CurrencyID)); } }
		public decimal Gross { get { return this.Reader.GetDecimal(this.GetIndex(Columns.Gross)); } }
		
		public decimal? Payout 
		{
			get
			{
				int index = this.GetIndex(Columns.Payout);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDecimal(index);
			}
		}

		public DateTime ValidFrom { get { return this.Reader.GetDateTime(this.GetIndex(Columns.ValidFrom)); } }
		
		public DateTime? ValidTo 
		{
			get
			{
				int index = this.GetIndex(Columns.ValidTo);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetDateTime(index);
			}
		}

		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public ServicePrice CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(MobileOperator mobileOperator, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(ServiceOffer serviceOffer, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(ServiceOffer serviceOffer, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, ServiceOffer serviceOffer)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, MobileOperator mobileOperator, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(ServiceOffer serviceOffer, MobileOperator mobileOperator, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, ServiceOffer serviceOffer, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, ServiceOffer serviceOffer, MobileOperator mobileOperator)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		public ServicePrice CreateInstance(Service service, ServiceOffer serviceOffer, MobileOperator mobileOperator, Currency currency)  
		{ 
			if (!this.HasData) return null;
			return new ServicePrice(this.ServicePriceID,service ?? new Service(this.ServiceID), serviceOffer ?? new ServiceOffer(this.ServiceOfferID), mobileOperator ?? new MobileOperator(this.MobileOperatorID), currency ?? new Currency(this.CurrencyID), this.Gross,this.Payout,this.ValidFrom,this.ValidTo,this.Updated,this.Created); 
		}
		

  }
}

