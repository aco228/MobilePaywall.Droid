using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IVersionManager : IDataManager<Version> 
  {
	

  }

  public partial class Version : MobilePaywallObject<IVersionManager> 
  {
		private Platform _platform;
		private ArchitectureType _architectureType;
		private string _name = String.Empty;
		private string _code = String.Empty;
		private int _index = -1;
		

		public Platform Platform 
		{
			get
			{
				if (this._platform != null &&
						this._platform.IsEmpty)
					if (this.ConnectionContext != null)
						this._platform = Platform.CreateManager().LazyLoad(this.ConnectionContext, this._platform.ID) as Platform;
					else
						this._platform = Platform.CreateManager().LazyLoad(this._platform.ID) as Platform;
				return this._platform;
			}
			set { _platform = value; }
		}

		public ArchitectureType ArchitectureType 
		{
			get
			{
				if (this._architectureType != null &&
						this._architectureType.IsEmpty)
					if (this.ConnectionContext != null)
						this._architectureType = ArchitectureType.CreateManager().LazyLoad(this.ConnectionContext, this._architectureType.ID) as ArchitectureType;
					else
						this._architectureType = ArchitectureType.CreateManager().LazyLoad(this._architectureType.ID) as ArchitectureType;
				return this._architectureType;
			}
			set { _architectureType = value; }
		}

		public string Name{ get {return this._name; } set { this._name = value;} }
		public string Code{ get {return this._code; } set { this._code = value;} }
		public int Index{ get {return this._index; } set { this._index = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public Version()
    { 
    }

    public Version(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public Version(int id,  Platform platform, ArchitectureType architectureType, string name, string code, int index, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._platform = platform;
			this._architectureType = architectureType;
			this._name = name;
			this._code = code;
			this._index = index;
			
    }

    public override object Clone(bool deepClone)
    {
      return new Version(-1,  this.Platform, this.ArchitectureType,this.Name,this.Code,this.Index, DateTime.Now, DateTime.Now);
    }
  }
}

