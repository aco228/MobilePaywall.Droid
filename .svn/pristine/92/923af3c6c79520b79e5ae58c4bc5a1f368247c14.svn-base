using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;



namespace MobilePaywall.Data.Sql
{
  public partial class ImageContentManager : IImageContentManager
  {
    public List<ImageContent> Load()
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection);
    }

    public List<ImageContent> Load(IConnectionInfo connection)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection);
    }

    public List<ImageContent> Load(ISqlConnectionInfo connection)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      return this.LoadMany(connection, parameters);
    }



    public List<ImageContent> Load(ContentGroup contentGroup)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, contentGroup);
    }

    public List<ImageContent> Load(IConnectionInfo connection, ContentGroup contentGroup)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, contentGroup);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, contentGroup);
    }

    public List<ImageContent> Load(ISqlConnectionInfo connection, ContentGroup contentGroup)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[ic_c].ContentGroupID=@ContentGroupID";
      parameters.Arguments.Add("ContentGroupID", contentGroup.ID);
      return this.LoadMany(connection, parameters);
    }


    public ImageContent Load(Content content)
    {
      using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
        return this.Load(connection, content);
    }

    public ImageContent Load(IConnectionInfo connection, Content content)
    {
      ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
      if (sqlConnection != null)
        return this.Load(sqlConnection, content);
      using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
        return this.Load(sqlConnection, content);
    }

    public ImageContent Load(ISqlConnectionInfo connection, Content content)
    {
      SqlQueryParameters parameters = new SqlQueryParameters();
      parameters.Where = "[ic].ContentID=@ContentID";
      parameters.Arguments.Add("ContentID", content.ID);
      return this.Load(connection, parameters);
    }


    //public List<ImageContent> Load(int from)
    //{
    //  using (SqlConnectionInfo connection = new SqlConnectionInfo(this.Type))
    //    return this.Load(connection, from);
    //}

    //public List<ImageContent> Load(IConnectionInfo connection, int from)
    //{
    //  ISqlConnectionInfo sqlConnection = connection as ISqlConnectionInfo;
    //  if (sqlConnection != null)
    //    return this.Load(sqlConnection, from);
    //  using (sqlConnection = new SqlConnectionInfo(connection, this.Type))
    //    return this.Load(sqlConnection, from);
    //}

    //public List<ImageContent> Load(ISqlConnectionInfo connection, int from)
    //{
    //  SqlQueryParameters parameters = new SqlQueryParameters();
    //  parameters.Where = "[ic].ContentID >= "+ from;
    //  //parameters.OrderBy = "abbr.PrimaryKeyColumnID DESC";
    //  //parameters.Arguments.Add("MyParam", "MyValue");
    //  //return this.Load(connection, parameters);
    //  return this.LoadMany(connection, parameters);
    //}




  }
}

