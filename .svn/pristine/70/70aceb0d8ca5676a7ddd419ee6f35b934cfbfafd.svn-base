using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class TemplateServiceInfoTable : TableBase<TemplateServiceInfo>
  {
    public static string GetColumnNames()
    {
      return TableBase<TemplateServiceInfo>.GetColumnNames(string.Empty, TemplateServiceInfoTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<TemplateServiceInfo>.GetColumnNames(tablePrefix, TemplateServiceInfoTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription TemplateServiceInfoID = new ColumnDescription("TemplateServiceInfoID", 0, typeof(int));
			public static readonly ColumnDescription ServiceID = new ColumnDescription("ServiceID", 1, typeof(int));
			public static readonly ColumnDescription TemplateServiceTypeID = new ColumnDescription("TemplateServiceTypeID", 2, typeof(int));
			public static readonly ColumnDescription Progress = new ColumnDescription("Progress", 3, typeof(int));
			public static readonly ColumnDescription Color = new ColumnDescription("Color", 4, typeof(int));
			public static readonly ColumnDescription Contact = new ColumnDescription("Contact", 5, typeof(string));
			public static readonly ColumnDescription Price = new ColumnDescription("Price", 6, typeof(string));
			public static readonly ColumnDescription TrckdEnabled = new ColumnDescription("TrckdEnabled", 7, typeof(bool));
			public static readonly ColumnDescription IsPremiumSms = new ColumnDescription("IsPremiumSms", 8, typeof(bool));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 9, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 10, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				TemplateServiceInfoID,
				ServiceID,
				TemplateServiceTypeID,
				Progress,
				Color,
				Contact,
				Price,
				TrckdEnabled,
				IsPremiumSms,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public TemplateServiceInfoTable(SqlQuery query) : base(query) { }
    public TemplateServiceInfoTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int TemplateServiceInfoID { get { return this.Reader.GetInt32(this.GetIndex(Columns.TemplateServiceInfoID)); } }
		public int ServiceID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ServiceID)); } }
		public int TemplateServiceTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.TemplateServiceTypeID)); } }
		public int Progress { get { return this.Reader.GetInt32(this.GetIndex(Columns.Progress)); } }
		
		public int? Color 
		{
			get
			{
				int index = this.GetIndex(Columns.Color);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetInt32(index);
			}
		}

		
		public string Contact 
		{
			get
			{
				int index = this.GetIndex(Columns.Contact);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		
		public string Price 
		{
			get
			{
				int index = this.GetIndex(Columns.Price);
				if (this.Reader.IsDBNull(index)) return null;
				return this.Reader.GetString(index);
			}
		}

		public bool TrckdEnabled { get { return this.Reader.GetBoolean(this.GetIndex(Columns.TrckdEnabled)); } }
		public bool IsPremiumSms { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsPremiumSms)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public TemplateServiceInfo CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceInfo(this.TemplateServiceInfoID,new Service(this.ServiceID), (TemplateServiceType)this.TemplateServiceTypeID,this.Progress,this.Color,this.Contact,this.Price,this.TrckdEnabled,this.IsPremiumSms,this.Updated,this.Created); 
		}
		public TemplateServiceInfo CreateInstance(Service service)  
		{ 
			if (!this.HasData) return null;
			return new TemplateServiceInfo(this.TemplateServiceInfoID,service ?? new Service(this.ServiceID), (TemplateServiceType)this.TemplateServiceTypeID,this.Progress,this.Color,this.Contact,this.Price,this.TrckdEnabled,this.IsPremiumSms,this.Updated,this.Created); 
		}
		

  }
}

