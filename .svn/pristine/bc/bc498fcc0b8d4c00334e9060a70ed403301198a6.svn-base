using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti;
using Senti.Data;
using Senti.Data.Sql;

using MobilePaywall.Data;


namespace MobilePaywall.Data.Sql
{
  public class ContentTable : TableBase<Content>
  {
    public static string GetColumnNames()
    {
      return TableBase<Content>.GetColumnNames(string.Empty, ContentTable.Columns.Item);
    }

    public static string GetColumnNames(string tablePrefix)
    {
      return TableBase<Content>.GetColumnNames(tablePrefix, ContentTable.Columns.Item);
    }

    public class Columns
    {
		
			public static readonly ColumnDescription ContentID = new ColumnDescription("ContentID", 0, typeof(int));
			public static readonly ColumnDescription ContentGroupID = new ColumnDescription("ContentGroupID", 1, typeof(int));
			public static readonly ColumnDescription ContentTypeID = new ColumnDescription("ContentTypeID", 2, typeof(int));
			public static readonly ColumnDescription ContentStorageID = new ColumnDescription("ContentStorageID", 3, typeof(int));
			public static readonly ColumnDescription AgeRatingID = new ColumnDescription("AgeRatingID", 4, typeof(int));
			public static readonly ColumnDescription IsEnabled = new ColumnDescription("IsEnabled", 5, typeof(bool));
			public static readonly ColumnDescription Updated = new ColumnDescription("Updated", 6, typeof(DateTime));
			public static readonly ColumnDescription Created = new ColumnDescription("Created", 7, typeof(DateTime));
			

			public static readonly ColumnDescription[] Item = new ColumnDescription[] 
			{
				ContentID,
				ContentGroupID,
				ContentTypeID,
				ContentStorageID,
				AgeRatingID,
				IsEnabled,
				Updated,
				Created
			};
    }

    public override int ColumnCount
    {
      get { return Columns.Item.Length; }
    }

    public ContentTable(SqlQuery query) : base(query) { }
    public ContentTable(SqlQuery query, ColumnSelectMode selectMode,
                           params ColumnDescription[] columns)
      : base(query, selectMode, columns) { }

    public ColumnDescription this[int index] { get { return Columns.Item[index]; } }

		public int ContentID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentID)); } }
		public int ContentGroupID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentGroupID)); } }
		public int ContentTypeID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentTypeID)); } }
		public int ContentStorageID { get { return this.Reader.GetInt32(this.GetIndex(Columns.ContentStorageID)); } }
		public int AgeRatingID { get { return this.Reader.GetInt32(this.GetIndex(Columns.AgeRatingID)); } }
		public bool IsEnabled { get { return this.Reader.GetBoolean(this.GetIndex(Columns.IsEnabled)); } }
		public DateTime Updated { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Updated)); } }
		public DateTime Created { get { return this.Reader.GetDateTime(this.GetIndex(Columns.Created)); } }
		

	  public Content CreateInstance()  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentStorage contentStorage)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentType contentType)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentStorage contentStorage, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentType contentType, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentStorage contentStorage)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentType contentType)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentType contentType, ContentStorage contentStorage)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentStorage contentStorage, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentType contentType, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentType contentType, ContentStorage contentStorage, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentType contentType, ContentStorage contentStorage)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		public Content CreateInstance(ContentGroup contentGroup, ContentType contentType, ContentStorage contentStorage, AgeRating ageRating)  
		{ 
			if (!this.HasData) return null;
			return new Content(this.ContentID,contentGroup ?? new ContentGroup(this.ContentGroupID), contentType ?? new ContentType(this.ContentTypeID), contentStorage ?? new ContentStorage(this.ContentStorageID), ageRating ?? new AgeRating(this.AgeRatingID), this.IsEnabled,this.Updated,this.Created); 
		}
		

  }
}

