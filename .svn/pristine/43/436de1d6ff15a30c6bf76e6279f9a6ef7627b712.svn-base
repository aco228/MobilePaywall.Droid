using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface ISkypeNotificationManager : IDataManager<SkypeNotification> 
  {
	

  }

  public partial class SkypeNotification : MobilePaywallObject<ISkypeNotificationManager> 
  {
		private string _sender = String.Empty;
		private string _identifier = String.Empty;
		private string _message = String.Empty;
		

		public string Sender{ get {return this._sender; } set { this._sender = value;} }
		public string Identifier{ get {return this._identifier; } set { this._identifier = value;} }
		public string Message{ get {return this._message; } set { this._message = value;} }
		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public SkypeNotification()
    { 
    }

    public SkypeNotification(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public SkypeNotification(int id,  string sender, string identifier, string message, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._sender = sender;
			this._identifier = identifier;
			this._message = message;
			
    }

    public override object Clone(bool deepClone)
    {
      return new SkypeNotification(-1, this.Sender,this.Identifier,this.Message, DateTime.Now, DateTime.Now);
    }
  }
}

