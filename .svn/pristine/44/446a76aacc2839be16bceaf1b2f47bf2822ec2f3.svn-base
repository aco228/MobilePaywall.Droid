using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Senti.Data;
using MobilePaywall.Data;

 

namespace MobilePaywall.Data 
{
  public partial interface IAndroidClientSessionOLCacheMapManager : IDataManager<AndroidClientSessionOLCacheMap> 
  {
	

  }

  public partial class AndroidClientSessionOLCacheMap : MobilePaywallObject<IAndroidClientSessionOLCacheMapManager> 
  {
		private AndroidClientSession _androidClientSession;
		private OLCache _oLCache;
		

		public AndroidClientSession AndroidClientSession 
		{
			get
			{
				if (this._androidClientSession != null &&
						this._androidClientSession.IsEmpty)
					if (this.ConnectionContext != null)
						this._androidClientSession = AndroidClientSession.CreateManager().LazyLoad(this.ConnectionContext, this._androidClientSession.ID) as AndroidClientSession;
					else
						this._androidClientSession = AndroidClientSession.CreateManager().LazyLoad(this._androidClientSession.ID) as AndroidClientSession;
				return this._androidClientSession;
			}
			set { _androidClientSession = value; }
		}

		public OLCache OLCache 
		{
			get
			{
				if (this._oLCache != null &&
						this._oLCache.IsEmpty)
					if (this.ConnectionContext != null)
						this._oLCache = OLCache.CreateManager().LazyLoad(this.ConnectionContext, this._oLCache.ID) as OLCache;
					else
						this._oLCache = OLCache.CreateManager().LazyLoad(this._oLCache.ID) as OLCache;
				return this._oLCache;
			}
			set { _oLCache = value; }
		}

		

    public override bool IsInsertable { get { return true;} }

    public override bool IsDeletable { get { return false;} }

    public override bool IsUpdatable { get { return true;} }

    public AndroidClientSessionOLCacheMap()
    { 
    }

    public AndroidClientSessionOLCacheMap(int id): base(id, DateTime.Now, DateTime.Now, true)
    {
    }

    public AndroidClientSessionOLCacheMap(int id,  AndroidClientSession androidClientSession, OLCache oLCache, DateTime updated, DateTime created): base(id, updated, created, false)
    {
			this._androidClientSession = androidClientSession;
			this._oLCache = oLCache;
			
    }

    public override object Clone(bool deepClone)
    {
      return new AndroidClientSessionOLCacheMap(-1,  this.AndroidClientSession, this.OLCache, DateTime.Now, DateTime.Now);
    }
  }
}

